
#Область ПрограммныйИнтерфейс

// Начинает выбор экземпляра кассовой техники для выполнения операции, после чего переходит к процедуре
//  обработке команды
//
// Параметры:
//  КлючФормы		 - УникальныйИдентификатор	 - уникальный идентификатор формы, из которой вызывается операция закрытия смены
//  ИмяКоманды		 - Строка					 - имя выполняемой команды
//  ПараметрыКоманды - Структура				 - дополнительные параметры
//
Процедура ВыполнитьОперацию(КлючФормы, ИмяКоманды, ПараметрыКоманды = Неопределено) Экспорт
	
	ПоддерживаемыеТипыВО = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ИдентификаторКлиента", КлючФормы);
	ДополнительныеПараметры.Вставить("ИмяКоманды", ИмяКоманды);
	Если ПараметрыКоманды <> Неопределено И ПараметрыКоманды.Свойство("Сумма") Тогда
		ДополнительныеПараметры.Вставить("Сумма", ПараметрыКоманды.Сумма);
	КонецЕсли;     

	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьОперациюВыбораУстройства", ЭтотОбъект, ДополнительныеПараметры);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru = 'Выберите фискальное устройство'"));
	
КонецПроцедуры

// Выполняет операцию, вызывается после выбора экземпляра подключаемого оборудования, для которого
//  выполняется операция
//
// Параметры:
//  РезультатВыбора			 - Структура - результат выполнения подключения
//  *Результат - Булево - результат операции.
//  *ОписаниеОшибки - ИнформацияОбОшибке - информация об ошибке.
//  *ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - подключаемое оборудование.
//  ДополнительныеПараметры	 - Структура - дополнительные параметры
//  *ИдентификаторКлиента	- УникальныйИдентификатор	- уникальный идентификатор формы, из которой вызывается операция открытия смены
//  *ИмяКоманды	- Строка	- имя выполняемой команды
//
Процедура ВыполнитьОперациюВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВыбора.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При операции произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", РезультатВыбора.ОписаниеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;

	Оповестить(СобытиеВыполняетсяОперацияКассовойСмены());

	Если ДополнительныеПараметры.ИмяКоманды = "Внесение" Или ДополнительныеПараметры.ИмяКоманды = "Выемка" Тогда
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыИнкассации();
		ПараметрыОперации.Сумма = ДополнительныеПараметры.Сумма;
		ПараметрыОперации.ТипИнкассации = ?(ДополнительныеПараметры.ИмяКоманды = "Внесение", 1, 0);
	Иначе
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	КонецЕсли;
	
	СтандартнаяОбработка = Истина;
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(ПараметрыОперации.Кассир, СтандартнаяОбработка);
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИННКассира(ПараметрыОперации.КассирИНН, СтандартнаяОбработка);

	Если ДополнительныеПараметры.ИмяКоманды = "ОткрытьСмену" Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОткрытьСменуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, 
			ДополнительныеПараметры.ИдентификаторКлиента, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	//ИначеЕсли ДополнительныеПараметры.ИмяКоманды = "ЗакрытьСмену" Тогда
	//	ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, 
	//		ДополнительныеПараметры.ИдентификаторКлиента, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	ИначеЕсли ДополнительныеПараметры.ИмяКоманды = "ОтчетОТекущемСостоянииРасчетов" Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, 
			ДополнительныеПараметры.ИдентификаторКлиента, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	ИначеЕсли ДополнительныеПараметры.ИмяКоманды = "ОтчетБезГашения" Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаБезГашения(ОповещениеПриЗавершении, 
			ДополнительныеПараметры.ИдентификаторКлиента, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	ИначеЕсли ДополнительныеПараметры.ИмяКоманды = "Внесение" Или ДополнительныеПараметры.ИмяКоманды = "Выемка" Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьИнкассациюНаФискальномУстройстве(ОповещениеПриЗавершении, 
			ДополнительныеПараметры.ИдентификаторКлиента, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

// Формирует документы "ОтчетОРозничныхПродажах", а также на кассовом аппарате закрывает
// смену и формирует отчет о закрытии смены (Z-отчет)
//
// Параметры:
//  КлючФормы - УникальныйИдентификатор - уникальный идентификатор формы, из которой вызывается операция закрытия смены
//  КомпоновщикНастроек - КомпоновщикНастроекКомпоновкиДанных - передается из формы при вызове операции закрытия смены,
//                        значения отборов из данного компоновщика могут использоваться в качестве значений по-умолчанию
//                        во время выполнения операции
//
Процедура ЗакрытьСмену(КлючФормы, Знач КомпоновщикНастроек) Экспорт
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		РабочееМесто = МенеджерОборудованияКлиентПовтИсп.РабочееМестоКлиента();
	Иначе
		РабочееМесто = Неопределено;
	КонецЕсли;
	
	ДанныеЗакрытия = КассовыеСменыВызовСервераБП.ДанныеЗакрытияКассовойСмены(РабочееМесто,
		КлючФормы, КомпоновщикНастроек);
		
	Если Не ЗначениеЗаполнено(ДанныеЗакрытия.ОткрытыеСмены) Тогда
		Возврат;
	ИначеЕсли ДанныеЗакрытия.ОткрытыеСмены.Количество() = 1 Тогда
		ЗакрытьСменуЗавершение(ДанныеЗакрытия.ОткрытыеСмены[0], ДанныеЗакрытия);
	Иначе
		// Если найдено несколько открытых смен, пользователю предлагается выбрать организацию и
		// кассовое устройство, чтобы по этим параметрам определить, какую смену необходимо закрыть
		//
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ЗакрытьСменуЗавершение", ЭтотОбъект, ДанныеЗакрытия);
		ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаЗакрытиеСмены", ДанныеЗакрытия, , , , ,
			ОповещениеПриЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает имя события для оповещения о начале операции, блокирующей работу с кассовой сменой
// 
// Возвращаемое значение:
//  Строка - имя события, которое оповещает о том, что работа с кассовой сменой должна быть заблокирована
//           на время выполнения операции
//
Функция СобытиеВыполняетсяОперацияКассовойСмены() Экспорт
	Возврат "ВыполняетсяОперацияБлокирующаяКассовуюСмену";
КонецФункции

// Возвращает имя события для оповещения о завершении операции, блокирующей работу с кассовой сменой
// 
// Возвращаемое значение:
//  Строка - имя события, оповещающее о возможности возобновления работы с кассовой сменой
//
Функция СобытиеЗавершиласьОперацияКассовойСмены() Экспорт
	Возврат "ЗавершенаОперацияБлокирующаяКассовуюСмену";
КонецФункции

// Возвращает имя события для оповещения об ошибке при выполнении оперции откртия кассовой смены
Функция СобытиеОшибкаОткрытияСмены() Экспорт
	Возврат "ОшибкаОткрытияКассовойСмены";
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыРозничныхПродажСуществуют(Организация = Неопределено, ИдентификаторУстройства = Неопределено) Экспорт
	
	Возврат КассовыеСменыВызовСервераБП.ПараметрыРозничныхПродажСуществуют(Организация, ИдентификаторУстройства);	

КонецФункции // ПараметрыРозничныхПродажСуществуют()

Процедура ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт

	Оповестить(СобытиеЗавершиласьОперацияКассовойСмены());
	
	Если РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru='Операция успешно завершена.'");
	Иначе
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

// Продолжение операции закрытия кассовой смены, вызывается после того как пользователь выбрал значения
// реквизитов, по которым можно определить какую именно кассовую смену требуется закрыть (или эти значения
// определены автоматически, в том случае, когда открытая кассовая смена всего одна)
//
// Параметры:
//  Результат - Структура, Неопределено - содержит следующие свойства, по которым будет определена кассовая смена для
//                                        выполнения операции закрытия:
//                                        * Организация
//                                        * ИдентификаторУстройства
//                                       принимает значение Неопределено если пользователь отказался выбирать реквизиты
//  ДанныеЗакрытия - Структура - содержит параметры операции закрытия кассовой смены.
//                               Подробнее см. КассовыеСменыВызовСервераБП.НовыеДанныеЗакрытияКассовойСмены
//
Процедура ЗакрытьСменуЗавершение(Результат, ДанныеЗакрытия) Экспорт
	
	// Если в форме закрытия смены пользователь нажал "Отмена"
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗакрытия.Организация = Результат.Организация;

	Если ЗначениеЗаполнено(Результат.ИдентификаторУстройства) Тогда
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
		Если ЗначениеЗаполнено(ДанныеЗакрытия.Кассир) Тогда 
			ПараметрыОперации.Кассир = ДанныеЗакрытия.Кассир;
		Иначе 
			СтандартнаяОбработка = Ложь;
			МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(ПараметрыОперации.Кассир, СтандартнаяОбработка);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗакрытия.КассирИНН) Тогда 
			ПараметрыОперации.КассирИНН = ДанныеЗакрытия.КассирИНН;
		Иначе 
			СтандартнаяОбработка = Ложь;
			МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИННКассира(ПараметрыОперации.КассирИНН, СтандартнаяОбработка);
		КонецЕсли;	
		
		Оповестить(СобытиеВыполняетсяОперацияКассовойСмены());
		
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПечатьФискальногоОтчетаЗавершение", ЭтотОбъект, ДанныеЗакрытия);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении,
			ДанныеЗакрытия.КлючФормы, Результат.ИдентификаторУстройства, ПараметрыОперации);
	Иначе
		// В форме закрытия кассовой смены пользователь не выбрал кассовое утройство. В этом случае пропускаем операции взаимодействия
		// с драйвером кассового аппарата и переходим к следующему шагу - созданию отчетов о розничных продажах на основании документов
		// "РозничнаяПродажа" (чеков), сформированных без подключения кассы
		РеквизитыПропущеннойОперации = Новый Структура;
		РеквизитыПропущеннойОперации.Вставить("Результат", Истина);
		РеквизитыПропущеннойОперации.Вставить("ИдентификаторУстройства", 
			ПредопределенноеЗначение("Справочник.ПодключаемоеОборудование.ПустаяСсылка"));
		ПечатьФискальногоОтчетаЗавершение(РеквизитыПропущеннойОперации, ДанныеЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьСменуЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Оповестить(СобытиеЗавершиласьОперацияКассовойСмены());
	Если РезультатВыполнения.Результат Тогда
		ВызватьОповещенияПриИзмененииСтатусаКассовойСмены();
		ТекстСообщения = НСтр("ru='Операция успешно завершена.'");
	ИначеЕсли ЗначениеЗаполнено(РезультатВыполнения.ОписаниеОшибки) Тогда
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

Процедура ПечатьФискальногоОтчетаЗавершение(РезультатВыполнения, ДанныеЗакрытия) Экспорт
	
	Оповестить(СобытиеЗавершиласьОперацияКассовойСмены());
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'При формировании отчета произошла ошибка:""%1"".'"),
			РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе 
		СозданныеДокументы = КассовыеСменыВызовСервераБП.СформироватьОтчетыОРозничныхПродажах(ДанныеЗакрытия.Организация,
			РезультатВыполнения.ИдентификаторУстройства);
		Если СозданныеДокументы.Количество() > 0 Тогда
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Сформировано документов: %1'"), СозданныеДокументы.Количество());
			ПоказатьОповещениеПользователя("Формирование отчетов о розничных продажах", , ТекстОповещения);
		КонецЕсли;
		ОповеститьОбИзменении(Тип("ДокументСсылка.РозничнаяПродажа"));
		ОповеститьОбИзменении(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
		ВызватьОповещенияПриИзмененииСтатусаКассовойСмены();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВызватьОповещенияПриИзмененииСтатусаКассовойСмены()
	
	Оповестить("ОбновитьБаннеры_РозничнаяТорговля");
	Оповестить("ИзменениеСтатусаКассовойСмены");
	
КонецПроцедуры

#КонецОбласти
