
#Область ПрограммныйИнтерфейс

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  Период				 - Дата	 - дата расчета амортизации
//  Организация			 - СправочникСсылка.Организации	- Организация для отбора
//  ОсновноеСредство	 - СправочникСсылка.ОсновныеСредства - ОсновноеСредство для отбора
// 
// Возвращаемое значение:
//  СуммаАмортизации - Число
//
Функция РасчетАмортизации(НачалоПериода, КонецПериода, Организация, ОсновноеСредство, НачислениеАмортизацииОСПоМесяцам, СуммаМодернизации = 0) Экспорт
	АмортизацияЗаМесяц = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыработкаОСОбороты.ОсновноеСредство КАК ОсновноеСредство,
		|	ВыработкаОСОбороты.КоличествоОборот КАК КоличествоПродукции,
		|	ВыработкаОСОбороты.Организация КАК Организация
		|ПОМЕСТИТЬ ВременнаяТаблицаВыработкаОС
		|ИЗ
		|	РегистрНакопления.ВыработкаОС.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК ВыработкаОСОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА &СуммаМодернизации <> 0
		|			ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + &СуммаМодернизации
		|		ИНАЧЕ ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость
		|	КОНЕЦ КАК ПервоначальнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|				И НЕ ПараметрыУчетаОССрезПоследних.СрокСлужбы = 0
		|			ТОГДА ВЫБОР
		|					КОГДА &СуммаМодернизации <> 0
		|						ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации + &СуммаМодернизации) / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)) * &КоличествоДней КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ ВЫРАЗИТЬ(ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации / ПараметрыУчетаОССрезПоследних.СрокСлужбы / ДЕНЬ(КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)) * &КоличествоДней КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		КОГДА ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Производственный)
		|			ТОГДА ВЫБОР
		|					КОГДА &СуммаМодернизации <> 0
		|						ТОГДА ВЫРАЗИТЬ((ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации + &СуммаМодернизации) * ВременнаяТаблицаВыработкаОС.КоличествоПродукции / ПараметрыУчетаОССрезПоследних.ОбъемПродукции КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ ВЫРАЗИТЬ(ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации * ВременнаяТаблицаВыработкаОС.КоличествоПродукции / ПараметрыУчетаОССрезПоследних.ОбъемПродукции КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыУчетаОССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаВыработкаОС КАК ВременнаяТаблицаВыработкаОС
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = ВременнаяТаблицаВыработкаОС.ОсновноеСредство
		|			И ПараметрыУчетаОССрезПоследних.Организация = ВременнаяТаблицаВыработкаОС.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт >= ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость
		|			ТОГДА 0
		|		КОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость < ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОС.АмортизацияЗаМесяц
		|	КОНЕЦ КАК АмортизацияЗаМесяц
		|ИЗ
		|	ВременнаяТаблицаПараметрыУчетаОС КАК ВременнаяТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&КонецПериода,
		|				,
		|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|				Организация = &Организация
		|					И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|		ПО ВременнаяТаблицаПараметрыУчетаОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1";	
	Если НачислениеАмортизацииОСПоМесяцам Тогда
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));
	Иначе
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СуммаМодернизации", 	СуммаМодернизации);
	
	Если НачислениеАмортизацииОСПоМесяцам Тогда
		Запрос.УстановитьПараметр("КоличествоДней", День(КонецМесяца(КонецПериода)));	
	ИначеЕсли Месяц(НачалоПериода) = Месяц(КонецПериода) Тогда
		Запрос.УстановитьПараметр("КоличествоДней", День(КонецПериода) - День(НачалоПериода));
	Иначе
		Запрос.УстановитьПараметр("КоличествоДней", День(КонецПериода) - 1);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
	 	АмортизацияЗаМесяц = ВыборкаДетальныеЗаписи.АмортизацияЗаМесяц;		
	КонецЕсли;
	
	Возврат АмортизацияЗаМесяц;	
КонецФункции // РасчетАмортизации()

// Расчитывает сумму амортизации по указаному основному средству
//
// Параметры:
//  ДокументСсылка			- Ссылка - ссылка на документ
//  Период 					- Дата - дата расчета амортизации
//  Организация				- СправочникСсылка.Организации	- Организация для отбора
//  ТабличнаяЧасть 			- ТабличнаяЧасть - табличная часть объекта
// 		* ОсновноеСредство 		- СправочникСсылка.ОсновныеСредства
// 		* АмортизацияЗаМесяц 	- Число
//  МассивОсновныхСредств 	- Массив - ОсновноеСредство для отбора
//
Процедура ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти(ДокументСсылка, Период, Организация, ТабличнаяЧасть, МассивОсновныхСредств = Неопределено) Экспорт
	
	Если МассивОсновныхСредств = Неопределено Тогда 
		МассивОсновныхСредств = ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
	
	// 1. Параметры учета
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет КАК СчетУчетаАмортизации,
		|	ВЫБОР
		|		КОГДА СостоянияОССрезПоследних.Состояние ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(&Период, ДОБАВИТЬКДАТЕ(СостоянияОССрезПоследних.Период, МЕСЯЦ, ПараметрыУчетаОССрезПоследних.СрокСлужбы), МЕСЯЦ)
		|	КОНЕЦ КАК ОстаточныйСрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.ПараметрВыработки КАК ПараметрВыработки,
		|	МестонахождениеОССрезПоследних.Подразделение КАК Подразделение,
		|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛ,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации КАК СтоимостьДляРасчетаАмортизации
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			НЕ Регистратор = &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&МассивОсновныхСредств)) КАК ПараметрыУчетаОССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)
		|					И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)) КАК СостоянияОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = СостоянияОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&МассивОсновныхСредств)) КАК МестонахождениеОССрезПоследних
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = МестонахождениеОССрезПоследних.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОсновныхСредств", МассивОсновныхСредств);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		НайденныеСтроки = ТабличнаяЧасть.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыборкаДетальныеЗаписи.ОсновноеСредство));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока, ВыборкаДетальныеЗаписи);
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти()

// Функция - Получить параметры учета ОС
//
// Параметры:
//  Период			 - Дата	 								- дата, на которую нужно получить сведения
//  Организация		 - СправочникСсылка.Организации	 		- организация для отбора
//  ОсновноеСредство - СправочникСсылка.ОсновноеСредство	- основное средство для отбора
// 
// Возвращаемое значение:
//  ПараметрыУчетаОС - Структура с параметрами 
//
Функция ПолучитьПараметрыУчетаОС(Период, Организация, ОсновноеСредство) Экспорт
	
	ПараметрыОтбора = Новый Структура("Организация, ОсновноеСредство",  Организация, ОсновноеСредство);
	ПараметрыУчетаОС = РегистрыСведений.ПараметрыУчетаОС.ПолучитьПоследнее(Период, ПараметрыОтбора);
	ПараметрыУчетаОС.Вставить("СчетРасходовПоИзносу", ПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации.СчетЗатрат);
	
	ПараметрыУчетаОС.Вставить("ОстаточнаяСтоимость", 0);
	ПараметрыУчетаОС.Вставить("НакопленнаяАмортизация", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК ОстаточнаяСтоимость,
		|	0 КАК НакопленнаяАмортизация,
		|	ХозрасчетныйОстатки.Счет
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстатки.ОсновноеСредство,
		|	СУММА(ВременнаяТаблицаОстатки.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
		|	СУММА(ВременнаяТаблицаОстатки.НакопленнаяАмортизация) КАК НакопленнаяАмортизация
		|ИЗ
		|	ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОстатки.ОсновноеСредство";
	Запрос.УстановитьПараметр("Период",							Период);
	Запрос.УстановитьПараметр("Организация",       				Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",  				ОсновноеСредство);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обход выборки
	Если Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(ПараметрыУчетаОС, Выборка);
	КонецЕсли; 
	
	Возврат ПараметрыУчетаОС;
КонецФункции // ОпределитьСтоимостьПоСпискуОС()

// Процедура - Распределяет по коэффициентам, указанным в способе отражения расходов по амортизации
//
// Параметры:
//  ТаблицаДвижений	 - ТаблицаЗначений	 - Предварительно подготовленная таблица движений
// 
// Возвращаемое значение:
//  ТаблицаХозрасчетный - ТаблицаЗначений- Результат распределния
//
Функция РаспределениеПоСпособуОтраженияРасходовПоАмортизации(ТаблицаДвижений) Экспорт 

	// Результирующая таблица с теми же колонками, что и в запросе.
	ТаблицаХозрасчетный = ТаблицаДвижений.СкопироватьКолонки();

	КэшДанныхСпрСпособыОтрРасхПоАморт = Новый Соответствие();
	
	// Данный цикл перебирает строки ТЗ, полученные из запроса.
	//
	// 1. Если накопленная амортизация не равна нуля, тогда по данной строке идет проверка способа отражения 
	// расходов по амортизации. Обращаемся к табличной части данного справочника и в зависимости от количества 
	// строк в ТЧ строка ТЗ дублируется и записывается в результирующую ТЗ. Записывается счет затрат (СчетДт) и в 
	// зависимости от коэффициентов в строках ТЧ распределяется сумма. А также заполняются созданные колонки "СубконтоДт".
	//
	// 2. В остальных случаях распределять сумму по коэффициенам не нужно, поэтому мы просто копируем строку 
	// в исходную ТЗ и заполняем созданные колонки "СубконтоДт" значениями из колонок "ЗначениеСубконтоДт"
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаДвижений Цикл
		
		Если НЕ СтрокаТаблицыЗначений.РаспределятьПоКоэффициентам Тогда
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.СубконтоДт1 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт1;
			СтрокаРезультирующейТЗ.СубконтоДт2 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт2;
			СтрокаРезультирующейТЗ.СубконтоДт3 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт3;
			
			Продолжить;
		КонецЕсли;
		
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - ТЗ из запроса к данному элементу справочника.
		// При каждом шаге основного цикла (перебор ТЗ из данных документа) проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпрСпособыОтрРасхПоАморт.Получить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпрСпособыОтрРасхПоАморт.Вставить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
		КонецЕсли;
		
		МассивКоэффициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТаблицыЗначений.Сумма, МассивКоэффициентов, 2);
		
		Если МассивСумм = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ИндексМассива = 0;
		Для Каждого СтрокаМассива Из МассивСумм Цикл
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.Сумма		   = СтрокаМассива;
			СтрокаРезультирующейТЗ.ВалютнаяСуммаДт = СтрокаМассива;
			СтрокаРезультирующейТЗ.ВалютнаяСуммаКт = СтрокаМассива;
			
			СтрокаРезультирующейТЗ.СчетДт		   = ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
			СтрокаРезультирующейТЗ.СубконтоДт1     = ТЗСпособаОтражения[ИндексМассива].Субконто1;
			СтрокаРезультирующейТЗ.СубконтоДт2     = ТЗСпособаОтражения[ИндексМассива].Субконто2;
			СтрокаРезультирующейТЗ.СубконтоДт3     = ТЗСпособаОтражения[ИндексМассива].Субконто3;
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаХозрасчетный;
	
КонецФункции // РаспределениеПоСпособуОтраженияРасходовПоАмортизации()

// Процедура - Рассчитать амортизацию основных средств.
//
Процедура РассчитатьАмортизациюОсновныхСредств(МассивОС, Период, Организация, ДокументСсылка, ДанныеУчетнойПолитики, ТаблицаАмортизацияОС, Ошибки) Экспорт 
	// 1. Список ОС принятых к учету на окончание месяца
	// 2. События ОС: модернизация или изменение параметров
	// 3. Накопленная амортизация
	// 4. Получение параметров ОС по настройке НачислениеАмортизацииОСПоМесяцам для всех (кроме производственного)
	//		* НачислениеАмортизацииОСПоМесяцам = Истина - все ОС на начало расчетного месяца
	//		* НачислениеАмортизацииОСПоМесяцам = Ложь - все ОС на окончание расчетного месяца
	//			расчет по дням от последнего изменения параметров, 
	//			в случае когда месяц расчета и месяц изменения параметров совпадают
	// 		* Все ОС на окончание расчетного месяца для производственного метода
	// 5. Выработка ОС для производственного метода	
	// 6. Данные для расчета амортизации	
	
	ТекстыЗапроса = Новый Массив;

	// Список ОС принятых к учету на конец месяца.
	ТекстЗапроса = 		
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	СостоянияОССрезПоследних.Период КАК ПериодПринятоКУчету,
		|	СостоянияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВременнаяТаблицаСостоянияОС
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В (&МассивОС)
		|				И НЕ Регистратор = &ДокументСсылка) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	Если НЕ ЗначениеЗаполнено(МассивОС) Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОсновноеСредство В (&МассивОС)", "Истина");
	КонецЕсли;
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// События с ОС- определение что в текущем месяце была модернизация.
	// Если начисление амортизации по дням.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	2 КАК Порядок,
		|	НАЧАЛОПЕРИОДА(СобытияОССрезПоследних.Период, ДЕНЬ) КАК Период,
		|	СобытияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СобытияОССрезПоследних.Событие КАК СобытиеОС
		|ПОМЕСТИТЬ ТаблицаСобытияОСМодернизация
		|ИЗ
		|	РегистрСведений.СобытияОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)
		|				И Событие = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация)) КАК СобытияОССрезПоследних
		|ГДЕ
		|	НЕ &НачислениеАмортизацииОСПоМесяцам
		|	И СобытияОССрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Данные по накопленой амортизации.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстаток < 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток * -1
		|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
		|	КОНЕЦ КАК НакопленныйИзнос
		|ПОМЕСТИТЬ ТаблицаНакопленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СписокСчетовНакопленнойАмортизации),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)) КАК ХозрасчетныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Параметры расчета амортизации.
	//	*По месяцам, для всех методов - Линейный и по сумме лет
	//	*По дням, для всех методов - Линейный и по сумме лет
	//	*Всегда По месяцам для "метода уменьшаемого остатка"	
	//	*Для производственного метода
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ПараметрыУчетаОССрезПоследних.Период КАК Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПараметрыУчетаОССрезПоследних.ОбъемПродукции КАК ОбъемПродукции,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации КАК СтоимостьДляРасчетаАмортизации,
		|	1 КАК КоэффициентНачислениеАмортизацииОСПоМесяцам
		|ПОМЕСТИТЬ ТаблицаПараметрыУчетаОС
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|ГДЕ
		|	&НачислениеАмортизацииОСПоМесяцам
		|	И (ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|			ИЛИ ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет))
		|	И ВременнаяТаблицаСостоянияОС.ПериодПринятоКУчету < &НачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ПараметрыУчетаОССрезПоследних.Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.КоэффициентУскорения,
		|	ПараметрыУчетаОССрезПоследних.ОбъемПродукции,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию, МЕСЯЦ)
		|			ТОГДА (ДЕНЬ(&КонецПериода) - ДЕНЬ(ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию) + 1) / ДЕНЬ(КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ))
		|		КОГДА &КонецПериода = КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
		|			ТОГДА 1
		|		ИНАЧЕ (ДЕНЬ(&КонецПериода) - 1) / ДЕНЬ(КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ))
		|	КОНЕЦ
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|ГДЕ
		|	НЕ &НачислениеАмортизацииОСПоМесяцам
		|	И (ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный)
		|			ИЛИ ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ПараметрыУчетаОССрезПоследних.Период КАК Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПараметрыУчетаОССрезПоследних.ОбъемПродукции КАК ОбъемПродукции,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации КАК СтоимостьДляРасчетаАмортизации,
		|	1 КАК КоэффициентНачислениеАмортизацииОСПоМесяцам
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС
		|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|ГДЕ
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
		|	И ВременнаяТаблицаСостоянияОС.ПериодПринятоКУчету < &НачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	4,
		|	ПараметрыУчетаОССрезПоследних.Период,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.КоэффициентУскорения,
		|	ПараметрыУчетаОССрезПоследних.ОбъемПродукции,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации,
		|	1
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаСостоянияОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаСостоянияОС КАК ВременнаяТаблицаСостоянияОС)) КАК ПараметрыУчетаОССрезПоследних
		|ГДЕ
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Производственный)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Данные по выработке.
	// Если амортизация по дням, то выработка зависит от модернизации.
	// Если амортизация по месяцам, то выработка за месяц.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВыработкаОСОбороты.ОсновноеСредство КАК ОсновноеСредство,
		|	ВыработкаОСОбороты.КоличествоОборот КАК Количество
		|ПОМЕСТИТЬ ТаблицаВыработкаОС
		|ИЗ
		|	РегистрНакопления.ВыработкаОС.Обороты(&НачалоПериода, &КонецПериода, Авто, Организация = &Организация) КАК ВыработкаОСОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСобытияОСМодернизация КАК ТаблицаСобытияОСМодернизация
		|		ПО ВыработкаОСОбороты.ОсновноеСредство = ТаблицаСобытияОСМодернизация.ОсновноеСредство
		|ГДЕ
		|	ТаблицаСобытияОСМодернизация.ОсновноеСредство ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	5,
		|	ВыработкаОСОбороты.ОсновноеСредство,
		|	СУММА(ВыработкаОСОбороты.КоличествоОборот)
		|ИЗ
		|	РегистрНакопления.ВыработкаОС.Обороты(&НачалоПериода, &КонецПериода, Авто, Организация = &Организация) КАК ВыработкаОСОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСобытияОСМодернизация КАК ТаблицаСобытияОСМодернизация
		|		ПО ВыработкаОСОбороты.ОсновноеСредство = ТаблицаСобытияОСМодернизация.ОсновноеСредство
		|			И ВыработкаОСОбороты.ПериодДень >= ТаблицаСобытияОСМодернизация.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыработкаОСОбороты.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Результирующий запрос.
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПараметрыУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаПараметрыУчетаОС.ОсновноеСредство.Наименование КАК ОсновноеСредствоНаименование,
		|	ТаблицаПараметрыУчетаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ТаблицаПараметрыУчетаОС.СчетУчета КАК СчетУчета,
		|	ТаблицаПараметрыУчетаОС.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ТаблицаПараметрыУчетаОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ТаблицаПараметрыУчетаОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ТаблицаПараметрыУчетаОС.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ТаблицаПараметрыУчетаОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ТаблицаПараметрыУчетаОС.СрокСлужбы КАК СрокСлужбы,
		|	ТаблицаПараметрыУчетаОС.КоэффициентНачислениеАмортизацииОСПоМесяцам КАК КоэффициентНачислениеАмортизацииОСПоМесяцам,
		|	&НачислениеАмортизацииОСПоМесяцам КАК НачислениеАмортизацииОСПоМесяцам,
		|	ТаблицаПараметрыУчетаОС.ОбъемПродукции КАК ОбъемПродукции,
		|	ЕСТЬNULL(ТаблицаВыработкаОС.Количество, 0) КАК КоличествоПродукции,
		|	ЕСТЬNULL(ТаблицаНакопленнаяАмортизация.НакопленныйИзнос, 0) КАК НакопленныйИзнос,
		|	ТаблицаПараметрыУчетаОС.СтоимостьДляРасчетаАмортизации КАК СтоимостьДляРасчетаАмортизации,
		|	ВЫБОР
		|		КОГДА ТаблицаПараметрыУчетаОС.КоэффициентУскорения = 0
		|			ТОГДА 2
		|		ИНАЧЕ ТаблицаПараметрыУчетаОС.КоэффициентУскорения
		|	КОНЕЦ КАК КоэффициентУскорения,
		|	ЕСТЬNULL(ТаблицаСобытияОСМодернизация.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаМодернизации
		|ИЗ
		|	ТаблицаПараметрыУчетаОС КАК ТаблицаПараметрыУчетаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНакопленнаяАмортизация КАК ТаблицаНакопленнаяАмортизация
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаНакопленнаяАмортизация.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВыработкаОС КАК ТаблицаВыработкаОС
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаВыработкаОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСобытияОСМодернизация КАК ТаблицаСобытияОСМодернизация
		|		ПО ТаблицаПараметрыУчетаОС.ОсновноеСредство = ТаблицаСобытияОСМодернизация.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОсновноеСредствоНаименование";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос();
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("МассивОС", МассивОС);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачислениеАмортизацииОСПоМесяцам", ДанныеУчетнойПолитики.НачислениеАмортизацииОСПоМесяцам); 
	
	СчетаУчетаАмортизацииОС = БухгалтерскийУчетСервер.СчетаУчетаНакопленнойАмортизацииОсновныхСредств();
	СчетаУчетаАмортизацииНМА = БухгалтерскийУчетСервер.СчетаУчетаНакопленнойАмортизацииНематериальныхАктивов();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУчетаАмортизацииОС, СчетаУчетаАмортизацииНМА); 
	Запрос.УстановитьПараметр("СписокСчетовНакопленнойАмортизации", СчетаУчетаАмортизацииОС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	КэшДанныхСпособыОтраженияРасходовПоАмортизации = Новый Соответствие();

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаАмортизации = 0;
		ТекстСообщения = "";		
		СрокСлужбы = Выборка.СрокСлужбы;
		
		// Линейный. (ПервоначальнаяСтоимость - ЛиквидационнаяСтоимость) / СрокСлужбы *
		// КоэффициентНачислениеАмортизацииОСПоМесяцам(только в месяце прима в остальных = 1).
		Если Выборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный Тогда 
			Если СрокСлужбы = 0 Тогда 			
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. Срок службы равен 0. Основное средство ""%1"".'");
			Иначе 
				Если НЕ ЗначениеЗаполнено(Выборка.ДатаМодернизации) Тогда 				
					СуммаАмортизации = (Выборка.СтоимостьДляРасчетаАмортизации) / Выборка.СрокСлужбы * Выборка.КоэффициентНачислениеАмортизацииОСПоМесяцам;
																																															  
				Иначе
					КоличествоДнейВМесяце = День(Период);
					КоличествоДнейМодернизации = День(Выборка.ДатаМодернизации);
					ОставшеесяКоличествоДнейВМесяце = КоличествоДнейВМесяце - КоличествоДнейМодернизации + 1;
					
					СуммаАмортизации = ((Выборка.СтоимостьДляРасчетаАмортизации) / Выборка.СрокСлужбы)
										/ КоличествоДнейВМесяце * ОставшеесяКоличествоДнейВМесяце 
										* Выборка.КоэффициентНачислениеАмортизацииОСПоМесяцам;
				КонецЕсли;	
			КонецЕсли;	
				
		// Производственный. ПервоначальнаяСтоимость * КоличествоПродукции / ОбъемПродукции.
		ИначеЕсли Выборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Производственный Тогда
			Если Выборка.ОбъемПродукции = 0 Тогда
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. Объем продукции равен 0. Основное средство ""%1"".'");
			ИначеЕсли Выборка.КоличествоПродукции = 0 Тогда
				// Не ошибка. Просто не было выработки на данном ОС.
				Продолжить;
			Иначе
				СуммаАмортизации = Выборка.СтоимостьДляРасчетаАмортизации * Выборка.КоличествоПродукции / Выборка.ОбъемПродукции;
			КонецЕсли;	
				
		// Уменьшаемого остатка	(ускоренный). (ПервоначальнаяСтоимость - НакопленныйИзносЗаТекущийГод) / СрокСлужбы * КоэффициентУскорения.
		ИначеЕсли Выборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
			Если СрокСлужбы = 0 Тогда 			
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. Срок службы равен 0. Основное средство ""%1"".'");
			ИначеЕсли Выборка.КоэффициентУскорения = 0 Тогда 
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. Коэффициент ускорения равен 0. Основное средство ""%1"".'");
				
			Иначе 
				// Накопленная амортизация за расчетный год.
				НакопленныйИзносНаНачалоРасчетногоГода = 0;
				
				РасчетнаяДата = Макс(Выборка.ДатаМодернизации, Выборка.ДатаВводаВЭксплуатацию);
				
				// Добавление к периоду отстатка полных лет.
				КоличествоЛет = Год(Период) - Год(РасчетнаяДата);
				КоличествоМесяцев = Месяц(Период) - Месяц(РасчетнаяДата);
				КоличествоПолныхЛет = Цел((КоличествоЛет * 12 + КоличествоМесяцев) / 12);
				НачалоРасчетногоПериода = ДобавитьМесяц(РасчетнаяДата, КоличествоПолныхЛет * 12);
				
				ТекстЗапроса =
					"ВЫБРАТЬ
					|	ЕСТЬNULL(ВЫБОР
					|			КОГДА ХозрасчетныйОстаткиНаНачалоГода.СуммаОстаток < 0
					|				ТОГДА ХозрасчетныйОстаткиНаНачалоГода.СуммаОстаток * -1
					|			ИНАЧЕ ХозрасчетныйОстаткиНаНачалоГода.СуммаОстаток
					|		КОНЕЦ, 0) КАК НакопленныйИзносНаНачалоРасчетногоГода
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.Остатки(
					|			&Период,
					|			Счет В (&СписокСчетовНакопленнойАмортизации),
					|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
					|			Организация = &Организация
					|				И Субконто1 = &ОсновноеСредство) КАК ХозрасчетныйОстаткиНаНачалоГода";
				Запрос = Новый Запрос(ТекстЗапроса);
				Запрос.УстановитьПараметр("ОсновноеСредство", Выборка.ОсновноеСредство);
				Запрос.УстановитьПараметр("Период", НачалоРасчетногоПериода);
				Запрос.УстановитьПараметр("КоличествоЛет", КоличествоЛет);
				Запрос.УстановитьПараметр("Организация", Организация);
				Запрос.УстановитьПараметр("СписокСчетовНакопленнойАмортизации", СчетаУчетаАмортизацииОС);
				РезультатЗапроса = Запрос.Выполнить();
				ВыборкаУменьшаемогоОстатка = РезультатЗапроса.Выбрать();
				Если ВыборкаУменьшаемогоОстатка.Следующий() Тогда 
					НакопленныйИзносНаНачалоРасчетногоГода = ВыборкаУменьшаемогоОстатка.НакопленныйИзносНаНачалоРасчетногоГода;
				КонецЕсли;	
					
				Если Выборка.СрокСлужбы <> 0 Тогда
					// Ликвидационная стоимость участвует в расчете только в последний год.
					КоличествоЦелыхЛет = Цел(Выборка.СрокСлужбы / 12);
					ПериодНачалаПоследнегоГода = ДобавитьМесяц(РасчетнаяДата, КоличествоЦелыхЛет * 12);
					
					Если Период < ПериодНачалаПоследнегоГода Тогда 					
				 		СуммаАмортизации = (Выборка.ПервоначальнаяСтоимость - НакопленныйИзносНаНачалоРасчетногоГода) / Выборка.СрокСлужбы * Выборка.КоэффициентУскорения;
					Иначе 
				 		СуммаАмортизации = (Выборка.СтоимостьДляРасчетаАмортизации - НакопленныйИзносНаНачалоРасчетногоГода) / 12;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;	
				
		// По сумме чисел лет.
		ИначеЕсли Выборка.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛет Тогда
				
			// Расчет года использования.
			ДатаВводаВЭксплуатацию = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаВводаВЭксплуатацию, 1)); 
			ГодИспользования = Год(Период) - Год(ДатаВводаВЭксплуатацию);
			ГодовщинаНачалаИспользования = Дата(Год(Период), Месяц(ДатаВводаВЭксплуатацию), День(ДатаВводаВЭксплуатацию));
				
			Если КонецМесяца(Период) >= КонецМесяца(ГодовщинаНачалаИспользования) Тогда
				ГодИспользования = ГодИспользования + 1;
			КонецЕсли;    
				
			ГодИспользования = Макс(ГодИспользования, 1);
			
			// Расчет числа лет.			
			ЧислоЛет = Цел(Макс(1, Выборка.СрокСлужбы / 12));
			СуммаЧислеЛет = 0;
			
			// Формула суммы чисел от 1 до N.
			// S = (N + 1) * N / 2.
			СуммаЧислеЛет = (ЧислоЛет + 1) * ЧислоЛет / 2;
			
			ПроцентГодовойАмортизации = Макс((ЧислоЛет - ГодИспользования + 1), 1) / СуммаЧислеЛет;
			СуммаГодовойАмортизации	= Выборка.СтоимостьДляРасчетаАмортизации * ПроцентГодовойАмортизации;
			СуммаАмортизации = СуммаГодовойАмортизации / 12;
		КонецЕсли;
		
		Если НЕ ТекстСообщения = "" Тогда 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ОсновноеСредствоНаименование);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Неопределено, ТекстСообщения, Неопределено);
		КонецЕсли;	
		
		// Корректировка суммы амортизации с учетом накопленного износа.
		ДоступнаяСуммаАмортизации = Выборка.ПервоначальнаяСтоимость - Выборка.ЛиквидационнаяСтоимость - Выборка.НакопленныйИзнос;
		Если ДоступнаяСуммаАмортизации <= 0 Тогда 
			// Не ошибка. ОС амортизировано полностью.
			Продолжить;
		ИначеЕсли ДоступнаяСуммаАмортизации < СуммаАмортизации Тогда 
			СуммаАмортизации = ДоступнаяСуммаАмортизации;
		КонецЕсли;	
		
		// По строкам идет проверка способа отражения расходов по амортизации. Обращаемся к табличной части 
		// данного справочника и в зависимости от количества строк в табличной части строка выборки дублируется и записывается 
		// в ТЧ документа. Записывается "СчетЗатрат" и в зависимости от коэффициентов в 
		// строках табличной части распределяется сумма. А также заполняются колонки "Субконто".
			
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - таблица значений из запроса к данному элементу справочника.
		// При каждом шаге основного цикла проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпособыОтраженияРасходовПоАмортизации.Получить(Выборка.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(Выборка.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпособыОтраженияРасходовПоАмортизации.Вставить(Выборка.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
			
			Если ТЗСпособаОтражения.Количество() = 0 Тогда 
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. В способе отражения не заполнены коэффициенты распределения. Основное средство ""%1"".'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ОсновноеСредствоНаименование);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Неопределено, ТекстСообщения, Неопределено);
			КонецЕсли;
		КонецЕсли;
		
		МассивКоэффициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		МассивСумм = Неопределено;
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаАмортизации, МассивКоэффициентов, 2);

		// Не удалось распределить, следовательно сумма амортизации 0.
		// Добавление массива с одним элементом для корректного заполнения строки табличной части.
		Если МассивСумм = Неопределено Тогда 
			МассивСумм = Новый Массив;
			МассивСумм.Добавить(0);
		КонецЕсли;	
			
		ИндексМассива = 0;
		Для Каждого СуммаСУчетомКоэффициента Из МассивСумм Цикл
		
			СтрокаТабличнойЧасти = ТаблицаАмортизацияОС.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
			
			СтрокаТабличнойЧасти.Сумма = СуммаСУчетомКоэффициента;
			Если ТЗСпособаОтражения.Количество() > 0 Тогда 
				СтрокаТабличнойЧасти.СчетЗатрат	= ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
				СтрокаТабличнойЧасти.Субконто1  = ТЗСпособаОтражения[ИндексМассива].Субконто1;
				СтрокаТабличнойЧасти.Субконто2  = ТЗСпособаОтражения[ИндексМассива].Субконто2;
				СтрокаТабличнойЧасти.Субконто3  = ТЗСпособаОтражения[ИндексМассива].Субконто3;
				СтрокаТабличнойЧасти.КорректироватьНУ  = ИСТИНА;
			КонецЕсли;	
			
			Если СтрокаТабличнойЧасти.Сумма = 0 Тогда 
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. Сумма амортизации равна 0. Основное средство ""%1"".'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ОсновноеСредствоНаименование);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Неопределено, ТекстСообщения, Неопределено);
			КонецЕсли;	
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СписаниеОС

Функция ПодготовитьТаблицуСписанныеОС(ТаблицаОС, СтруктураДополнительныеСвойства) Экспорт

	ТекстыЗапроса = Новый Массив;

	// Подготовка таблицы
	ТекстЗапроса = 		
		"ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаОС.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	// Параметры учета ОС.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет КАК СчетАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.Консервация КАК Консервация
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчета
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)) КАК ПараметрыУчетаОССрезПоследних";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Накопленная амортизация.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК НакопленнаяАмортизация
		|ПОМЕСТИТЬ ВременнаяТаблицаАмортизацияОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаПараметрыУчета.СчетАмортизации КАК СчетАмортизации
		|				ИЗ
		|					ВременнаяТаблицаПараметрыУчета КАК ВременнаяТаблицаПараметрыУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)) КАК ХозрасчетныйОстатки";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Результат.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаПараметрыУчета.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаПараметрыУчета.СчетАмортизации КАК СчетАмортизации,
		|	ВременнаяТаблицаПараметрыУчета.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаПараметрыУчета.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ВременнаяТаблицаПараметрыУчета.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	НЕ ВременнаяТаблицаПараметрыУчета.Консервация КАК КорректироватьНУ,
		|	ЕСТЬNULL(ВременнаяТаблицаАмортизацияОстатки.НакопленнаяАмортизация, 0) КАК НакопленнаяАмортизация,
		|	ВременнаяТаблицаОС.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаОС.СтатьяЗатрат КАК СтатьяЗатрат
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчета КАК ВременнаяТаблицаПараметрыУчета
		|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ВременнаяТаблицаПараметрыУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаАмортизацияОстатки КАК ВременнаяТаблицаАмортизацияОстатки
		|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ВременнаяТаблицаАмортизацияОстатки.ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция - Распределяет по коэффициентам, указанным в способе отражения расходов по амортизации
//
Функция ПодготовитьТаблицуРаспределениеПоСпособуОтраженияРасходовПоАмортизации(ТаблицаОС, СтруктураДополнительныеСвойства, Ошибки) Экспорт 

	Дата = СтруктураДополнительныеСвойства.ДляПроведения.Дата;
	Организация = СтруктураДополнительныеСвойства.ДляПроведения.Организация;
	
	МассивОС = ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(Дата, Организация);
	 
	// Результирующая таблица с теми же колонками, что и в запросе.
	ТаблицаРаспределениеПоСпособуОтражения = ТаблицаОС.СкопироватьКолонки();
	ТаблицаРаспределениеПоСпособуОтражения.Колонки.Добавить("Субконто1", Неопределено);
	ТаблицаРаспределениеПоСпособуОтражения.Колонки.Добавить("Субконто2", Неопределено);
	ТаблицаРаспределениеПоСпособуОтражения.Колонки.Добавить("Субконто3", Неопределено);
	ТаблицаРаспределениеПоСпособуОтражения.Колонки.Добавить("КорректироватьНУ", Новый ОписаниеТипов("Булево"));
	ТаблицаРаспределениеПоСпособуОтражения.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	РассчитатьАмортизациюОсновныхСредств(МассивОС, Дата, Организация, СтруктураДополнительныеСвойства.ДляПроведения.Ссылка, ДанныеУчетнойПолитики, ТаблицаРаспределениеПоСпособуОтражения, Ошибки); 
	
	Возврат ТаблицаРаспределениеПоСпособуОтражения;
	
КонецФункции 

Процедура СформироватьДвиженияСписаниеОС(ДополнительныеСвойства, Движения, Отказ, ЭтоСписаниеОС = Ложь) Экспорт

	ТаблицаСписанныеОС = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСписанныеОС;
	ТаблицаРеквизиты = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты;
	ТаблицаРаспределениеПоСпособуОтражения = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРаспределениеПоСпособуОтражения;
	
	Если Не ЗначениеЗаполнено(ТаблицаСписанныеОС)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;	
	
	Параметры = ПодготовитьПараметрыСписаниеОС(ТаблицаСписанныеОС, ТаблицаРеквизиты, ТаблицаРаспределениеПоСпособуОтражения);
	Реквизиты = Параметры.Реквизиты[0];
	ТаблицаРаспределениеПоСпособуОтражения = Параметры.ТаблицаРаспределениеПоСпособуОтражения;
	ТаблицаРаспределениеПоСпособуОтражения.Индексы.Добавить("ОсновноеСредство");
		
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаСписанныеОС Цикл

		// Получение распределенной начисленной амортизации за текущий месяц.
		НачисленнаяАмортизация = 0;
		НайденныеСтроки = ТаблицаРаспределениеПоСпособуОтражения.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство));
		
		// Расходы на амортизацию основных средств за текущий месяц.
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание = НСтр("ru = 'Расходы на амортизацию ОС за месяц'");
			Проводка.КорректироватьНУ = НайденнаяСтрока.КорректироватьНУ;

			Проводка.СчетДт = НайденнаяСтрока.СчетЗатрат;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, НайденнаяСтрока.Субконто1);
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, НайденнаяСтрока.Субконто2);
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, НайденнаяСтрока.Субконто3);

			Проводка.СчетКт = СтрокаТаблицы.СчетАмортизации;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);
			
			Проводка.Сумма = НайденнаяСтрока.Сумма;
			
			НачисленнаяАмортизация = НачисленнаяАмортизация + НайденнаяСтрока.Сумма;
		КонецЦикла;	
		
		// Закрытие накопленной амортизации.
		Если СтрокаТаблицы.НакопленнаяАмортизация + НачисленнаяАмортизация > 0 Тогда 
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание = НСтр("ru = 'Списание накопленной амортизации'");
			Проводка.КорректироватьНУ = СтрокаТаблицы.КорректироватьНУ;

			Проводка.СчетДт = СтрокаТаблицы.СчетАмортизации;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);
			
			Проводка.Сумма = СтрокаТаблицы.НакопленнаяАмортизация + НачисленнаяАмортизация;
		КонецЕсли;		
			
		ОстаточнаяСтоимость = СтрокаТаблицы.ПервоначальнаяСтоимость - СтрокаТаблицы.НакопленнаяАмортизация - НачисленнаяАмортизация;
		
		// Списание остаточно стоимости ОС.
		Если ОстаточнаяСтоимость > 0 Тогда 
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание = НСтр("ru = 'Списание стоимости ОС'");
			Проводка.КорректироватьНУ = СтрокаТаблицы.КорректироватьНУ;

			Проводка.СчетДт = СтрокаТаблицы.СчетЗатрат;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиЗатрат", СтрокаТаблицы.СтатьяЗатрат);

			Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);
			
			Проводка.Сумма = ОстаточнаяСтоимость;
			
			// Для списания Ос скорректируем сумму выбытия для расчета налога на прибыль.
			Если ЭтоСписаниеОС  
				И ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаДвижениеОСНУ") Тогда 
				
				НайденныеСтроки = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвижениеОСНУ.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство));
				// Строки при проведении сгруппированы.
				// В результате поиска должен быть массив не более 1 строки.
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.Выбытие = ОстаточнаяСтоимость;	
					НайденнаяСтрока.ТекущееВыбытие = ОстаточнаяСтоимость * (12 - МЕСЯЦ(Реквизиты.Период) + 0.5) / 12;	
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияСписаниеОСПриобретенныхИНеПринятыхКУчету(ДополнительныеСвойства, Движения, Отказ, ЭтоСписаниеОС = Ложь) Экспорт

	ТаблицаСписанныеОС = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСписанныеОС;
	ТаблицаРеквизиты = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты;
	ТаблицаРаспределениеПоСпособуОтражения = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРаспределениеПоСпособуОтражения;
	
	Если Не ЗначениеЗаполнено(ТаблицаСписанныеОС)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;	
	
	Параметры = ПодготовитьПараметрыСписаниеОС(ТаблицаСписанныеОС, ТаблицаРеквизиты, ТаблицаРаспределениеПоСпособуОтражения);
	Реквизиты = Параметры.Реквизиты[0];
	ТаблицаРаспределениеПоСпособуОтражения = Параметры.ТаблицаРаспределениеПоСпособуОтражения;
	ТаблицаРаспределениеПоСпособуОтражения.Индексы.Добавить("ОсновноеСредство");
	
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаСписанныеОС Цикл

		// Получение распределенной начисленной амортизации за текущий месяц.
		НачисленнаяАмортизация = 0;
		НайденныеСтроки = ТаблицаРаспределениеПоСпособуОтражения.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство));
				
		ОстаточнаяСтоимость = СтрокаТаблицы.ПервоначальнаяСтоимость - СтрокаТаблицы.НакопленнаяАмортизация - НачисленнаяАмортизация;
		
		// Списание остаточно стоимости ОС.
		Если ОстаточнаяСтоимость > 0 Тогда 
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание = НСтр("ru = 'Списание стоимости ОС'");
			Проводка.КорректироватьНУ = СтрокаТаблицы.КорректироватьНУ;

			Проводка.СчетДт = СтрокаТаблицы.СчетЗатрат;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиЗатрат", СтрокаТаблицы.СтатьяЗатрат);

			Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
			БухгалтерскийУчетСервер.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);
			
			Проводка.Сумма = ОстаточнаяСтоимость;
			
			// Для списания Ос скорректируем сумму выбытия для расчета налога на прибыль.
			Если ЭтоСписаниеОС  
				И ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаДвижениеОСНУ") Тогда 
				
				НайденныеСтроки = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвижениеОСНУ.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство));
				// Строки при проведении сгруппированы.
				// В результате поиска должен быть массив не более 1 строки.
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.Выбытие = ОстаточнаяСтоимость;	
					НайденнаяСтрока.ТекущееВыбытие = ОстаточнаяСтоимость * (12 - МЕСЯЦ(Реквизиты.Период) + 0.5) / 12;	
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеОС(ТаблицаСписанныеОС, ТаблицаРеквизиты, ТаблицаРаспределениеПоСпособуОтражения)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаСписанныеОС
	СписокОбязательныхКолонок = ""
	+ "СчетУчета,"					// <ПланСчетовСсылка.Хозрасчетный> - счет учета, с которого списывается ОС
	+ "СчетАмортизации,"			// <ПланСчетовСсылка.Хозрасчетный> - счет амортизации ОС
	+ "ОсновноеСредство,"			// <СправочникСсылка.ОсновныеСредства> - списываемое ОС
	+ "ПервоначальнаяСтоимость,"	// <Число,15,2> - сумма первоначальной стоимости (по данным учета)
	+ "ЛиквидационнаяСтоимость,"	// <Число,15,2> - сумма ликвидационной стоимости (по данным учета)
	+ "НакопленнаяАмортизация,"		// <Число,15,2> - сумма накопленной амортизации, без учета начисленной амортизации
	+ "СчетЗатрат,"					// <ПланСчетовСсылка.Хозрасчетный> - счет учета, на который списывается ОС
	+ "СтатьяЗатрат,"				// <СправочникСсылка.СтатьиЗатрат> - статья затрат по списанию ОС
	+ "КорректироватьНУ";			// <Булево> - признак необходимости корректировки НУ
	
	Параметры.Вставить("ТаблицаСписанныеОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаСпособыОтражения
	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"	// <СправочникСсылка.ОсновныеСредства> - списываемое ОС
	+ "СчетЗатрат,"			// <ПланСчетовСсылка.Хозрасчетный> - счет расходов по начислению расходов на амортизацию ОС
	+ "Субконто1,"			// - значение субконто счета затрат
	+ "Субконто2,"			// - значение субконто счета затрат
	+ "Субконто3,"			// - значение субконто счета затрат
	+ "Сумма,"				// <Число,15,2> - сумма начисленной амортизации, рассчитанная на момент времени проведения документа списания
	+ "КорректироватьНУ";	// <Булево> - признак необходимости корректировки НУ

	Параметры.Вставить("ТаблицаРаспределениеПоСпособуОтражения",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРаспределениеПоСпособуОтражения, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"	// <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"			// <Дата> - период движений - дата документа
	+ "Организация";	// <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

#КонецОбласти

