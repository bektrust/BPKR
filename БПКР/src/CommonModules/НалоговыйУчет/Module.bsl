#Область ПрограммныйИнтерфейс

Процедура СформироватьДвиженияКорректировкаНУ(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Проводки = Движения.Найти("Хозрасчетный");
	ТаблицаРеквизиты = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты;
	
	Параметры = ПодготовитьПараметрыСписаниеОС(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	Если Не ЗначениеЗаполнено(Проводки) 
		Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;	
	
	// Список временных счетов.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Временный";
	
	МассивВременныеСчета = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
	Для Каждого Проводка Из Проводки Цикл
			
		// Корректировка по счету Дт.
		Если Проводка.КорректироватьНУ 
			И НЕ МассивВременныеСчета.Найти(Проводка.СчетДт) = Неопределено Тогда 
			Запись = Движения.КорректировкиНУ.Добавить();
			Запись.Период = Реквизиты.Период;
			Запись.Организация = Реквизиты.Организация;
			Запись.Счет = Проводка.СчетДт;
			//Если Запись.Счет = ПланыСчетов.Хозрасчетный.ПрочиеДоходыОтНеоперационнойДеятельности //9190
			//	Или Запись.Счет = ПланыСчетов.Хозрасчетный.РасходыПоВыбытиюАктивов // 9540
			//	Или Запись.Счет = ПланыСчетов.Хозрасчетный.РасходыНаАмортизациюОсновныхСредств Тогда // 8470 
			//	Запись.ВидУчета = Перечисления.ВидыУчета.ВР;
			//Иначе 
			//	Запись.ВидУчета = Перечисления.ВидыУчета.ПР;
			//КонецЕсли;
			Запись.ВидУчета = Перечисления.ВидыУчета.ВР;

			Если Запись.Счет = ПланыСчетов.Хозрасчетный.РасходыНаАмортизациюОсновныхСредств Тогда // 8470 
				Запись.АмортизацияОС = Истина;
			КонецЕсли;			
			Запись.Сумма = Проводка.Сумма;
		КонецЕсли;	
		
		// Корректировка по счету Кт.
		Если Проводка.КорректироватьНУ И 
			НЕ МассивВременныеСчета.Найти(Проводка.СчетКт) = Неопределено Тогда 
			Запись = Движения.КорректировкиНУ.Добавить();
			Запись.Период = Реквизиты.Период;
			Запись.Организация = Реквизиты.Организация;
			Запись.Счет = Проводка.СчетКт;
			//Если Запись.Счет = ПланыСчетов.Хозрасчетный.ПрочиеДоходыОтНеоперационнойДеятельности //9190
			//	Или Запись.Счет = ПланыСчетов.Хозрасчетный.РасходыПоВыбытиюАктивов // 9540
			//	Или Запись.Счет = ПланыСчетов.Хозрасчетный.РасходыНаАмортизациюОсновныхСредств Тогда // 8470 
			//	Запись.ВидУчета = Перечисления.ВидыУчета.ВР;
			//Иначе 
			//	Запись.ВидУчета = Перечисления.ВидыУчета.ПР;
			//КонецЕсли;
			Запись.ВидУчета = Перечисления.ВидыУчета.ВР;
			Запись.Сумма = Проводка.Сумма;
		КонецЕсли;	
	КонецЦикла;
	
	ВременнаяТаблица = Движения.КорректировкиНУ.Выгрузить();
	ВременнаяТаблица.Свернуть("Период, Организация, Счет, ВидУчета, АмортизацияОС", "Сумма");
	Движения.КорректировкиНУ.Загрузить(ВременнаяТаблица);

	Движения.КорректировкиНУ.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеОС(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"	// <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"			// <Дата> - период движений - дата документа
	+ "Организация";	// <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

#КонецОбласти