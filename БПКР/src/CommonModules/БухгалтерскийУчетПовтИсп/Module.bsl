
#Область ПрограммныйИнтерфейс

#Область СвойстваСчетов

Функция СчетВИерархии(Счет, Эталон) Экспорт

	Если ЗначениеЗаполнено(Счет) Тогда
		Возврат Счет = Эталон ИЛИ Счет.ПринадлежитЭлементу(Эталон);
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция СчетаВИерархии(СчетГруппа) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетГруппа) Тогда
		Возврат Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетГруппа", СчетГруппа);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетГруппа)";
	Субсчета = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
	Возврат Новый ФиксированныйМассив(Субсчета);

КонецФункции

#КонецОбласти

#Область ФормированиеПроводок

// Функция предназначена для определения названия объекта
// учета по его счету учета. Название объекта выдается в родительном падеже
Функция НазваниеОбъектаПоСчетуУчета(СчетУчета) Экспорт
	
	Если СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.Товары) Тогда
		
		Возврат "товаров";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ЗапасыСырьяИМатериалов) Тогда
		
		Возврат "запасов";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ОсновноеПроизводство) Тогда
		
		Возврат "полуфабрикатов";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ГотоваяПродукция) Тогда
		
		Возврат "продукции";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку) Тогда
		
		Возврат "материалов в переработку";
	
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ПрочиеЗапасы) Тогда
		
		Возврат "запасов";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.Топливо) Тогда
		
		Возврат "топлива";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ЗапасныеЧасти) Тогда
		
		Возврат "запасных частей";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.СтроительныеМатериалы) Тогда
		
		Возврат "материвалов";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.ПрочиеМатериалы) Тогда
		
		Возврат "материвалов";
		
	ИначеЕсли СчетВИерархии(СчетУчета, ПланыСчетов.Хозрасчетный.МБП) Тогда
		
		Возврат "МБП";
		
	Иначе
		
		Возврат "запасов";
		
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СпискиСчетов

// Получает список счетов расчетов с контрагентами
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаРасчетовСКонтрагентами() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСубконтоКонтрагенты.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоКонтрагенты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоДоговоры
	               |		ПО ВидыСубконтоКонтрагенты.Ссылка = ВидыСубконтоДоговоры.Ссылка
	               |ГДЕ
	               |	ВидыСубконтоКонтрагенты.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	               |	И ВидыСубконтоДоговоры.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	               |	И НЕ ВидыСубконтоКонтрагенты.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов расчетов с подотчетными лицами
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаРасчетовСПодотчетнымиЛицами() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СотрудникиОрганизаций)
	               |	И (ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДебиторскаяЗадолженностьПоПрочимОперациям))
	               |			ИЛИ ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеКраткосрочныеОбязательства)))
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый
	               |	И (ХозрасчетныйВидыСубконто.Ссылка.Код ПОДОБНО ""152%""
	               |			ИЛИ ХозрасчетныйВидыСубконто.Ссылка.Код ПОДОБНО ""362%"")";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов основных средств.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаОсновныхСредств() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства))
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов накопленной амортизации основных средств.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаНакопленнойАмортизацииОсновныхСредств() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства))
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов нематериальных активов.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаНематериальныхАктивов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеАктивы))
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов накопленной амортизации нематериальных активов.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаНакопленнойАмортизацииНематериальныхАктивов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	               |	И ХозрасчетныйВидыСубконто.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеАктивы))
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов денежных средств.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаДенежныхСредств() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	               |ГДЕ
	               |	ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеСредства)
	               |	И НЕ ХозрасчетныйВидыСубконто.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов товаров.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаТоваров() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСубконтоТовары.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСклады
	               |		ПО ВидыСубконтоТовары.Ссылка = ВидыСубконтоСклады.Ссылка
	               |ГДЕ
	               |	ВидыСубконтоТовары.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	               |	И ВидыСубконтоСклады.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	               |	И ВидыСубконтоТовары.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварноМатериальныеЗапасы))
	               |	И НЕ ВидыСубконтоТовары.Ссылка.Забалансовый
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВидыСубконтоТовары.Ссылка
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСклады
	               |		ПО ВидыСубконтоТовары.Ссылка = ВидыСубконтоСклады.Ссылка
	               |ГДЕ
	               |	ВидыСубконтоТовары.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	               |	И ВидыСубконтоСклады.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	               |	И ВидыСубконтоТовары.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЗапасыВспомогательныхМатериалов))
	               |	И НЕ ВидыСубконтоТовары.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов МБП.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаМБП() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСубконтоТовары.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоМестонахождение
	               |		ПО ВидыСубконтоТовары.Ссылка = ВидыСубконтоМестонахождение.Ссылка
	               |ГДЕ
	               |	ВидыСубконтоТовары.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	               |	И ВидыСубконтоМестонахождение.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Местонахождение)
	               |	И ВидыСубконтоТовары.Ссылка.Родитель В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЗапасыВспомогательныхМатериалов))
	               |	И НЕ ВидыСубконтоТовары.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов материалов, переданных в переработку.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаМатериаловВПереработку() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыСубконтоТовары.Ссылка КАК Счет
		|ИЗ
		|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСклады
		|		ПО ВидыСубконтоТовары.Ссылка = ВидыСубконтоСклады.Ссылка
		|ГДЕ
		|	ВидыСубконтоТовары.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
		|	И ВидыСубконтоТовары.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|	И ВидыСубконтоСклады.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|	И ВидыСубконтоТовары.Ссылка.Забалансовый";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов выручки.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаВыручки() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	НЕ Хозрасчетный.Ссылка.Забалансовый
		|	И Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

// Получает список счетов скидки.
// 
// Возвращаемое значение:
// 	Массив - Массив счетов
//		* СчетСсылка
//
Функция СчетаУчетаСкидки() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	НЕ Хозрасчетный.Ссылка.Забалансовый
		|	И Хозрасчетный.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Счет");
	
КонецФункции

#КонецОбласти

#КонецОбласти