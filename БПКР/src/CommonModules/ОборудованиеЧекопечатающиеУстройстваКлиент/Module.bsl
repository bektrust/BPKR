
#Область ПрограммныйИнтерфейс

// Производить печать чека на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьФискализациюЧекаНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт;
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("CheckFiscalization", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Производить инкассацию на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьИнкассациюНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("Encash", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Ложь);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Производить печать текста на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПечатьТекста(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	КонтекстОперации = Новый Структура();
	КонтекстОперации.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	КонтекстОперации.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	КонтекстОперации.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	КонтекстОперации.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	КонтекстОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	КонтекстОперации.Вставить("ПодготовитьДанные"      , Истина); 
	КонтекстОперации.Вставить("ОбработатьДанные"       , Ложь); 
	КонтекстОперации.Вставить("Команда"  , "PrintText"); 
	КонтекстОперации.Вставить("Результат", Истина);
	
	ВыполнитьВыборФискальногоУстройства(КонтекстОперации);
	
КонецПроцедуры

// Начать открытие смены на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
		
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("OpenShift", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Начать закрытие смены на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
		
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("CloseShift", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Начать открытие денежного ящика фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьОткрытиеДенежногоЯщика(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства = Неопределено, ПараметрыОперации = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт;
	
	КонтекстОперации = Новый Структура();
	КонтекстОперации.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	КонтекстОперации.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	КонтекстОперации.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	КонтекстОперации.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	КонтекстОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	КонтекстОперации.Вставить("ПодготовитьДанные"      , Ложь); 
	КонтекстОперации.Вставить("ОбработатьДанные"       , Ложь); 
	КонтекстОперации.Вставить("Команда"  , "OpenCashDrawer"); 
	КонтекстОперации.Вставить("Результат", Истина);
	
	ВыполнитьВыборФискальногоУстройства(КонтекстОперации);
	
КонецПроцедуры

// Получение ширины строки в символах для фискального устройства.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПолучениеШириныСтрокиПечатающегоУстройства(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства = Неопределено, ПараметрыОперации = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	КонтекстОперации = Новый Структура();
	КонтекстОперации.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	КонтекстОперации.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	КонтекстОперации.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	КонтекстОперации.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	КонтекстОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	КонтекстОперации.Вставить("ПодготовитьДанные"      , Ложь); 
	КонтекстОперации.Вставить("ОбработатьДанные"       , Ложь); 
	КонтекстОперации.Вставить("Команда"  , "GetLineLength"); 
	КонтекстОперации.Вставить("Результат", Истина);
	
	ВыполнитьВыборФискальногоУстройства(КонтекстОперации);
	
КонецПроцедуры

// Производить аннулирование чека на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьАннулированиеЧекаНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("AnnulCheck", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Ложь, Ложь);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);

КонецПроцедуры

// Начать формирование отчета о текущем состоянии расчетов на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("ReportCurrentStatusOfSettlements", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Ложь);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Начать формирование отчета отчет без гашения  на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьФормированиеОтчетаБезГашения(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("PrintXReport", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Ложь);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Производить получение параметров фискального устройства.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПолучениеПараметровФискальногоУстройства(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("GetDataKKT", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Ложь, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Получение текущего состояния фискального устройства.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПолучениеТекущегоСостоянияФискальногоУстройства(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("GetCurrentStatus", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Начать операцию ФН для фискального устройства.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьОперациюФНДляФискальногоУстройства(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("OperationFN", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Истина, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры


// Осуществляет печать копии чека.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПечатьКопииЧека(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды("PrintCheckCopy", 
		ОборудованиеЧекопечатающиеУстройстваВызовСервера, ДополнительныеПараметры, Ложь, Истина);
		
	МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, 
		ПараметрыОперации, ПараметрыВыполнениеКоманды);
	
КонецПроцедуры

// Осуществляет печать QR кода на фискальном устройстве.
//
// Параметры:
//   ОповещениеПриЗавершении - ОписаниеОповещения - оповещение при завершении.
//   ИдентификаторКлиента    - ФормаКлиентскогоПриложения -идентификатор формы.
//   ИдентификаторУстройства - СправочникСсылка.ПодключаемоеОборудование - идентификатор устройства, если неопределенно - будет предложен выбор.
//   ПараметрыОперации       - Структура - параметры выполнения операции.
//   ДополнительныеПараметры - Структура - дополнительные команды.
//
Процедура НачатьПечатьQRКодаНаФискальномУстройстве(ОповещениеПриЗавершении, ИдентификаторКлиента, ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры = Неопределено) Экспорт
	
	КонтекстОперации = Новый Структура();
	КонтекстОперации.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	КонтекстОперации.Вставить("ИдентификаторКлиента"   , ИдентификаторКлиента);   
	КонтекстОперации.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
	КонтекстОперации.Вставить("ПараметрыОперации"      , ПараметрыОперации);
	КонтекстОперации.Вставить("ДополнительныеПараметры", ДополнительныеПараметры); 
	КонтекстОперации.Вставить("ПодготовитьДанные"      , Истина); 
	КонтекстОперации.Вставить("ОбработатьДанные"       , Ложь); 
	КонтекстОперации.Вставить("Команда"  , "PrintQRCode"); 
	КонтекстОперации.Вставить("Результат", Истина);
	
	ВыполнитьВыборФискальногоУстройства(КонтекстОперации);
	
КонецПроцедуры







//// Функция возвращает для фискального устройства версию ФФД.
////
//Функция ФискальноеУстройствоПоддерживаетВерсиюФФД(ИдентификаторУстройства) Экспорт
//	
//	Возврат ОборудованиеЧекопечатающиеУстройстваВызовСервера.ФискальноеУстройствоПоддерживаетВерсиюФФД(ИдентификаторУстройства)
//	
//КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьВыборФискальногоУстройства(КонтекстОперации)
	
	Если КонтекстОперации.ИдентификаторУстройства = Неопределено Или ПустаяСтрока(КонтекстОперации.ИдентификаторУстройства) Тогда
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
		ПоддерживаемыеТипыВО.Добавить("ККТ");
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьОперациюНаФискальномУстройстве", ЭтотОбъект, КонтекстОперации);
		МенеджерОборудованияКлиент.ВыбратьУстройство(Оповещение, ПоддерживаемыеТипыВО,
			НСтр("ru='Выберите фискальное устройство'"), 
			НСтр("ru='Фискальное устройство не подключено.'"), 
			НСтр("ru='Фискальное устройство не выбрано.'"));
			
	Иначе
		ВыполнитьОперациюНаФискальномУстройстве(КонтекстОперации, КонтекстОперации);
	КонецЕсли
	
КонецПроцедуры

Процедура ВыполнитьОперациюНаФискальномУстройстве(РезультатВыбора, КонтекстОперации) Экспорт
	
	Если РезультатВыбора.Результат Тогда 
		ПараметрыВыполнениеКоманды = МенеджерОборудованияКлиентСервер.ПараметрыВыполнениеКоманды(КонтекстОперации.Команда, 
			ОборудованиеЧекопечатающиеУстройстваВызовСервера, КонтекстОперации.ДополнительныеПараметры, 
			КонтекстОперации.ПодготовитьДанные, КонтекстОперации.ОбработатьДанные);
		МенеджерОборудованияКлиент.НачатьВыполнениеКоманды(КонтекстОперации.ОповещениеПриЗавершении, КонтекстОперации.ИдентификаторКлиента, 
			РезультатВыбора.ИдентификаторУстройства, КонтекстОперации.ПараметрыОперации, ПараметрыВыполнениеКоманды);
	Иначе
		ВыполнитьОбработкуОповещения(КонтекстОперации.ОповещениеПриЗавершении, РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти      