#Область ПрограммныйИнтерфейс

// Возвращает валюту регламентированного учета
// Если переданная в качестве параметра валюта уже заполнена - возвращает ее.
// Если валюта не передана в качестве параметра или передан пустой,
// валюту рег. учета. Если валюта рег. учета не заполнена - возвращает пустую ссылку на валюту
//
// Параметры:
//   Валюта - СправочникСсылка.Валюты - Валюта, которую нужно заполнить
//
// Возвращаемое значение:
//   СправочникСсылка.Валюты
//
Функция ПолучитьВалютуРегламентированногоУчета(Знач Валюта = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Возврат Константы.ВалютаРегламентированногоУчета.Получить();
	Иначе
		Возврат Валюта;
	КонецЕсли;
	
КонецФункции 

// Функция - Получить значение константы
//
// Параметры:
//  ИмяКонстанты - Строка - Имя константы
// 
// Возвращаемое значение:
//  Значение константы - любой тип
//
Функция ПолучитьЗначениеКонстанты(ИмяКонстанты) Экспорт
	Возврат Константы[ИмяКонстанты].Получить();
КонецФункции 

Функция ИспользоватьУправляемыеБлокировки() Экспорт

	Результат = Метаданные.РежимУправленияБлокировкойДанных <> Метаданные.СвойстваОбъектов.РежимУправленияБлокировкойДанныхПоУмолчанию.Автоматический
		И СтрНайти(СтрокаСоединенияИнформационнойБазы(), "Srvr=") = 1;
		
	Возврат Результат;

КонецФункции 

// Функция возвращает фиксированный массив организаций, к данным бухгалтерского учета которых
// у текущего пользователя разрешено требуемое право доступа по RLS.
//
// Функцию можно использовать, если требуется выполнять запросы к данным бухгалтерского учета (регистру Хозрасчетный)
// в привилегированном режиме, но чтобы при этом учитывались настройки доступа по RLS:
// 	1. с помощью текущей функции определяется список доступных организаций
//	2. в текстах запросов к самим данных (регистрам, документам) 
//		устанавливаются отборы по этим организациям
//	3. перед выполнением запроса к данным включается привилегированный режим.
//
// Если аналогичную проверку нужно провести в отношении иных данных, чем регистр Хозрасчетный, следует использовать
// ОрганизацииДанныеКоторыхДоступныПользователю().
//
// Не следует (запрещается) вызывать эти функции из кода, который может выполняться в привилегированном режиме,
// так как это приведет к последующей неверной ее работе вне привилегированного режима:
// может повторно использоваться значение, вычисленное в привилегированном режиме.
//
// Параметры:
//	ПравоНаИзменение - Булево
//		- Истина - если после выполнения запроса данные бухгалтерии предполагается менять
//					и нужно проверить, что у пользователя есть право на изменение;
//		- Ложь - если данные бухгалтерии только отображаются пользователю на чтение,
//					и нужно проверить что у него есть соответствующее право.
// 
Функция ВсеОрганизацииДанныеКоторыхДоступныПоRLS(ПравоНаИзменение) Экспорт
	
	Возврат УправлениеДоступомБП.ОрганизацииДанныеКоторыхДоступныПользователю(
		"РегистрБухгалтерии.Хозрасчетный",
		ПравоНаИзменение);
	
КонецФункции

// Определяет перечень организаций, чтение данных которых разрешено прикладному пользователю
// настройками ограничения доступа на уровне записей.
//
// Функцию можно использовать, если требуется получать данные в привилегированном режиме для предоставления их
// пользователю - она позволяет ограничить эти данные в соответствии с настройками.
//
// Порядок использования функции описан в ВсеОрганизацииДанныеКоторыхДоступныПоRLS().
// При использовании функции следует иметь в виду, что в общем случае ограничить выбираемые данные
// в соответствии с ОДД по Организации недостаточно:
// 1. в прикладном решении могут использоваться и иные виды доступа, не только Организации
// 2. перед установкой привилегированного режима в вызывающем коде следует проверить наличие прав
//    на чтение запрашиваемой таблицы (регистра, документов) в целом.
//
// Не следует (запрещается) вызывать эту функцию из кода, который может выполняться в привилегированном режиме,
// так как это приведет к последующей неверной ее работе вне привилегированного режима:
// может повторно использоваться значение, вычисленное в привилегированном режиме.
//
// Возвращаемое значение:
//  ФиксированныйМассив - содержит СправочникСсылка.Организации
//
Функция ОрганизацииДанныеКоторыхДоступныПользователю() Экспорт
	
	Запрос = Новый Запрос;
	
	Если Пользователи.ЭтоПолноправныйПользователь(Неопределено, Ложь, Ложь)
		Или Не УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей() Тогда
		
		// Ограничений по RLS нет, возвращаем все организации из справочника
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации";
		
	Иначе
	
		// Запрос взят из шаблона #ПоЗначениям роли ДобавлениеИзменениеДанныхБухгалтерии
		// с теми параметрами, с которыми он применяется для справочника Организации,
		// однако без обращения к ТаблицыГруппДоступа.
		//
		// Обращения к ТаблицыГруппДоступа и Справочник.ИдентификаторыОбъектовМетаданных в шаблоне нужны
		// для проверки права к конкретному объекту метаданных.
		// Такая проверка должна быть выполнена до выполнения этой функции.
		
		Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				Справочник.ГруппыДоступа КАК ГруппыДоступа
		|			ГДЕ
		|				ГруппыДоступа.Ссылка В
		|					(ВЫБРАТЬ
		|						ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
		|					ИЗ
		|						Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
		|							ПО
		|								СоставыГруппПользователей.Пользователь = &Пользователь
		|									И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь)
		|				И ВЫБОР
		|					КОГДА ИСТИНА В
		|							(ВЫБРАТЬ ПЕРВЫЕ 1
		|								ИСТИНА
		|							ИЗ
		|								РегистрСведений.ЗначенияГруппДоступа КАК Значения
		|									ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
		|									ПО
		|										Значения.ГруппаДоступа = ГруппыДоступа.Ссылка
		|											И Значения.ЗначениеДоступа = Организации.Ссылка
		|											И ГруппыЗначений.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ = ВЫБОР
		|					КОГДА ИСТИНА В
		|							(ВЫБРАТЬ ПЕРВЫЕ 1
		|								ИСТИНА
		|							ИЗ
		|								РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
		|							ГДЕ
		|								ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
		|								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Организации.Ссылка)
		|								И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ)";
	КонецЕсли;
	
	// Доступ к настройкам RLS выполняется в привилегированном режиме.
	УстановитьПривилегированныйРежим(Истина);
	
	МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Новый ФиксированныйМассив(МассивОрганизаций);
	
КонецФункции

#КонецОбласти