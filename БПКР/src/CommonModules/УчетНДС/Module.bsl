
#Область ПрограммныйИнтерфейс

// Функция - Получить ставку НДС
//
// Параметры:
//  Период		 - Дата	- Дата на которую нужно получить значения ставки
//  СтавкаНДС	 - СправочникСсылка.СтавкиНДС - ссылка на справочник ставки НДС
// Возвращаемое значение:
//   - Число - размер ставки
Функция ПолучитьСтавкуНДС(Период, СтавкаНДС) Экспорт
	Возврат УчетНДСПовтИсп.ПолучитьСтавкуНДС(НачалоМесяца(Период), СтавкаНДС);
КонецФункции 

// Функция - Получить ставку НСП
//
// Параметры:
//  Период		 - Дата	- Дата на которую нужно получить значения ставки
//  Организация	 - СправочникСсылка.Организации - ссылка на справочник Организация
//  СтавкаНСП	 - СправочникСсылка.СтавкаНСП - ссылка на справочник ставки НСП
// Возвращаемое значение:
//   - Число - размер ставки
Функция ПолучитьСтавкуНСП(Период, Организация, СтавкаНСП) Экспорт
	Возврат УчетНДСПовтИсп.ПолучитьСтавкуНСП(НачалоМесяца(Период), Организация, СтавкаНСП);
КонецФункции 

// Функция - Получить ставки НДС с нулевыми значениями
//
// Параметры:
//  Период		 - Дата	- Дата на которую нужно получить значения ставки
// Возвращаемое значение:
//   - Таблица значений -
Функция ПолучитьСтавкиНДССНулевымиЗначениями(Период) Экспорт

	Возврат УчетНДСПовтИсп.ПолучитьСтавкиНДССНулевымиЗначениями(НачалоМесяца(Период));
	
КонецФункции

// Функция - Получить значения ставок НДС и НСП
//
// Параметры:
//  Период		- Дата - Дата на которую нужно получить значения ставки
//  Контрагент	- СправочникСсылка.Контрагенты	- ссылка на справочник Контрагент
//  Договор	 	- СправочникСсылка.ДоговорыКонтрагентов	- ссылка на справочник Договоры контрагентов
// 
// Возвращаемое значение:
//   - Структура 
//		* ЗначениеСтавкиНДС - Число - Значение ставки НДС на переданную дату
//		* ЗначениеСтавкиНСП - Число - Значение ставки НСП на переданную дату
//
Функция ПолучитьЗначенияСтавокНДСиНСП(Период, Договор, ЗначенияСтавок = Неопределено) Экспорт
		
	Результат = Новый Структура("ЗначениеСтавкиНДС, ЗначениеСтавкиНСП, ЗначениеСтавкиНСПДляОС", 0, 0, 0);
	
	Если НЕ ЗначенияСтавок = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Результат, ЗначенияСтавок);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСтавокНалогов.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС
		|ИЗ
		|	РегистрСведений.ЗначенияСтавокНалогов КАК ЗначенияСтавокНалогов
		|ГДЕ
		|	ЗначенияСтавокНалогов.ДоговорКонтрагента = &Договор";
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(Результат, ВыборкаДетальныеЗаписи);		
	КонецЕсли;             

	Возврат Результат;
	
КонецФункции // ПолучитьЗначенияСтавокНДСиНСП()

Функция СведенияПоСчетамФактурамВыписанным(Организация, НачалоМесяца, КонецМесяца, ОтчетПоНДСПоПоставке) Экспорт
	
	// Переход на ЭСФ.
	Если НачалоМесяца < Дата(2020, 07, 01) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СчетаФактурыВыписанные.Регистратор КАК Регистратор,
			|	СчетаФактурыВыписанные.Организация КАК Организация,
			|	СчетаФактурыВыписанные.Контрагент КАК Контрагент,
			|	СчетаФактурыВыписанные.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
			|	СчетаФактурыВыписанные.ДатаПоставки КАК ДатаПоставки,
			|	СчетаФактурыВыписанные.СтавкаНДС КАК СтавкаНДС,
			|	СчетаФактурыВыписанные.Сумма КАК Сумма,
			|	СчетаФактурыВыписанные.СуммаНДС КАК СуммаНДС,
			|	СчетаФактурыВыписанные.СуммаНеоблагаемая КАК СуммаНСП,
			|	СчетаФактурыВыписанные.Сумма + СчетаФактурыВыписанные.СуммаНДС + СчетаФактурыВыписанные.СуммаНеоблагаемая КАК Всего,
			|	СчетаФактурыВыписанные.Документ КАК ДокументРеализации,
			|	СчетаФактурыВыписанные.ДатаСФ КАК Период,
			|	СчетаФактурыВыписанные.СерияБланкаСФ КАК СерияБланкаСФ,
			|	ВЫБОР
			|		КОГДА &РеализацияСДоначислениемНДС
			|			ТОГДА СчетаФактурыВыписанные.СуммаДоначисления
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДоначисления,
			|	ВЫБОР
			|		КОГДА &РеализацияСДоначислениемНДС
			|			ТОГДА СчетаФактурыВыписанные.СуммаДоначисленияНДС
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДоначисленияНДС,
			|	СчетаФактурыВыписанные.ПоступлениеОтНерезидента КАК ПоступлениеОтНерезидента
			|ИЗ
			|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &ОтчетПоНДСПоПоставке
			|				ТОГДА СчетаФактурыВыписанные.ДатаПоставки МЕЖДУ &НачалоМесяца И &КонецМесяца
			|			ИНАЧЕ СчетаФактурыВыписанные.ДатаСФ МЕЖДУ &НачалоМесяца И &КонецМесяца
			|		КОНЕЦ
			|	И СчетаФактурыВыписанные.СерияБланкаСФ <> """"
			|	И СчетаФактурыВыписанные.Организация = &Организация";
		
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца);
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ОтчетПоНДСПоПоставке", ОтчетПоНДСПоПоставке);
		Запрос.УстановитьПараметр("РеализацияСДоначислениемНДС", ПолучитьФункциональнуюОпцию("УчетДоначисленияНДС"));
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СчетаФактурыВыписанные.Регистратор КАК Регистратор,
			|	СчетаФактурыВыписанные.Организация КАК Организация,
			|	СчетаФактурыВыписанные.Контрагент КАК Контрагент,
			|	СчетаФактурыВыписанные.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
			|	СчетаФактурыВыписанные.ДатаПоставки КАК ДатаПоставки,
			|	СчетаФактурыВыписанные.СтавкаНДС КАК СтавкаНДС,
			|	СчетаФактурыВыписанные.Сумма КАК Сумма,
			|	СчетаФактурыВыписанные.СуммаНДС КАК СуммаНДС,
			|	СчетаФактурыВыписанные.СуммаНеоблагаемая КАК СуммаНСП,
			|	СчетаФактурыВыписанные.Сумма + СчетаФактурыВыписанные.СуммаНДС + СчетаФактурыВыписанные.СуммаНеоблагаемая КАК Всего,
			|	СчетаФактурыВыписанные.Документ КАК ДокументРеализации,
			|	СчетаФактурыВыписанные.ДатаСФ КАК Период,
			|	СчетаФактурыВыписанные.СерияБланкаСФ КАК СерияБланкаСФ,
			|	ВЫБОР
			|		КОГДА &РеализацияСДоначислениемНДС
			|			ТОГДА СчетаФактурыВыписанные.СуммаДоначисления
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДоначисления,
			|	ВЫБОР
			|		КОГДА &РеализацияСДоначислениемНДС
			|			ТОГДА СчетаФактурыВыписанные.СуммаДоначисленияНДС
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДоначисленияНДС,
			|	СчетаФактурыВыписанные.ПоступлениеОтНерезидента КАК ПоступлениеОтНерезидента
			|ИЗ
			|	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &ОтчетПоНДСПоПоставке
			|				ТОГДА СчетаФактурыВыписанные.ДатаОтчета МЕЖДУ &НачалоМесяца И &КонецМесяца
			|			ИНАЧЕ СчетаФактурыВыписанные.ДатаСФ МЕЖДУ &НачалоМесяца И &КонецМесяца
			|		КОНЕЦ
			|	И СчетаФактурыВыписанные.Организация = &Организация";
		
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца);
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ОтчетПоНДСПоПоставке", ОтчетПоНДСПоПоставке);
		Запрос.УстановитьПараметр("РеализацияСДоначислениемНДС", ПолучитьФункциональнуюОпцию("УчетДоначисленияНДС"));
	КонецЕсли;	
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Функция СведенияОПоступлении(Организация, НачалоМесяца, КонецМесяца, НеУчитыватьЗакупкиБезНДС, ОтчетПоНДСПоПоставке, НалоговыйКонтракт, Сумма053, Сумма054) Экспорт
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("Организация", Организация);
	ПараметрыЗапроса.Вставить("НачалоПериода", НачалоМесяца);
	ПараметрыЗапроса.Вставить("КонецПериода", КонецМесяца);
	ПараметрыЗапроса.Вставить("ОтчетПоНДСПоПоставке", ОтчетПоНДСПоПоставке);
	ПараметрыЗапроса.Вставить("НеУчитыватьЗакупкиБезНДС", НеУчитыватьЗакупкиБезНДС);
	ПараметрыЗапроса.Вставить("НалоговыйКонтракт", НалоговыйКонтракт);
	
	ДокументыПриобретенныхМатРесурсов = Документы.ОтчетПоНДС.ДанныеОтчетаРеестраПриобретенныхМатРесурсов(ПараметрыЗапроса, Истина, Сумма053, Сумма054);
	ДокументыВвезенныхМатРесурсовВКР = Документы.ОтчетПоНДС.ДанныеОтчетаРеестраВвезенныхМатериальныхРесурсовВКР(ПараметрыЗапроса, Истина, Сумма053, Сумма054);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 	"ВЫБРАТЬ
	 	|	СведенияОПоступлении.Контрагент КАК Контрагент,
	 	|	СведенияОПоступлении.ЗачетНДС КАК ЗачетНДС,
	 	|	СведенияОПоступлении.Сумма КАК Сумма,
	 	|	СведенияОПоступлении.СуммаНДС КАК СуммаНДС,
	 	|	СведенияОПоступлении.СуммаНСП КАК СуммаНСП,
	 	|	СведенияОПоступлении.СуммаАкциза КАК СуммаАкциза,
	 	|	СведенияОПоступлении.Сумма + СведенияОПоступлении.СуммаНДС + СведенияОПоступлении.СуммаНСП КАК Всего,
	 	|	СведенияОПоступлении.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
	 	|	СведенияОПоступлении.Контрагент.СЭЗ КАК СЭЗ,
	 	|	СведенияОПоступлении.Регистратор КАК Регистратор,
	 	|	СведенияОПоступлении.ДоговорКонтрагента КАК ДоговорКонтрагента,
	 	|	СведенияОПоступлении.НДСНеПодтвержден КАК НДСНеПодтвержден,
	 	|	СведенияОПоступлении.ПоступлениеОтНерезидента КАК ПоступлениеОтНерезидента,
	 	|	СведенияОПоступлении.Услуги КАК Услуги
	 	|ИЗ
	 	|	РегистрСведений.СведенияОПоступлении КАК СведенияОПоступлении  
		|ГДЕ
		|	СведенияОПоступлении.Регистратор В (&ДокументыПриобретенныхМатРесурсов)
		|	ИЛИ СведенияОПоступлении.Регистратор В (&ДокументыВвезенныхМатРесурсовВКР)
	 	|
	 	|ОБЪЕДИНИТЬ ВСЕ
	 	|
	 	|ВЫБРАТЬ
	 	|	СведенияОПоступлении.Контрагент,
	 	|	СведенияОНДСНаИмпорт.ЗачетНДС,
	 	|	СведенияОНДСНаИмпорт.Сумма,
	 	|	СведенияОНДСНаИмпорт.СуммаНДС,
	 	|	0,
	 	|	0,
	 	|	СведенияОНДСНаИмпорт.Сумма + СведенияОНДСНаИмпорт.СуммаНДС,
	 	|	СведенияОПоступлении.Контрагент.ПризнакСтраны,
	 	|	СведенияОПоступлении.Контрагент.СЭЗ,
	 	|	СведенияОНДСНаИмпорт.Регистратор,
	 	|	СведенияОПоступлении.ДоговорКонтрагента,
	 	|	СведенияОПоступлении.НДСНеПодтвержден,
	 	|	ЛОЖЬ,
	 	|	СведенияОПоступлении.Услуги
	 	|ИЗ
	 	|	РегистрСведений.СведенияОНДСНаИмпорт КАК СведенияОНДСНаИмпорт
	 	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПоступлении КАК СведенияОПоступлении
	 	|		ПО СведенияОНДСНаИмпорт.Организация = СведенияОПоступлении.Организация
	 	|			И СведенияОНДСНаИмпорт.Документ = СведенияОПоступлении.Регистратор
	 	|ГДЕ
	 	|	СведенияОНДСНаИмпорт.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	 	|	И СведенияОНДСНаИмпорт.Организация = &Организация";
	Запрос.УстановитьПараметр("КонецМесяца", 						КонецМесяца);
	Запрос.УстановитьПараметр("НачалоМесяца", 						НачалоМесяца);
	Запрос.УстановитьПараметр("Организация", 						Организация);  
	Запрос.УстановитьПараметр("ДокументыПриобретенныхМатРесурсов", 	ДокументыПриобретенныхМатРесурсов);
	Запрос.УстановитьПараметр("ДокументыВвезенныхМатРесурсовВКР", 	ДокументыВвезенныхМатРесурсовВКР);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

// Функция - Расчет всех сумм отчета НДС - как основных сумм, например, "050",
//           так и вспомогательных, например, СуммаДоотгрузки или КоэффициентОсвобожденныхПоставок
//
// Параметры:
//  ВидСуммы	- Строка - вид расчета суммы. Например, расчет суммы строки отчета "050" или вспомогательной суммы СуммаДоотгрузки
//  Параметры 	- Структура - содержит перечень всех используемых данных для каждого вида расчета суммы.
// Возвращаемое значение:
//   - Число 	- значение расчитанной суммы
Функция РасчетСуммыОтчетаНДС(ВидСуммы, Знач Параметры) Экспорт
	СтруктураВозврата = Новый Структура;
	РезультатРасчета = 0;
	ТаблицаРасшифровка = Неопределено;
	ТаблицаДетальныеЗаписи = Неопределено;
	
	Если ВидСуммы = "СуммаДоотгрузки" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Доотгрузка
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузки" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Доотгрузка
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНСПДоотгрузки" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Доотгрузка
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНСП;
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
		КонецЦикла;	
		
	ИначеЕсли ВидСуммы = "СуммаДоотгрузкаНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузкаНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
		КонецЦикла;
				
	ИначеЕсли ВидСуммы = "СуммаДоотгрузкаОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаНДСДоотгрузкаОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Доотгрузка 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
		КонецЦикла;		
		
	ИначеЕсли ВидСуммы = "СуммаАвансы" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСАвансы" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНСПАвансы" Тогда
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНСП;
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТабличнойЧасти);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаАвансыНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидСуммы = "СуммаНДСАвансыНулеваяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
				
	ИначеЕсли ВидСуммы = "СуммаАвансыОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.Сумма;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаНДСАвансыОсвобожденнаяСтавка" Тогда
		// Параметры.Таблица - табличная часть Авансы 
		Для каждого СтрокаТабличнойЧасти Из Параметры.Таблица Цикл
			Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				Если СтрокаТабличнойЧасти.СуммаДокумента <> 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТабличнойЧасти.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
						
	ИначеЕсли ВидСуммы = "СуммаПродажОбщая" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации 
		РезультатРасчета  = Параметры.Таблица.Итог("Сумма") + Параметры.СуммаАвансы - Параметры.СуммаДоотгрузки;		
						
	ИначеЕсли ВидСуммы = "СуммаПродажОсвобожденная" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл		
			Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
			КонецЕсли;					
		КонецЦикла;		
		 РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансы - Параметры.СуммаДоотгрузки;
						
	ИначеЕсли ВидСуммы = "КоэффициентОсвобожденныхПоставокРасчетный" Тогда
		
		Сумма053 = Параметры.Сумма053;
		
		Сумма054 = Параметры.Сумма054 - (Параметры.СуммаАвансы - Параметры.СуммаНДСАвансы - Параметры.СуммаНСПАвансы) 
							+ (Параметры.СуммаДоотгрузки - Параметры.СуммаНДСДоотгрузки - Параметры.СуммаНСПДоотгрузки);							
		
		Если Сумма054 = 0 Тогда
			КоэффициентОсвобожденныхПоставок = 0;
		Иначе
			КоэффициентОсвобожденныхПоставок = Окр(Сумма053 / Сумма054, 4);
		КонецЕсли;
		
		Если КоэффициентОсвобожденныхПоставок <= (Параметры.ПороговыйПроцентОсвобожденныхПоставок / 100) 
			ИЛИ КоэффициентОсвобожденныхПоставок = 0 Тогда
			КоэффициентОсвобожденныхПоставокРасчетный = 0;
		Иначе
			КоэффициентОсвобожденныхПоставокРасчетный = КоэффициентОсвобожденныхПоставок;
		КонецЕсли;	
		
		РезультатРасчета = КоэффициентОсвобожденныхПоставокРасчетный;
		
	ИначеЕсли ВидСуммы = "НДСДляРаспределения" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
				СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
			КонецЦикла;
		КонецЕсли;	
		
	ИначеЕсли ВидСуммы = "НДСДляРаспределенияКР" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение 
					И ((СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И НЕ СтрокаТаблицыЗначений.СЭЗ)
						ИЛИ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента) Тогда
					
					//И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					//И НЕ СтрокаТаблицыЗначений.СЭЗ Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР  
					И НЕ СтрокаТаблицыЗначений.СЭЗ)
					ИЛИ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "НДСДляРаспределенияЕАЭС" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение 
					И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "НДСДляРаспределенияНеКР" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Распределение 
					И (НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					ИЛИ (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И СтрокаТаблицыЗначений.СЭЗ))
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если (НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					ИЛИ (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И СтрокаТаблицыЗначений.СЭЗ))
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
	ИначеЕсли ВидСуммы = "НДСКРСебестоимость" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость 
					И ((СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И НЕ СтрокаТаблицыЗначений.СЭЗ)
						ИЛИ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента) Тогда
						
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;		
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "НДСНеКРСебестоимость" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость 
					И (НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 					
					ИЛИ (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И СтрокаТаблицыЗначений.СЭЗ)) 
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;		
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "НДСЕАЭССебестоимость" Тогда
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если Параметры.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ЗачетНДС = Перечисления.ВидыЗачетаНДС.Себестоимость 
					И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;		
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "НДСКРНеРазрешенныйКЗачету" Тогда
		РезультатРасчета = Окр(Параметры.КоэффициентОсвобожденныхПоставокРасчетный * Параметры.НДСДляРаспределенияКР + Параметры.НДСКРСебестоимость, 2);
		
	ИначеЕсли ВидСуммы = "НДСЕАЭСНеРазрешенныйКЗачету" Тогда
		РезультатРасчета = Окр(Параметры.КоэффициентОсвобожденныхПоставокРасчетный * Параметры.НДСДляРаспределенияЕАЭС + Параметры.НДСЕАЭССебестоимость, 2);
		
	ИначеЕсли ВидСуммы = "НДСНеКРНеРазрешенныйКЗачету" Тогда
		РезультатРасчета = Окр(Параметры.КоэффициентОсвобожденныхПоставокРасчетный * Параметры.НДСДляРаспределенияНеКР + Параметры.НДСНеКРСебестоимость, 2);		
		
	ИначеЕсли ВидСуммы = "Сумма050" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();

		Если Параметры.ЭтоКонтракт Тогда
			РезультатРасчета = 0;
		Иначе
			ТаблицаСтавок = ПолучитьСтавкиНДССНулевымиЗначениями(Параметры.Период);
			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
			
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл	
				
				Если СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					Продолжить;	
				КонецЕсли;	
				
				СтруктураПоиска.СтавкаНДС = СтрокаТаблицыЗначений.СтавкаНДС;
				МассивСтавок = ТаблицаСтавок.НайтиСтроки(СтруктураПоиска);
				
				Если МассивСтавок.Количество() = 0 Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма + СтрокаТаблицыЗначений.СуммаДоначисления;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "Авансы";
			СтрокаРасшифровки.Сумма = Параметры.СуммаАвансы;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "АвансыНДС";
			СтрокаРасшифровки.Сумма = Параметры.СуммаНДСАвансы;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "АвансыНСП";
			СтрокаРасшифровки.Сумма = Параметры.СуммаНСПАвансы;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "Доотгрузка";
			СтрокаРасшифровки.Сумма = Параметры.СуммаДоотгрузки;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "ДоотгрузкаНДС";
			СтрокаРасшифровки.Сумма = Параметры.СуммаНДСДоотгрузки;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "ДоотгрузкаНСП";
			СтрокаРасшифровки.Сумма = Параметры.СуммаНСПДоотгрузки;
			
			РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансы - Параметры.СуммаНДСАвансы - Параметры.СуммаНСПАвансы 
								- (Параметры.СуммаДоотгрузки - Параметры.СуммаНДСДоотгрузки - Параметры.СуммаНСПДоотгрузки);		
					
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "Сумма051" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;	
		КонецЕсли;		
						
	ИначеЕсли ВидСуммы = "Сумма052" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Нулевая 
					И СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе				
			РезультатРасчета = 0;
		КонецЕсли;		
		
	ИначеЕсли ВидСуммы = "Сумма053" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Необлагаемая
					Или СтрокаТаблицыЗначений.СтавкаНДС = Справочники.СтавкиНДС.Освобожденная Тогда
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;			
		Иначе
			РезультатРасчета = 0;		
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "Сумма054" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - суммы ранее расчитанных строк 050, 051 и 053 	
			РезультатРасчета = Параметры.Сумма050 + Параметры.Сумма051 + Параметры.Сумма053;			
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;				
								
	ИначеЕсли ВидСуммы = "Сумма055" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если ((СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					И НЕ СтрокаТаблицыЗначений.СЭЗ)
					ИЛИ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента)
					// Дополнительное условие по услугам
					ИЛИ (СтрокаТаблицыЗначений.Услуги
						И (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
							ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт)) Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
								
	ИначеЕсли ВидСуммы = "Сумма056" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если (НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					ИЛИ (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И СтрокаТаблицыЗначений.СЭЗ))
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента 
					
					И НЕ СтрокаТаблицыЗначений.Услуги Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;					
								
	ИначеЕсли ВидСуммы = "Сумма057" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма, СуммаАкциза");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента 
					
					И НЕ СтрокаТаблицыЗначений.Услуги Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;
		Иначе
			РезультатРасчета = 0;			
		КонецЕсли;	
									
	ИначеЕсли ВидСуммы = "Сумма058" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - суммы ранее расчитанных строк 055 и 056
			РезультатРасчета = Параметры.Сумма055 + Параметры.Сумма056;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;				
	
	ИначеЕсли ВидСуммы = "Сумма059" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл 
				
				Если СтрокаТаблицыЗначений.ПоступлениеОтНерезидента Тогда
					Продолжить;	
				КонецЕсли;
				
				РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС + СтрокаТаблицыЗначений.СуммаДоначисленияНДС;
				СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
				СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
			КонецЦикла;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "Авансы";
			СтрокаРасшифровки.СуммаНДС = Параметры.СуммаНДСАвансы;
			
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			СтрокаРасшифровки.Регистратор = "Доотгрузка";
			СтрокаРасшифровки.СуммаНДС = -Параметры.СуммаНДСДоотгрузки;
			
			РезультатРасчета = РезультатРасчета + Параметры.СуммаНДСАвансы - Параметры.СуммаНДСДоотгрузки;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;						
		
	//НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ		
	//
	ИначеЕсли ВидСуммы = "Сумма060" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если ((СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					И НЕ СтрокаТаблицыЗначений.СЭЗ)
					ИЛИ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента)
					// Дополнительное условие по услугам
					ИЛИ (СтрокаТаблицыЗначений.Услуги
						И (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
							ИЛИ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт)) Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;						

			РезультатРасчета = РезультатРасчета - Параметры.НДСКРНеРазрешенныйКЗачету;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
		
	// НДС НА ИМПОРТ ПОДЛЕЖАЩИЙ ЗАЧЕТУ
	//
	ИначеЕсли ВидСуммы = "Сумма061" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
 
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если (НЕ СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР 
					ИЛИ (СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР И СтрокаТаблицыЗначений.СЭЗ))
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента 
					
					И НЕ СтрокаТаблицыЗначений.Услуги Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;						

			РезультатРасчета = РезультатРасчета - Параметры.НДСНеКРНеРазрешенныйКЗачету;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;		
		
	// В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО  СОЮЗА
	//
	ИначеЕсли ВидСуммы = "Сумма062" Тогда
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Если НЕ Параметры.ЭтоКонтракт Тогда
			Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
				Если СтрокаТаблицыЗначений.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС 
					И НЕ СтрокаТаблицыЗначений.ПоступлениеОтНерезидента 
					
					И НЕ СтрокаТаблицыЗначений.Услуги Тогда
					
					РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
					СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
					СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
				КонецЕсли;
			КонецЦикла;						

			РезультатРасчета = РезультатРасчета - Параметры.НДСЕАЭСНеРазрешенныйКЗачету;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;				
		
	// НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ
	//
	ИначеЕсли ВидСуммы = "Сумма063" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			РезультатРасчета = Параметры.НДСКРНеРазрешенныйКЗачету + Параметры.НДСНеКРНеРазрешенныйКЗачету;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
										
	//НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ		
	//
	ИначеЕсли ВидСуммы = "Сумма064" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - суммы ранне расчитанных строк 060 и 061
			РезультатРасчета = Параметры.Сумма060 + Параметры.Сумма061;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
								
	// В ТОМ ЧИСЛЕ НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ИСПОЛЬЗУЕМЫЕ ДЛЯ ПОСТАВОК С НУЛЕВОЙ СТАВКОЙ
	//
	ИначеЕсли ВидСуммы = "Сумма065" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - умножение коэфициента нулевых поставок (КфНП) и ранее расчитанной строки 064
			Сумма = Параметры.Сумма050 + Параметры.Сумма051;
			
			Если Сумма = 0 ИЛИ Параметры.Сумма051 = 0 Тогда
				РезультатРасчета = 0;
			Иначе
				КфНП = Окр(Параметры.Сумма051 / (Сумма), 4);
				РезультатРасчета = Окр(КфНП * Параметры.Сумма064, 2);
			КонецЕсли;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
				
	// НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО (=059-064) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)
	//
	ИначеЕсли ВидСуммы = "Сумма066" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - разность ранне расчитанных строк 059 и 064
			РезультатРасчета = Параметры.Сумма059 - Параметры.Сумма064;
		Иначе
			РезультатРасчета = 0;		
		КонецЕсли;
				
	// НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО ВСЕГО (=066-067) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)
	//
	ИначеЕсли ВидСуммы = "Сумма068" Тогда
		Если НЕ Параметры.ЭтоКонтракт Тогда
			// Параметры - разность ранне расчитанных строк 066 и 067
			РезультатРасчета = Параметры.Сумма066 - Параметры.Сумма067;
		Иначе
			РезультатРасчета = 0;
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "КфНП" Тогда
		Сумма = Параметры.Сумма050 + Параметры.Сумма051;
		
		Если Сумма = 0 ИЛИ Параметры.Сумма051 = 0 Тогда
			РезультатРасчета = 0;
		Иначе
			РезультатРасчета = Окр(Параметры.Сумма051 / (Сумма), 4);
		КонецЕсли;
		
	ИначеЕсли ВидСуммы = "Сумма069" Тогда
		// Формула: 069 = 050 + 051 + 053
								
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
		КонецЦикла;		
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаАвансы - Параметры.СуммаНДСАвансы - Параметры.СуммаНСПАвансы 
								- (Параметры.СуммаДоотгрузки - Параметры.СуммаНДСДоотгрузки - Параметры.СуммаНСПДоотгрузки);
		
	ИначеЕсли ВидСуммы = "Сумма070" Тогда
		// Формула: 070 = 059
		
		// Параметры.Таблица - таблица значений из РС Сведения о реализации
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
		КонецЦикла;
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Авансы";
		СтрокаРасшифровки.СуммаНДС = Параметры.СуммаНДСАвансы;
		
		СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
		СтрокаРасшифровки.Регистратор = "Доотгрузка";
		СтрокаРасшифровки.СуммаНДС = -Параметры.СуммаНДСДоотгрузки;
		
		РезультатРасчета = РезультатРасчета + Параметры.СуммаНДСАвансы - Параметры.СуммаНДСДоотгрузки;						

	ИначеЕсли ВидСуммы = "Сумма071" Тогда
		// Формула: 071 = 055 + 056
		
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, Сумма");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
		
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.Сумма;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);	
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
		КонецЦикла;				

	ИначеЕсли ВидСуммы = "Сумма072" Тогда
		// Формула: 072 = 060 + 061
		
		// Параметры.Таблица - таблица значений из РС Сведения о поступлении
		ТаблицаРасшифровка = Параметры.Таблица.СкопироватьКолонки("Регистратор, СуммаНДС");
		ТаблицаДетальныеЗаписи = Параметры.Таблица.СкопироватьКолонки();
 
		Для каждого СтрокаТаблицыЗначений Из Параметры.Таблица Цикл
			РезультатРасчета = РезультатРасчета + СтрокаТаблицыЗначений.СуммаНДС;
			СтрокаРасшифровки = ТаблицаРасшифровка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, СтрокаТаблицыЗначений);
			СтрокаТаблицы = ТаблицаДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицыЗначений);
		КонецЦикла;						

		РезультатРасчета = РезультатРасчета - Параметры.НДСКРНеРазрешенныйКЗачету - Параметры.НДСНеКРНеРазрешенныйКЗачету;
								
	Иначе
	    РезультатРасчета = 0;           			
	КонецЕсли;
	
	СтруктураВозврата.Вставить("РезультатРасчета", 			РезультатРасчета);
	СтруктураВозврата.Вставить("ТаблицаРасшифровка", 		ТаблицаРасшифровка);
	СтруктураВозврата.Вставить("ТаблицаДетальныеЗаписи", 	ТаблицаДетальныеЗаписи);
	
	Возврат СтруктураВозврата;
	
КонецФункции // РасчетСуммыОТчетаНДС()

#КонецОбласти
