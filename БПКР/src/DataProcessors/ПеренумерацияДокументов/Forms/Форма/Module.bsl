///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("Организация") Тогда 
		Организация = Параметры.Организация;
	Иначе                            
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;

	Если Параметры.Свойство("НачалоПериода") И Параметры.Свойство("КонецПериода") Тогда
		НачалоПериода = Параметры.НачалоПериода;
		КонецПериода = Параметры.КонецПериода;
	Иначе
		ДатаСеанса = ТекущаяДатаСеанса();		
		НачалоПериода = НачалоГода(ДатаСеанса);
		КонецПериода = КонецМесяца(ДатаСеанса);
	КонецЕсли;
	
	ИспользоватьПрефиксКассыИБанковскогоСчета = ПолучитьФункциональнуюОпцию("ИспользоватьПрефиксКассыИБанковскогоСчета");

	НомерПервогоДокумента = 1;
	
	ПроверитьВерсиюИРежимСовместимостиПлатформы();
	
	ЗаполнитьСписокТиповОбъектов();

	РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенумеровать(Команда)
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонецПериода) И НачалоПериода > КонецПериода Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "НачалоПериода",, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросСформировать", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Будет выполнена перенумерация документов. Продолжить?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеИзменяемыхОбъектовПриИзменении(Элемент)
	ВыбранныйТип = Элементы.ПредставлениеИзменяемыхОбъектов.СписокВыбора.НайтиПоЗначению(ПредставлениеИзменяемыхОбъектов);
	Если ВыбранныйТип = Неопределено Тогда
		Для Каждого Тип Из Элементы.ПредставлениеИзменяемыхОбъектов.СписокВыбора Цикл
			Если СтрНайти(НРег(Тип.Представление), НРег(ПредставлениеИзменяемыхОбъектов)) = 1 Тогда
				ВыбранныйТип = Тип;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыбранныйТип = Неопределено Тогда
		ВидыИзменяемыхОбъектов = "";
	Иначе
		ВидыИзменяемыхОбъектов = ВыбранныйТип.Значение;
	КонецЕсли;
	
	Касса = ПредопределенноеЗначение("Справочник.Кассы.ПустаяСсылка");
	БанковскийСчет = ПредопределенноеЗначение("Справочник.БанковскиеСчета.ПустаяСсылка");
	ЗаполнитьПрефикс();
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	ЗаполнитьПример();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИзменяемыхОбъектовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ПолеВводаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура НомерПервогоДокументаПриИзменении(Элемент)
	ЗаполнитьПример();
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксПриИзменении(Элемент)
	ЗаполнитьПример();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗаполнитьПрефикс();
	ЗаполнитьПример();
КонецПроцедуры

&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	ЗаполнитьПрефикс();
	ЗаполнитьПример();
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	ЗаполнитьПрефикс();
	ЗаполнитьПример();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросСформировать(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Результат = ПеренумероватьНаСервере();
		
		Если Результат.Отказ Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстСообщения);
		Иначе
			ТекстОповещения = НСтр("ru = 'Перенумерация документов завершена.'");
			ТекстПояснения = СтрШаблон(НСтр("ru = 'Обработано %1 документов.'"), Результат.Количество);
			ПоказатьОповещениеПользователя(ТекстОповещения,, ТекстПояснения, БиблиотекаКартинок.Информация32);
			ОбновитьИнтерфейс();
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура устанавливает видимость и доступность элементов.
//
Процедура УстановитьВидимостьДоступностьЭлементов()
	ЭтоКассовыйДокумент = ?(ВидыИзменяемыхОбъектов = "Документ.РасходныйКассовыйОрдер"
		Или ВидыИзменяемыхОбъектов = "Документ.ПриходныйКассовыйОрдер", Истина, Ложь);
		
	ЭтоБанковскийДокумент = ?(ВидыИзменяемыхОбъектов = "Документ.ПлатежноеПоручениеВходящее"
		Или ВидыИзменяемыхОбъектов = "Документ.ОплатаПлатежнойКартой"
		Или ВидыИзменяемыхОбъектов = "Документ.ПлатежноеПоручениеИсходящее", Истина, Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКасса", "Видимость", ЭтоКассовыйДокумент);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаБанковскийСчет", "Видимость", ЭтоБанковскийДокумент);
	
	Элементы.Префикс.ТолькоПросмотр = ИспользоватьПрефиксКассыИБанковскогоСчета И (ЭтоКассовыйДокумент Или ЭтоБанковскийДокумент);
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()

&НаСервере
Процедура ЗаполнитьСписокТиповОбъектов()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьКоллекциюДоступныхДляИзмененияОбъектов(Элементы.ПредставлениеИзменяемыхОбъектов.СписокВыбора, Ложь);
КонецПроцедуры

&НаСервере
Процедура ПроверитьВерсиюИРежимСовместимостиПлатформы()
	
	Информация = Новый СистемнаяИнформация;
	Если Не (Лев(Информация.ВерсияПриложения, 3) = "8.3"
		И (Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.НеИспользовать
		Или (Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_1
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_2_13
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости["Версия8_2_16"]
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости["Версия8_3_1"]
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости["Версия8_3_2"]))) Тогда
		
		ВызватьИсключение НСтр("ru = 'Обработка предназначена для запуска на версии платформы
			|1С:Предприятие 8.3 с отключенным режимом совместимости или выше'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДанныеВыбора = ДанныеВыбора(Текст, Элемент.СписокВыбора);
	СтандартнаяОбработка = Не ЗначениеЗаполнено(Текст);
КонецПроцедуры

&НаКлиенте
Функция ДанныеВыбора(Строка, СписокВыбора)
	
	Результат = Новый СписокЗначений;
	
	Если Не ЗначениеЗаполнено(Строка) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого Элемент Из СписокВыбора Цикл
		ПредставлениеЭлемента = Элемент.Представление;
		
		СтрокаПоиска = ПредставлениеЭлемента;
		
		ФорматированныеСтроки = Новый Массив;
		Для Каждого Подстрока Из СтрРазделить(Строка, " ", Ложь) Цикл
			Позиция = СтрНайти(НРег(СтрокаПоиска), НРег(Подстрока));
			Если Позиция = 0 Тогда
				ФорматированныеСтроки = Неопределено;
				Прервать;
			КонецЕсли;
			
			ПодстрокаДоВхождения = Лев(СтрокаПоиска, Позиция - 1);
			ПодстрокаВхождения = Сред(СтрокаПоиска, Позиция, СтрДлина(Подстрока));
			СтрокаПоиска = Сред(СтрокаПоиска, Позиция + СтрДлина(Подстрока));
			
			ФорматированныеСтроки.Добавить(ПодстрокаДоВхождения);
			ФорматированныеСтроки.Добавить(Новый ФорматированнаяСтрока(ПодстрокаВхождения, Новый Шрифт( , , Истина), Новый Цвет(0,128,0)));
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ФорматированныеСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		ФорматированныеСтроки.Добавить(СтрокаПоиска);
		СтрокаСПодсветкой = Новый ФорматированнаяСтрока(ФорматированныеСтроки);
		
		Результат.Добавить(Элемент.Значение, СтрокаСПодсветкой);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПрефикс()
	Если ЗначениеЗаполнено(Касса) Тогда 
		Префикс = Касса.Префикс;
	ИначеЕсли ЗначениеЗаполнено(БанковскийСчет) Тогда 
		Префикс = БанковскийСчет.Префикс;
	Иначе 
		Префикс = "";
	КонецЕсли;	
КонецПроцедуры // ЗаполнитьПрефикс()

&НаСервере
Процедура ЗаполнитьПример()
	ПримерПервыйНомер = "";
	ПримерВторойНомер = "";
	ПримерТысячныйНомер = "";		
	
	Если ВидыИзменяемыхОбъектов = "" 
		Или НомерПервогоДокумента = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксОрганизации        = "";
	
	ПрефиксацияОбъектовСобытия.ПриОпределенииПрефиксаИнформационнойБазы(ПрефиксИнформационнойБазы);
	ДополнитьСтрокуНулямиСлева(ПрефиксИнформационнойБазы, 2);
	
	ПрефиксацияОбъектовСобытия.ПриОпределенииПрефиксаОрганизации(Организация, ПрефиксОрганизации);
	// Если задана пустая ссылка на организацию.
	Если ПрефиксОрганизации = Ложь Тогда
		ПрефиксОрганизации = "";
	КонецЕсли;
	ДополнитьСтрокуНулямиСлева(ПрефиксОрганизации, 2);
	
	ШаблонПрефикса = "[ОР][ИБ]-[Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ОР]", ПрефиксОрганизации);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ИБ]", ПрефиксИнформационнойБазы);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);
	
	// Первый номер.
	ДлинаПрефикса = СтрДлина(ШаблонПрефикса);	
	ПримерПервыйНомер = Формат(НомерПервогоДокумента, "ЧГ=0");
	ДополнитьСтрокуНулямиСлева(ПримерПервыйНомер, 11 - ДлинаПрефикса);
	ПримерПервыйНомер = ШаблонПрефикса + ПримерПервыйНомер;
	
	// Второй номер.
	ПримерВторойНомер = Формат(НомерПервогоДокумента + 1, "ЧГ=0");
	ДополнитьСтрокуНулямиСлева(ПримерВторойНомер, 11 - ДлинаПрефикса);
	ПримерВторойНомер = ШаблонПрефикса + ПримерВторойНомер;
	
	// Тысячный номер.
	ПримерТысячныйНомер = Формат(НомерПервогоДокумента + 999, "ЧГ=0");
	ДополнитьСтрокуНулямиСлева(ПримерТысячныйНомер, 11 - ДлинаПрефикса);
	ПримерТысячныйНомер = ШаблонПрефикса + ПримерТысячныйНомер;

КонецПроцедуры 

&НаСервере
Процедура ДополнитьСтрокуНулямиСлева(Строка, ДлинаСтроки)
	Строка = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка, ДлинаСтроки, "0", "Слева");
КонецПроцедуры

&НаСервере
Функция ПеренумероватьНаСервере()

	Результат = Новый Структура("ТекстСообщения, Отказ, Количество", "", Ложь, 0);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка
		|ИЗ
		|	&ВидыИзменяемыхОбъектов КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Организация = &Организация
		|	И ТаблицаДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И &ДополнительныйОтбор
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаДокумента.МоментВремени";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВидыИзменяемыхОбъектов", ВидыИзменяемыхОбъектов);
	Если ЗначениеЗаполнено(Касса) Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныйОтбор", "ТаблицаДокумента.Касса = &Касса");
	ИначеЕсли ЗначениеЗаполнено(БанковскийСчет) Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныйОтбор", "ТаблицаДокумента.БанковскийСчет = &БанковскийСчет");
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныйОтбор", "ИСТИНА");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Касса", Касса);
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Результат.ТекстСообщения = НСтр("ru = 'Нет документов соответствующих указанным параметрам.'");
		Результат.Отказ = Истина;
		Возврат Результат;
	КонецЕсли;	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	// Предварительный сброс всех номеров.
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДокументОбъект.УстановитьНовыйНомер("§");	
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			Результат.ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись документа по причине: %1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка'"), УровеньЖурналаРегистрации.Ошибка,,, Результат.ТекстСообщения);
			Результат.Отказ = Истина;
			Возврат Результат;
		КонецПопытки;		
	КонецЦикла;
	
	// Установка префикса.
	ШаблонПрефикса = "[ОР][ИБ]-[Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ОР]", ПрефиксОрганизации);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ИБ]", ПрефиксИнформационнойБазы);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);
	ДлинаПрефикса = СтрДлина(ШаблонПрефикса);	
	
	// Установка нового номера
	ВыборкаДетальныеЗаписи.Сбросить();
	ТекущийНомер = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовыйНомерДокумента = Формат(НомерПервогоДокумента + ТекущийНомер, "ЧГ=0");
		ДополнитьСтрокуНулямиСлева(НовыйНомерДокумента, 11 - ДлинаПрефикса);
		НовыйНомерДокумента = ШаблонПрефикса + НовыйНомерДокумента;
		
		ДокументОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Номер = НовыйНомерДокумента;
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			Результат.ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись документа по причине: %1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка'"), УровеньЖурналаРегистрации.Ошибка,,, Результат.ТекстСообщения);
			Результат.Отказ = Истина;
			Возврат Результат;
		КонецПопытки;		
		
		ТекущийНомер = ТекущийНомер + 1;
	КонецЦикла;
	
	Результат.Количество = ВыборкаДетальныеЗаписи.Количество();
	Возврат Результат;
	
КонецФункции

#КонецОбласти
