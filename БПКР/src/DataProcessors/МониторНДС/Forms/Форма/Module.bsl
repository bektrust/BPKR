
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
		Объект.Дата = Параметры.Дата;
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Дата", "МесяцСтрокой");
		
		СформироватьНаСервере();
		РассчитатьАвансыДоотгрузки();
		УстановитьОтборНаАвансыДоотгрузки();		
		
		Элементы.Расшифровка.ОтборСтрок 	= Новый ФиксированнаяСтруктура("Владелец", "Неопределено");
		Элементы.ДетальныеЗаписи.ОтборСтрок = Новый ФиксированнаяСтруктура("Владелец", "Неопределено");
		
	Иначе		
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();	
	КонецЕсли;
	
	ЗаполнитьЗакладкуНастроек();
	
	УстановитьУсловноеОформление();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыШапки

&НаКлиенте
Процедура КонтрагентОтборПриИзменении(Элемент)
	
	УстановитьОтборНаАвансыДоотгрузки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорОтборПриИзменении(Элемент)
	
	УстановитьОтборНаАвансыДоотгрузки();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтрокиОтчета

&НаКлиенте
Процедура СтрокиОтчетаПриАктивизацииСтроки(Элемент)
	СтрокаТаблицыЗначений = Элементы.СтрокиОтчета.ТекущиеДанные;
	
	Элементы.РасшифровкаИтого.Видимость 		= Ложь;
	
	Если СтрокаТаблицыЗначений = Неопределено Тогда
		СтруктураОтбора = Новый ФиксированнаяСтруктура("Владелец", "Неопределено");	
	Иначе
		СтруктураОтбора = Новый ФиксированнаяСтруктура("Владелец", СтрокаТаблицыЗначений.Наименование);
		
		Если СтрокаТаблицыЗначений.Наименование = "Строка 50" Тогда
			Элементы.РасшифровкаИтого.Видимость 		= Истина;
		КонецЕсли;	
	КонецЕсли;	

	Элементы.Расшифровка.ОтборСтрок 	= СтруктураОтбора;
	Элементы.ДетальныеЗаписи.ОтборСтрок = СтруктураОтбора;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен месяц. Формирование отменено.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "МесяцСтрокой",,Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнена организация. Формирование отменено.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Организация",,Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;		
	КонецЕсли;	
	
	СформироватьНаСервере();
	РассчитатьАвансыДоотгрузки();
	УстановитьОтборНаАвансыДоотгрузки();
	
	Элементы.Расшифровка.ОтборСтрок 	= Новый ФиксированнаяСтруктура("Владелец", "Неопределено");
	Элементы.ДетальныеЗаписи.ОтборСтрок = Новый ФиксированнаяСтруктура("Владелец", "Неопределено");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура настройки условного оформления форм и динамических списков .
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// Таблица Расшифровка.
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Расшифровка");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Расшифровка.ВыделитьСтроку");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ДобавленныйРеквизитФон);
	
	// Таблица АвансыДоотгрузки.
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки");

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
 	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
 
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки.Контрагент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки.Дата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеСодержит;
	ОтборЭлемента.ПравоеЗначение = "Авансы";

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветНавигации);
	
    // Таблица АвансыДоотгрузки.
    Элемент = УсловноеОформление.Элементы.Добавить();

    ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
    ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки");

    ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
 	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
 
    ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки.Контрагент");
    ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
    
    ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АвансыДоотгрузки.Дата");
    ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
    ОтборЭлемента.ПравоеЗначение = "Авансы";

    Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветНавигации);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	ДатаНачала		= НачалоМесяца(Объект.Дата);
	ДатаОкончания	= КонецМесяца(Объект.Дата);
	
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(ДатаНачала, Организация);
	
	СтрокиОтчета.Очистить();
	Расшифровка.Очистить();
	ДетальныеЗаписи.Очистить();
	
	ТЗДетальныеЗаписи = РеквизитФормыВЗначение("ДетальныеЗаписи");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеМесяцаАвансыРасшифровка.Контрагент КАК Контрагент,
		|	СУММА(ЗакрытиеМесяцаАвансыРасшифровка.Сумма) КАК Сумма,
		|	СУММА(ЗакрытиеМесяцаАвансыРасшифровка.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ЗакрытиеМесяцаАвансыРасшифровка.СуммаНСП) КАК СуммаНСП,
		|	СУММА(ЗакрытиеМесяцаАвансыРасшифровка.Сумма - ЗакрытиеМесяцаАвансыРасшифровка.СуммаНДС - ЗакрытиеМесяцаАвансыРасшифровка.СуммаНСП) КАК Доход,
		|	СУММА(ЗакрытиеМесяцаАвансыРасшифровка.СуммаДокумента) КАК СуммаДокумента,
		|	ЗакрытиеМесяцаАвансыРасшифровка.Документ КАК Документ,
		|	ЗакрытиеМесяцаАвансыРасшифровка.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.ЗакрытиеМесяца.АвансыРасшифровка КАК ЗакрытиеМесяцаАвансыРасшифровка
		|ГДЕ
		|	НЕ ЗакрытиеМесяцаАвансыРасшифровка.Ссылка.ПометкаУдаления
		|	И ЗакрытиеМесяцаАвансыРасшифровка.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЗакрытиеМесяцаАвансыРасшифровка.СуммаДокумента <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытиеМесяцаАвансыРасшифровка.Документ,
		|	ЗакрытиеМесяцаАвансыРасшифровка.СтавкаНДС,
		|	ЗакрытиеМесяцаАвансыРасшифровка.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗакрытиеМесяцаДоотгрузкаРасшифровка.Контрагент КАК Контрагент,
		|	ЗакрытиеМесяцаДоотгрузкаРасшифровка.ДокументОперации КАК Документ,
		|	СУММА(ЗакрытиеМесяцаДоотгрузкаРасшифровка.Сумма) КАК Сумма,
		|	СУММА(ЗакрытиеМесяцаДоотгрузкаРасшифровка.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ЗакрытиеМесяцаДоотгрузкаРасшифровка.СуммаНСП) КАК СуммаНСП,
		|	СУММА(ЗакрытиеМесяцаДоотгрузкаРасшифровка.Сумма - ЗакрытиеМесяцаДоотгрузкаРасшифровка.СуммаНДС - ЗакрытиеМесяцаДоотгрузкаРасшифровка.СуммаНСП) КАК Доход
		|ИЗ
		|	Документ.ЗакрытиеМесяца.ДоотгрузкаРасшифровка КАК ЗакрытиеМесяцаДоотгрузкаРасшифровка
		|ГДЕ
		|	НЕ ЗакрытиеМесяцаДоотгрузкаРасшифровка.Ссылка.ПометкаУдаления
		|	И ЗакрытиеМесяцаДоотгрузкаРасшифровка.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЗакрытиеМесяцаДоотгрузкаРасшифровка.Сумма <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытиеМесяцаДоотгрузкаРасшифровка.ДокументОперации,
		|	ЗакрытиеМесяцаДоотгрузкаРасшифровка.Контрагент";	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Итоговая строка расшифровки для строки 050
	НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
	НоваяСтрокаТаблицы.Регистратор = НСтр("ru = 'ИТОГОВАЯ СТРОКА'");
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	// Доотгрузки
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", МассивРезультатов[1].Выгрузить());
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаДоотгрузки", ПараметрыРасчета);
	СуммаДоотгрузки = СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
		НоваяСтрокаТаблицы.Доотгрузка = СтрокаТаблицы.Сумма;
		НоваяСтрокаТаблицы.Владелец = "Строка 50";
	КонецЦикла;
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаНДСДоотгрузки", ПараметрыРасчета);
	СуммаНДСДоотгрузки = СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
	КонецЦикла;
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаНСПДоотгрузки", ПараметрыРасчета);
	СуммаНСПДоотгрузки = СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
	КонецЦикла;
	
	// Авансы
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", МассивРезультатов[0].Выгрузить());
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаАвансы", ПараметрыРасчета);
	СуммаАвансы 	= СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Документ);
		Отбор.Вставить("Владелец", "Строка 50");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
			НоваяСтрокаТаблицы.Аванс = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 50";
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаНДСАвансы", ПараметрыРасчета);
	СуммаНДСАвансы 	= СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
	КонецЦикла;
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("СуммаНСПАвансы", ПараметрыРасчета);
	СуммаНСПАвансы 	= СтруктураДанных.РезультатРасчета;
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Регистратор = СтрокаТаблицы.Документ;
	КонецЦикла;
	
	ЭтоКонтракт = ДанныеУчетнойПолитики.Контракт;
	
	// Реализации и поступления
	ТаблицаВсейРеализации = УчетНДС.СведенияПоСчетамФактурамВыписанным(Организация, ДатаНачала, ДатаОкончания, 
								ДанныеУчетнойПолитики.ОтчетПоНДСПоПоставке);    
								
	// Сумма050
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт",  		ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", 			ТаблицаВсейРеализации);
	ПараметрыРасчета.Вставить("Период",  			ДатаОкончания);
	ПараметрыРасчета.Вставить("СуммаАвансы", 		СуммаАвансы);
	ПараметрыРасчета.Вставить("СуммаНДСАвансы", 	СуммаНДСАвансы);
	ПараметрыРасчета.Вставить("СуммаНСПАвансы", 	СуммаНСПАвансы);
	ПараметрыРасчета.Вставить("СуммаДоотгрузки", 	СуммаДоотгрузки); 
	ПараметрыРасчета.Вставить("СуммаНДСДоотгрузки", СуммаНДСДоотгрузки);
	ПараметрыРасчета.Вставить("СуммаНСПДоотгрузки", СуммаНСПДоотгрузки);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма050", ПараметрыРасчета);
	Сумма050 = СтруктураДанных.РезультатРасчета; 
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 1;
	СтрокаТабличнойЧасти.Наименование = "Строка 50"; 
	СтрокаТабличнойЧасти.Строка = "Строка 50
									|ОБЛАГАЕМЫЕ ПОСТАВКИ НА ТЕРРИТОРИИ КР";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Доход по ненулевым ставкам НДС (ставка не равна нулю) от продаж
												|+ (плюс)
												|Авансы - НДС на авансы - НСП на авансы
												|- (минус)
												|(Доотгрузка - НДС - НСП)'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма050;
	
	СуммаРеализаций = 0;
	СуммаВозвратов = 0;
	СуммаДоходаОтПродажКР = 0;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("Владелец", "Строка 50");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 50";
			
		Иначе
			Для Каждого Строка Из МассивСтрок Цикл	
				ЗаполнитьЗначенияСвойств(Строка, СтрокаТаблицы);
				Строка.Сумма = СтрокаТаблицы.Всего;
				Строка.Доход = СтрокаТаблицы.Сумма;
			КонецЦикла;	
		КонецЕсли;
		
		Если СтрокаТаблицы.Сумма > 0 Тогда
			СуммаРеализаций = СуммаРеализаций + СтрокаТаблицы.Сумма;
		Иначе	
			СуммаВозвратов = СуммаВозвратов + СтрокаТаблицы.Сумма;	
		КонецЕсли;
		
		Если СтрокаТаблицы.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР Тогда
			СуммаДоходаОтПродажКР = СуммаДоходаОтПродажКР + СтрокаТаблицы.Сумма;	
		КонецЕсли;	
	КонецЦикла;	
	
	// Заполнение итоговой строки суммами.
	СтрокаТаблицы = ТЗДетальныеЗаписи.Найти(НСтр("ru = 'ИТОГОВАЯ СТРОКА'"), "Регистратор");
	СтрокаТаблицы.Доход 	 = СуммаДоходаОтПродажКР;
	СтрокаТаблицы.Аванс 	 = СуммаАвансы - СуммаНДСАвансы - СуммаНСПАвансы;
	СтрокаТаблицы.Доотгрузка = СуммаДоотгрузки - СуммаНДСДоотгрузки - СуммаНСПДоотгрузки;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "50. ОБЛАГАЕМЫЕ ПОСТАВКИ НА ТЕРРИТОРИИ КР";
	НоваяСтрокаТаблицы.Итого = Сумма050;
	НоваяСтрокаТаблицы.Сумма = Сумма050;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Доход по ненулевым ставкам НДС (ставка не равна нулю) от продаж КР";
	НоваяСтрокаТаблицы.Итого = СуммаРеализаций + СуммаВозвратов;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	НоваяСтрокаТаблицы.ВыделитьСтроку = Истина;
								
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Реализация";
	НоваяСтрокаТаблицы.Сумма = СуммаРеализаций;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- Возврат";
	НоваяСтрокаТаблицы.Сумма = СуммаВозвратов;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Авансы";
	НоваяСтрокаТаблицы.Итого = СуммаАвансы - СуммаНДСАвансы - СуммаНСПАвансы;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	НоваяСтрокаТаблицы.ВыделитьСтроку = Истина;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Авансы";
	НоваяСтрокаТаблицы.Сумма = СуммаАвансы;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС на авансы";
	НоваяСтрокаТаблицы.Сумма = СуммаНДСАвансы;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НСП на авансы";
	НоваяСтрокаТаблицы.Сумма = СуммаНСПАвансы;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- Доотгрузка";
	НоваяСтрокаТаблицы.Итого = СуммаДоотгрузки - СуммаНДСДоотгрузки - СуммаНСПДоотгрузки;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	НоваяСтрокаТаблицы.ВыделитьСтроку = Истина;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Доотгрузка";
	НоваяСтрокаТаблицы.Сумма = СуммаДоотгрузки;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС на доотгрузку";
	НоваяСтрокаТаблицы.Сумма = СуммаНДСДоотгрузки;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НСП на доотгрузку";
	НоваяСтрокаТаблицы.Сумма = СуммаНСПДоотгрузки;
	НоваяСтрокаТаблицы.Владелец = "Строка 50";
	
	// Сумма051
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсейРеализации);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма051", ПараметрыРасчета);
	Сумма051 = СтруктураДанных.РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 2;
	СтрокаТабличнойЧасти.Наименование = "Строка 51";
	СтрокаТабличнойЧасти.Строка = "Строка 51
									|ПОСТАВКИ, ОБЛАГАЕМЫЕ ПО НУЛЕВОЙ СТАВКЕ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Доход по нулевой ставке НДС'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма051;	

	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("Владелец", "Строка 51");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 51";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 51";
	НоваяСтрокаТаблицы.Сумма = Сумма051;
	НоваяСтрокаТаблицы.Владелец = "Строка 51";
	
	// Сумма052
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсейРеализации);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма052", ПараметрыРасчета);		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 3;
	СтрокаТабличнойЧасти.Наименование = "Строка 52";
	СтрокаТабличнойЧасти.Строка = "Строка 52
									|В ТОМ ЧИСЛЕ В ЕВРАЗИЙСКИЙ ЭКОНОМИЧЕСКИЙ СОЮЗ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Доход по нулевой ставке НДС покупателям ЕАЭС'");
	СтрокаТабличнойЧасти.Сумма 	= СтруктураДанных.РезультатРасчета;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("Владелец", "Строка 52");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 52";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 52";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "Строка 52";
	
	// Сумма053
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсейРеализации);
	ПараметрыРасчета.Вставить("Период",  ДатаОкончания);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма053", ПараметрыРасчета);
	Сумма053 = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 4;
	СтрокаТабличнойЧасти.Наименование = "Строка 53";
	СтрокаТабличнойЧасти.Строка = "Строка 53
									|ОСВОБОЖДЕННЫЕ И НЕОБЛАГАЕМЫЕ ПОСТАВКИ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Доход по прочим ставкам НДС:
													|1) Освобожденная
													|2) Прочие кроме освобожденной и нулевой с значением НДС = 0
													|ИЛИ
													|1) Со значением НДС = 0
													|2) минус нулевая'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма053;	
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("Владелец", "Строка 53");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 53";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 53";
	НоваяСтрокаТаблицы.Сумма = Сумма053;
	НоваяСтрокаТаблицы.Владелец = "Строка 53";
	
	// Сумма054
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма050", 	Сумма050);
	ПараметрыРасчета.Вставить("Сумма051", 	Сумма051);
	ПараметрыРасчета.Вставить("Сумма053", 	Сумма053);
	Сумма054 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма054", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 5;
	СтрокаТабличнойЧасти.Наименование = "Строка 54";
	СтрокаТабличнойЧасти.Строка = "Строка 54
									|ОБЩАЯ СТОИМОСТЬ  ПОСТАВОК (=050+051+053)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '= 050+051+053'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма054;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 54";
	НоваяСтрокаТаблицы.Сумма = Сумма054;
	НоваяСтрокаТаблицы.Владелец = "Строка 54";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 50";
	НоваяСтрокаТаблицы.Сумма = Сумма050;
	НоваяСтрокаТаблицы.Владелец = "Строка 54";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 51";
	НоваяСтрокаТаблицы.Сумма = Сумма051;
	НоваяСтрокаТаблицы.Владелец = "Строка 54";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 53";
	НоваяСтрокаТаблицы.Сумма = Сумма053;
	НоваяСтрокаТаблицы.Владелец = "Строка 54";							
								
								
								
	ТаблицаВсехПоступлений = УчетНДС.СведенияОПоступлении(Организация, ДатаНачала, ДатаОкончания, 
								ДанныеУчетнойПолитики.НеУчитыватьЗакупкиБезНДС, ДанныеУчетнойПолитики.ОтчетПоНДСПоПоставке,
								ЭтоКонтракт, Сумма053, Сумма054);	
	
	// НДСДляРаспределения
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСДляРаспределения", ПараметрыРасчета);	
	НДСДляРаспределения = СтруктураДанных.РезультатРасчета;	
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 22;
	СтрокаТабличнойЧасти.Наименование = "НДСРаспределение"; 
	СтрокаТабличнойЧасти.Строка = "НДСР
									|НДС для распределения";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДС на приобретения с признаком ""Распределение"" или
													|весь НДС на приобретения, если указание признаков отключено в УП'");
	СтрокаТабличнойЧасти.Сумма 	= НДСДляРаспределения;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
		НоваяСтрокаТаблицы.Владелец = "НДСРаспределение";
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС для распределения";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "НДСРаспределение";
	
	// НДСДляРаспределения от поставщиков КР	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСДляРаспределенияКР", ПараметрыРасчета);	
	НДСДляРаспределенияКР = СтруктураДанных.РезультатРасчета;	
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 23;
	СтрокаТабличнойЧасти.Наименование = "КР НДСР"; 
	СтрокаТабличнойЧасти.Строка = "НДСР КР
									|НДС для распределения от поставщиков КР";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДСР от поставщиков КР'");
	СтрокаТабличнойЧасти.Сумма 	= НДСДляРаспределенияКР;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "КР НДСР");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "КР НДСР";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС для распределения от поставщиков КР";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "КР НДСР";
	
	// НДС для Распределения от поставщиков НЕ КР	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСДляРаспределенияНеКР", ПараметрыРасчета);
	
	НДСДляРаспределенияНеКР = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 25;
	СтрокаТабличнойЧасти.Наименование = "Не_КР_НДСР"; 
	СтрокаТабличнойЧасти.Строка = "НДСР не КР
									|НДС для распределения от поставщиков не КР";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДСР от поставщиков не КР'");
	СтрокаТабличнойЧасти.Сумма 	= НДСДляРаспределенияНеКР;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Не_КР_НДСР");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "Не_КР_НДСР";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС для распределения от поставщиков не КР";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "Не_КР_НДСР";
	
	// НДС для Распределения от поставщиков ЕАЭС	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСДляРаспределенияЕАЭС", ПараметрыРасчета);
	
	НДСДляРаспределенияЕАЭС = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 25;
	СтрокаТабличнойЧасти.Наименование = "ЕАЭС_НДСР"; 
	СтрокаТабличнойЧасти.Строка = "НДСР ЕАЭС
									|НДС для распределения от поставщиков ЕАЭС";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДСР от поставщиков ЕАЭС'");
	СтрокаТабличнойЧасти.Сумма 	= НДСДляРаспределенияЕАЭС;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "ЕАЭС_НДСР");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "ЕАЭС_НДСР";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС для распределения от поставщиков ЕАЭС";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "ЕАЭС_НДСР";
	
	// НДСКР Себестоимость	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСКРСебестоимость", ПараметрыРасчета);
	
	НДСКРСебестоимость = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 26;
	СтрокаТабличнойЧасти.Наименование = "НДС КР СС"; 
	СтрокаТабличнойЧасти.Строка = "НДС КР себестоимость";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Если в учетной политике установлен флажок ""Указывать признак зачета НДС"", то
													|НДС КР СС = НДС на приобретения от поставщиков КР с признаком ""Себестоимость"" иначе 0'");
	СтрокаТабличнойЧасти.Сумма 	= НДСКРСебестоимость;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "НДС КР СС");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "НДС КР СС";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС КР СС";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "НДС КР СС";
	
	// НДСНеКР Себестоимость	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСНеКРСебестоимость", ПараметрыРасчета);
	
	НДСНеКРСебестоимость = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 28;
	СтрокаТабличнойЧасти.Наименование = "НДС не КР СС"; 
	СтрокаТабличнойЧасти.Строка = "НДС не КР себестоимость";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Если в учетной политике установлен флажок ""Указывать признак зачета НДС"", то
													|НДС не КР СС = НДС на приобретения от поставщиков не КР и не ЕАЭС с признаком ""Себестоимость"" иначе 0'");
	СтрокаТабличнойЧасти.Сумма 	= НДСНеКРСебестоимость;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "НДС не КР СС");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "НДС не КР СС";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС не КР СС";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРСебестоимость;
	НоваяСтрокаТаблицы.Владелец = "НДС не КР СС";
	
	// НДС ЕАЭС Себестоимость	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Таблица", 									ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("УказыватьПризнакЗачетаНДСПриПоступлении", 	ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении);
	
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("НДСЕАЭССебестоимость", ПараметрыРасчета);
	
	НДСЕАЭССебестоимость = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 28;
	СтрокаТабличнойЧасти.Наименование = "НДС ЕАЭС СС"; 
	СтрокаТабличнойЧасти.Строка = "НДС ЕАЭС себестоимость";
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Если в учетной политике установлен флажок ""Указывать признак зачета НДС"", то
													|НДС ЕАЭС СС = НДС на приобретения от поставщиков ЕАЭС с признаком ""Себестоимость"" иначе 0'");
	СтрокаТабличнойЧасти.Сумма 	= НДСЕАЭССебестоимость;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "НДС ЕАЭС СС");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС СС";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС ЕАЭС СС";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРСебестоимость;
	НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС СС";
	
		
	// КоэффициентОсвобожденныхПоставокРасчетный
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ПороговыйПроцентОсвобожденныхПоставок", 	ДанныеУчетнойПолитики.ПороговыйПроцентОсвобожденныхПоставок);
	ПараметрыРасчета.Вставить("Сумма053", 								Сумма053);
	ПараметрыРасчета.Вставить("Сумма054", 								Сумма054);
	ПараметрыРасчета.Вставить("СуммаАвансы", 							СуммаАвансы);
	ПараметрыРасчета.Вставить("СуммаНДСАвансы", 						СуммаНДСАвансы);
	ПараметрыРасчета.Вставить("СуммаНСПАвансы", 						СуммаНСПАвансы);
	ПараметрыРасчета.Вставить("СуммаДоотгрузки", 						СуммаДоотгрузки); 
	ПараметрыРасчета.Вставить("СуммаНДСДоотгрузки", 					СуммаНДСДоотгрузки);
	ПараметрыРасчета.Вставить("СуммаНСПДоотгрузки", 					СуммаНСПДоотгрузки);
	КоэффициентОсвобожденныхПоставокРасчетный = УчетНДС.РасчетСуммыОтчетаНДС("КоэффициентОсвобожденныхПоставокРасчетный", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 21;
	СтрокаТабличнойЧасти.Наименование = "КфОПР";
	СтрокаТабличнойЧасти.Строка = "КфОП 
									|КфОПР";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Коэффициент освобожденных поставок
													|053
													|/
													|054 - (минус)
													|Авансы  - НДС на авансы - НСП на авансы
													|+ (плюс)
													|(Доотгрузка - НДС - НСП)
													|(окр 4 знака).
													|Если КфОП <= Пороговый процент освобожденных поставок, то:
													|КфОПР = 0 (расчетный), иначе = КфОП
													|где:
													|КфОП - фактический
													|КфОПР - расчетный для использования при расчете строк отчета по НДС'");
	
	СтрокаТабличнойЧасти.Сумма 	= КоэффициентОсвобожденныхПоставокРасчетный;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "КфОПР";
	НоваяСтрокаТаблицы.Сумма = КоэффициентОсвобожденныхПоставокРасчетный;
	НоваяСтрокаТаблицы.Владелец = "КфОПР";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "053 / (054 - (Сумма авансы - Сумма НДС авансы - Сумма НСП авансы) + (Сумма доотгрузки - Сумма НДС доотгрузки - Сумма НСП доотгрузки))";
	
	РасчетнаяСумма = Сумма054 - (СуммаАвансы - СуммаНДСАвансы - СуммаНСПАвансы) 
						+ (СуммаДоотгрузки - СуммаНДСДоотгрузки - СуммаНСПДоотгрузки);
						
	РасчетнаяСумма = Сумма054;						
	НоваяСтрокаТаблицы.Сумма = ?(РасчетнаяСумма = 0, 0, Окр(Сумма053/ РасчетнаяСумма, 4));
	НоваяСтрокаТаблицы.Владелец = "КфОПР";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Пороговый процент освобожденных поставок";
	НоваяСтрокаТаблицы.Сумма = ДанныеУчетнойПолитики.ПороговыйПроцентОсвобожденныхПоставок;
	НоваяСтрокаТаблицы.Владелец = "КфОПР";
	
	// НДСКР не разрешенный к зачету
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("КоэффициентОсвобожденныхПоставокРасчетный", КоэффициентОсвобожденныхПоставокРасчетный);
	ПараметрыРасчета.Вставить("НДСДляРаспределенияКР", НДСДляРаспределенияКР);
	ПараметрыРасчета.Вставить("НДСКРСебестоимость", НДСКРСебестоимость);
	НДСКРНеРазрешенныйКЗачету = УчетНДС.РасчетСуммыОтчетаНДС("НДСКРНеРазрешенныйКЗачету", ПараметрыРасчета).РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 29;
	СтрокаТабличнойЧасти.Наименование = "НДС КР не разрешенный";
	СтрокаТабличнойЧасти.Строка = "НДС КР, не разрешенный к зачету";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'КфОПР * НДСР КР + НДС КР СС'");
	СтрокаТабличнойЧасти.Сумма 	= НДСКРНеРазрешенныйКЗачету;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "НДС КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфОПР";
	НоваяСтрокаТаблицы.Сумма = КоэффициентОсвобожденныхПоставокРасчетный;
	НоваяСтрокаТаблицы.Владелец = "НДС КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "* НДСР КР";
	НоваяСтрокаТаблицы.Сумма = НДСДляРаспределенияКР;
	НоваяСтрокаТаблицы.Владелец = "НДС КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС КР СС";
	НоваяСтрокаТаблицы.Сумма = НДСКРСебестоимость;
	НоваяСтрокаТаблицы.Владелец = "НДС КР не разрешенный";
	
	// НДС Не КР не разрешенный к зачету
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("КоэффициентОсвобожденныхПоставокРасчетный", КоэффициентОсвобожденныхПоставокРасчетный);
	ПараметрыРасчета.Вставить("НДСДляРаспределенияНеКР", НДСДляРаспределенияНеКР);
	ПараметрыРасчета.Вставить("НДСНеКРСебестоимость", НДСНеКРСебестоимость);   
	НДСНеКРНеРазрешенныйКЗачету = УчетНДС.РасчетСуммыОтчетаНДС("НДСНеКРНеРазрешенныйКЗачету", ПараметрыРасчета).РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 31;
	СтрокаТабличнойЧасти.Наименование = "НДС не КР не разрешенный";
	СтрокаТабличнойЧасти.Строка = "НДС не КР, не разрешенный к зачету";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'КфОПР * (НДСР - НДСР КР) +  НДС НЕКР СС'");
	СтрокаТабличнойЧасти.Сумма 	= НДСНеКРНеРазрешенныйКЗачету;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС не КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "НДС не КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфОПР";
	НоваяСтрокаТаблицы.Сумма = КоэффициентОсвобожденныхПоставокРасчетный;
	НоваяСтрокаТаблицы.Владелец = "НДС не КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "* НДСР не КР";
	НоваяСтрокаТаблицы.Сумма = НДСДляРаспределенияНеКР;
	НоваяСтрокаТаблицы.Владелец = "НДС не КР не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС не КР СС";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРСебестоимость;
	НоваяСтрокаТаблицы.Владелец = "НДС не КР не разрешенный";
	
	// НДС ЕАЭС Не разрешенный к зачету
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("КоэффициентОсвобожденныхПоставокРасчетный", КоэффициентОсвобожденныхПоставокРасчетный);
	ПараметрыРасчета.Вставить("НДСДляРаспределенияЕАЭС", НДСДляРаспределенияЕАЭС);
	ПараметрыРасчета.Вставить("НДСЕАЭССебестоимость", НДСЕАЭССебестоимость);   
	НДСЕАЭСНеРазрешенныйКЗачету = УчетНДС.РасчетСуммыОтчетаНДС("НДСЕАЭСНеРазрешенныйКЗачету", ПараметрыРасчета).РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 31;
	СтрокаТабличнойЧасти.Наименование = "НДС ЕАЭС не разрешенный";
	СтрокаТабличнойЧасти.Строка = "НДС ЕАЭС, не разрешенный к зачету";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '???");
	СтрокаТабличнойЧасти.Сумма 	= НДСЕАЭСНеРазрешенныйКЗачету;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "НДС ЕАЭС, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСЕАЭСНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфОПР";
	НоваяСтрокаТаблицы.Сумма = КоэффициентОсвобожденныхПоставокРасчетный;
	НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "* НДСР ЕАЭС";
	НоваяСтрокаТаблицы.Сумма = НДСДляРаспределенияЕАЭС;
	НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС не разрешенный";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС ЕАЭС СС";
	НоваяСтрокаТаблицы.Сумма = НДСЕАЭССебестоимость;
	НоваяСтрокаТаблицы.Владелец = "НДС ЕАЭС не разрешенный";
	
	// КфНП
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Сумма051", 	Сумма051);
	ПараметрыРасчета.Вставить("Сумма050", 	Сумма050);
	КфНП = УчетНДС.РасчетСуммыОтчетаНДС("КфНП", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 32;
	СтрокаТабличнойЧасти.Наименование = "КфНП";
	СтрокаТабличнойЧасти.Строка = "КфНП";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Коэффициент нулевых поставок:
													|051 / (050 + 051)'");
	СтрокаТабличнойЧасти.Сумма 	= КфНП;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "КфНП";
	НоваяСтрокаТаблицы.Сумма = КфНП;
	НоваяСтрокаТаблицы.Владелец = "КфНП";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 51";
	НоваяСтрокаТаблицы.Сумма = Сумма051;
	НоваяСтрокаТаблицы.Владелец = "КфНП";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "/ (Строка 50 + Строка 51)";
	НоваяСтрокаТаблицы.Сумма = Сумма050 + Сумма051;
	НоваяСтрокаТаблицы.Владелец = "КфНП";
	
	// Сумма055
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсехПоступлений);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма055", ПараметрыРасчета);
	Сумма055 = СтруктураДанных.РезультатРасчета; 
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 6;
	СтрокаТабличнойЧасти.Наименование = "Строка 55";
	СтрокаТабличнойЧасти.Строка = "Строка 55
									|ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ В КР";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма поступлений без НДС от поставщиков КР'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма055;	
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 55");
		
		Если ТипЗнч(СтрокаТаблицы.Регистратор) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			Отбор.Вставить("Контрагент", СтрокаТаблицы.Контрагент);			
		КонецЕсли;	
		
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 55";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 55";
	НоваяСтрокаТаблицы.Сумма = Сумма055;
	НоваяСтрокаТаблицы.Владелец = "Строка 55";
	
	// Сумма056
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсехПоступлений);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма056", ПараметрыРасчета);
	Сумма056 = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 7;
	СтрокаТабличнойЧасти.Наименование = "Строка 56";
	СтрокаТабличнойЧасти.Строка = "Строка 56
									|ИМПОРТ МАТЕРИАЛЬНЫХ РЕСУРСОВ В КР";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма поступлений без НДС от поставщиков НЕ КР'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма056;	
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 56");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 56";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 56";
	НоваяСтрокаТаблицы.Сумма = Сумма056;
	НоваяСтрокаТаблицы.Владелец = "Строка 56";
	
	// Сумма057
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", ТаблицаВсехПоступлений);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма057", ПараметрыРасчета);		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 8;
	СтрокаТабличнойЧасти.Наименование = "Строка 57";
	СтрокаТабличнойЧасти.Строка = "Строка 57
									|В ТОМ ЧИСЛЕ ИЗ ГОСУДАРСТВ-ЧЛЕНОВ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма приобретений без НДС от поставщиков ЕАЭС'");
	СтрокаТабличнойЧасти.Сумма 	= СтруктураДанных.РезультатРасчета;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 57");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 57";
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 57";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "Строка 57";
	
	// Сумма058
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма055", 	Сумма055);
	ПараметрыРасчета.Вставить("Сумма056", 	Сумма056);
	Сумма058 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма058", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 9;
	СтрокаТабличнойЧасти.Наименование = "Строка 58";
	СтрокаТабличнойЧасти.Строка = "Строка 58
									|ОБЩАЯ СТОИМОСТЬ ПРИОБРЕТЕННЫХ МАТЕРИАЛЬНЫХ РЕСУРСОВ (=055+056)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '= 055+056'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма058;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка Строка 58";
	НоваяСтрокаТаблицы.Сумма = Сумма058;
	НоваяСтрокаТаблицы.Владелец = "Строка 58";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 55";
	НоваяСтрокаТаблицы.Сумма = Сумма055;
	НоваяСтрокаТаблицы.Владелец = "Строка 58";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 56";
	НоваяСтрокаТаблицы.Сумма = Сумма056;
	НоваяСтрокаТаблицы.Владелец = "Строка 58";
	
	// Сумма059
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", 		ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", 			ТаблицаВсейРеализации);
	ПараметрыРасчета.Вставить("СуммаНДСАвансы", 	СуммаНДСАвансы);
	ПараметрыРасчета.Вставить("СуммаНДСДоотгрузки", СуммаНДСДоотгрузки);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма059", ПараметрыРасчета);
	Сумма059 = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 10;
	СтрокаТабличнойЧасти.Наименование = "Строка 59";
	СтрокаТабличнойЧасти.Строка = "Строка 59
									|ОБЩАЯ СУММА НДС ЗА ПРОИЗВЕДЕННЫЕ ПОСТАВКИ ( =050 х ставку / 100%)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДС на доход
													|+ НДС на Авансы
													|- НДС Доотгрузка'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма059;	
	
	НДСНаДоход = 0;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("Владелец", "Строка 59");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 59";
		КонецЕсли;
		
		НДСНаДоход = НДСНаДоход + СтрокаТаблицы.СуммаНДС;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 59";
	НоваяСтрокаТаблицы.Сумма = Сумма059;
	НоваяСтрокаТаблицы.Владелец = "Строка 59";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС на доход";
	НоваяСтрокаТаблицы.Сумма = НДСНаДоход;
	НоваяСтрокаТаблицы.Владелец = "Строка 59";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС на Авансы";
	НоваяСтрокаТаблицы.Сумма = СуммаНДСАвансы;
	НоваяСтрокаТаблицы.Владелец = "Строка 59";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС Доотгрузка";
	НоваяСтрокаТаблицы.Сумма = СуммаНДСДоотгрузки;
	НоваяСтрокаТаблицы.Владелец = "Строка 59";
	
	// Сумма060
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", 				ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", 					ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("НДСКРНеРазрешенныйКЗачету", 	НДСКРНеРазрешенныйКЗачету);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма060", ПараметрыРасчета);
	Сумма060 = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 11;
	СтрокаТабличнойЧасти.Наименование = "Строка 60";
	СтрокаТабличнойЧасти.Строка = "Строка 60
									|НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩИЙ ЗАЧЕТУ (КР)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма НДС на поступления КР
													|- НДС КР, не разрешенный к зачету'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма060;	
	
	НДСНаПоступленияКР = 0;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 60");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 60";
		КонецЕсли;
		
		НДСНаПоступленияКР = НДСНаПоступленияКР + СтрокаТаблицы.СуммаНДС;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 60";
	НоваяСтрокаТаблицы.Сумма = Сумма060;
	НоваяСтрокаТаблицы.Владелец = "Строка 60";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС на поступления КР";
	НоваяСтрокаТаблицы.Сумма = НДСНаПоступленияКР;
	НоваяСтрокаТаблицы.Владелец = "Строка 60";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "Строка 60";
	
	// Сумма061
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", 					ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", 						ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("НДСНеКРНеРазрешенныйКЗачету", 	НДСНеКРНеРазрешенныйКЗачету);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма061", ПараметрыРасчета);
	Сумма061 = СтруктураДанных.РезультатРасчета;
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 12;
	СтрокаТабличнойЧасти.Наименование = "Строка 61";
	СтрокаТабличнойЧасти.Строка = "Строка 61
									|НДС НА ИМПОРТ ПОДЛЕЖАЩИЙ ЗАЧЕТУ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма НДС на поступления не КР
													|- НДС не КР, не разрешенный к зачету'");	
	СтрокаТабличнойЧасти.Сумма 	= Сумма061;		
	
	НДСНаПоступленияНеКР = 0;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 61");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 61";
		КонецЕсли;
		
		НДСНаПоступленияНеКР = НДСНаПоступленияНеКР + СтрокаТаблицы.СуммаНДС;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 61";
	НоваяСтрокаТаблицы.Сумма = Сумма061;
	НоваяСтрокаТаблицы.Владелец = "Строка 61";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС на поступления не КР";
	НоваяСтрокаТаблицы.Сумма = НДСНаПоступленияНеКР;
	НоваяСтрокаТаблицы.Владелец = "Строка 61";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС не КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "Строка 61";
	
	// Сумма062
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", 					ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Таблица", 						ТаблицаВсехПоступлений);
	ПараметрыРасчета.Вставить("НДСЕАЭСНеРазрешенныйКЗачету", 	НДСЕАЭСНеРазрешенныйКЗачету);
	СтруктураДанных = УчетНДС.РасчетСуммыОтчетаНДС("Сумма062", ПараметрыРасчета);		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 13;
	СтрокаТабличнойЧасти.Наименование = "Строка 62";
	СтрокаТабличнойЧасти.Строка = "Строка 62
									|В ТОМ ЧИСЛЕ ИЗ ЕВРАЗИЙСКОГО ЭКОНОМИЧЕСКОГО СОЮЗА";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Сумма НДС на поступления ЕАЭС
													|- НДС ЕАЭС не разрешенный к зачету'");	
	СтрокаТабличнойЧасти.Сумма 	= СтруктураДанных.РезультатРасчета;	
	
	НДСНаПоступленияЕАЭС = 0;
	
	Для Каждого СтрокаТаблицы Из СтруктураДанных.ТаблицаДетальныеЗаписи Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Регистратор", СтрокаТаблицы.Регистратор);
		Отбор.Вставить("ЗачетНДС", СтрокаТаблицы.ЗачетНДС);
		Отбор.Вставить("Владелец", "Строка 62");
		МассивСтрок = ТЗДетальныеЗаписи.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТаблицы = ТЗДетальныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтрокаТаблицы);
			НоваяСтрокаТаблицы.Сумма = СтрокаТаблицы.Всего;
			НоваяСтрокаТаблицы.Доход = СтрокаТаблицы.Сумма;
			НоваяСтрокаТаблицы.Владелец = "Строка 62";
		КонецЕсли;
		
		НДСНаПоступленияЕАЭС = НДСНаПоступленияЕАЭС + СтрокаТаблицы.СуммаНДС;
	КонецЦикла;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 62";
	НоваяСтрокаТаблицы.Сумма = СтруктураДанных.РезультатРасчета;
	НоваяСтрокаТаблицы.Владелец = "Строка 62";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС на поступления ЕАЭС";
	НоваяСтрокаТаблицы.Сумма = НДСНаПоступленияЕАЭС;
	НоваяСтрокаТаблицы.Владелец = "Строка 62";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- НДС НЕ КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "Строка 62";
	
	// Сумма063
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", 					ЭтоКонтракт);
	ПараметрыРасчета.Вставить("НДСКРНеРазрешенныйКЗачету", 		НДСКРНеРазрешенныйКЗачету);
	ПараметрыРасчета.Вставить("НДСНеКРНеРазрешенныйКЗачету", 	НДСНеКРНеРазрешенныйКЗачету);
	Сумма063 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма063", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 14;
	СтрокаТабличнойЧасти.Наименование = "Строка 63";
	СтрокаТабличнойЧасти.Строка = "Строка 63
									|НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, НЕ ПОДЛЕЖАЩИЙ ЗАЧЕТУ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'НДС КР, не разрешенный к зачету
													|+ НДС не КР, не разрешенный к зачету''");	
	СтрокаТабличнойЧасти.Сумма 	= Сумма063;		
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 63";
	НоваяСтрокаТаблицы.Сумма = Сумма063;
	НоваяСтрокаТаблицы.Владелец = "Строка 63";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "Строка 63";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ НДС не КР, не разрешенный к зачету";
	НоваяСтрокаТаблицы.Сумма = НДСНеКРНеРазрешенныйКЗачету;
	НоваяСтрокаТаблицы.Владелец = "Строка 63";
	
	// Сумма064
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма060", 	Сумма060);
	ПараметрыРасчета.Вставить("Сумма061", 	Сумма061);
	Сумма064 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма064", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 15;
	СтрокаТабличнойЧасти.Наименование = "Строка 64";
	СтрокаТабличнойЧасти.Строка = "Строка 64
									|ОБЩАЯ СУММА НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ПОДЛЕЖАЩАЯ ЗАЧЕТУ (=060+061)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '= 060+061'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма064;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 64";
	НоваяСтрокаТаблицы.Сумма = Сумма064;
	НоваяСтрокаТаблицы.Владелец = "Строка 64";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 60";
	НоваяСтрокаТаблицы.Сумма = Сумма060;
	НоваяСтрокаТаблицы.Владелец = "Строка 64";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 61";
	НоваяСтрокаТаблицы.Сумма = Сумма061;
	НоваяСтрокаТаблицы.Владелец = "Строка 64";
	
	// Сумма065
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма051", 	Сумма051);
	ПараметрыРасчета.Вставить("Сумма050", 	Сумма050);
	ПараметрыРасчета.Вставить("Сумма064", 	Сумма064);;
	Сумма065 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма065", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 16;
	СтрокаТабличнойЧасти.Наименование = "Строка 65";
	СтрокаТабличнойЧасти.Строка = "Строка 65
									|В ТОМ ЧИСЛЕ НДС ЗА ПРИОБРЕТЕННЫЕ МАТЕРИАЛЬНЫЕ РЕСУРСЫ, ИСПОЛЬЗУЕМЫЕ ДЛЯ ПОСТАВОК С НУЛЕВОЙ СТАВКОЙ";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'КфНП * Строка 64'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма065;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 65";
	НоваяСтрокаТаблицы.Сумма = Сумма065;
	НоваяСтрокаТаблицы.Владелец = "Строка 65";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфНП";
	НоваяСтрокаТаблицы.Сумма = КфНП;
	НоваяСтрокаТаблицы.Владелец = "Строка 65";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "* Строка 64";
	НоваяСтрокаТаблицы.Сумма = Сумма064;
	НоваяСтрокаТаблицы.Владелец = "Строка 65";
	
	// Сумма066
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма059",	Сумма059);
	ПараметрыРасчета.Вставить("Сумма064", 	Сумма064); 
	Сумма066 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма066", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 17;
	СтрокаТабличнойЧасти.Наименование = "Строка 66";
	СтрокаТабличнойЧасти.Строка = "Строка 66
									|НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО (=059-064) (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '= 059-064'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма066;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 66";
	НоваяСтрокаТаблицы.Сумма = Сумма066;
	НоваяСтрокаТаблицы.Владелец = "Строка 66";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 59";
	НоваяСтрокаТаблицы.Сумма = Сумма059;
	НоваяСтрокаТаблицы.Владелец = "Строка 66";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "- Строка 64";
	НоваяСтрокаТаблицы.Сумма = Сумма064;
	НоваяСтрокаТаблицы.Владелец = "Строка 66";
	
	// Сумма067		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 18;
	СтрокаТабличнойЧасти.Наименование = "Строка 67";
	СтрокаТабличнойЧасти.Строка = "Строка 67
									|НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО ПО ПРОМЫШЛЕННОЙ ПЕРЕРАБОТКЕ СЕЛЬСКОХОЗЯЙСТВЕННОЙ ПРОДУКЦИИ, ПОДЛЕЖАЩЕЕ УМЕНЬШЕНИЮ НА 35% (УКАЖИТЕ ЗНАК МИНУС, ЕСЛИ ЗНАЧЕНИЕ ОТРИЦАТЕЛЬНОЕ)";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = 'Не рассчитывается'");
	СтрокаТабличнойЧасти.Сумма 	= 0;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 67";
	НоваяСтрокаТаблицы.Сумма = 0;
	НоваяСтрокаТаблицы.Владелец = "Строка 67";
	
	// Сумма068
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ЭтоКонтракт", ЭтоКонтракт);
	ПараметрыРасчета.Вставить("Сумма066",	Сумма066);
	ПараметрыРасчета.Вставить("Сумма067", 	0); 
	Сумма068 = УчетНДС.РасчетСуммыОтчетаНДС("Сумма068", ПараметрыРасчета).РезультатРасчета;		
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 19;
	СтрокаТабличнойЧасти.Наименование = "Строка 68";
	СтрокаТабличнойЧасти.Строка = "Строка 68
									|НАЛОГОВОЕ ОБЯЗАТЕЛЬСТВО";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '= 066-067'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма068;	
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Строка 68";
	НоваяСтрокаТаблицы.Сумма = Сумма068;
	НоваяСтрокаТаблицы.Владелец = "Строка 68";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 66";
	НоваяСтрокаТаблицы.Сумма = Сумма066;
	НоваяСтрокаТаблицы.Владелец = "Строка 68";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ Строка 67";
	НоваяСтрокаТаблицы.Сумма = 0;
	НоваяСтрокаТаблицы.Владелец = "Строка 68";
	
	// Формирование проводки 8100 - 1540 
	Сумма_8100_1540 = Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияКР,2) 
					//+ Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияЕАЭС,2) 
					+ Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияНеКР,2);
					
	СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
	СтрокаТабличнойЧасти.Порядок = 20;
	СтрокаТабличнойЧасти.Наименование = "8100-1540";
	СтрокаТабличнойЧасти.Строка = "Проводка 8100-1540";	
	СтрокаТабличнойЧасти.Содержание = НСтр("ru = '(КфОПР * НДС КР)
													|+ (КфОПР * НДС ЕАЭС)
													|+ КфОПР * (НДСР - НДСР КР)'");
	СтрокаТабличнойЧасти.Сумма 	= Сумма_8100_1540;
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "Проводка 8100-1540";
	НоваяСтрокаТаблицы.Сумма = Сумма_8100_1540;
	НоваяСтрокаТаблицы.Владелец = "8100-1540";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфОПР * НДСР КР";
	НоваяСтрокаТаблицы.Сумма = Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияКР,2);
	НоваяСтрокаТаблицы.Владелец = "8100-1540";
	
	//НоваяСтрокаТаблицы = Расшифровка.Добавить();
	//НоваяСтрокаТаблицы.Строка = "+ КфОПР * НДСР ЕАЭС";
	//НоваяСтрокаТаблицы.Сумма = Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияЕАЭС,2);
	//НоваяСтрокаТаблицы.Владелец = "8100-1540";
	
	НоваяСтрокаТаблицы = Расшифровка.Добавить();
	НоваяСтрокаТаблицы.Строка = "+ КфОПР * (НДСР - НДСР КР)";
	НоваяСтрокаТаблицы.Сумма = Окр(КоэффициентОсвобожденныхПоставокРасчетный * НДСДляРаспределенияНеКР,2);
	НоваяСтрокаТаблицы.Владелец = "8100-1540";
	
	СтрокиОтчета.Сортировать("Порядок");
	ЗначениеВРеквизитФормы(ТЗДетальныеЗаписи, "ДетальныеЗаписи");
КонецПроцедуры

&НаСервере
Процедура РассчитатьАвансыДоотгрузки()	
	
	АвансыДоотгрузки.Очистить();
	
	// Описание таблиц запроса:
	// 1. Основная таблица для выбора договоров и сумм оборотов для дальнейшей обработки этих данных;	
	// 2. Таблица из 1 пункта, с корректировкой знака у сумм документов "возврат от покупателя";
	// 3. Таблица отгрузка текущего месяца, выборка из пункта 1 с условием не суммы оборотов дт > 0 (страховка от возврата);
	// 4. Таблица сальдо Дт нач. - получает начальное (на начало месяца) сальдо Дт по договорам из пункта 1;
	// 5. Таблица списка контрагентов - выборка неповторяющихся строк пункта 1;
	// 6. Таблица остатков авансов на начало месяца;
	// 7. Таблица начальных остатков - к договорам (пункт 5) прибавляются данные пунктов 6, 4, а также значения ставок НДС
	// и НСП; 8. Таблица остатков авансов на начало месяца, по которым не было доотгрузок;
	// 9. Упорядоченная таблица итогов пункта 7;
	// 10. Упорядоченная таблица по пункту 2 с проверкой на не нулевую сумму оплаты;
	// 11. Сгруппированная таблица по пункту 3.	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
		|	ХозрасчетныйОбороты.Период КАК ДатаДокумента,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыРБ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНаАвансы),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И Субконто2.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
		|				И Субконто2.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Нулевая)
		|				И Субконто2.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
		|				И Субконто2 <> ЕСТЬNULL(КорСубконто2, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОборотыРБ.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор КАК Договор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента КАК ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт - ВременнаяТаблицаОборотыРБ.СуммаОборотДт КАК Оплата
		|ПОМЕСТИТЬ ВременнаяТаблицаОплатаТекущегоМесяца
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт < 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор,
		|	ВременнаяТаблицаОборотыРБ.Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт > 0
		|	И НЕ ВременнаяТаблицаОборотыРБ.Счет.Временный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента КАК ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор КАК Договор,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт КАК Отгрузка
		|ПОМЕСТИТЬ ВременнаяТаблицаОтгрузкаТекущегоМесяца
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОборотыРБ.Регистратор,
		|	ВременнаяТаблицаОборотыРБ.ДатаДокумента,
		|	ВременнаяТаблицаОборотыРБ.Контрагент,
		|	ВременнаяТаблицаОборотыРБ.Договор,
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотДт - ВременнаяТаблицаОборотыРБ.СуммаОборотКт
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ
		|ГДЕ
		|	ВременнаяТаблицаОборотыРБ.СуммаОборотКт < 0
		|	И НЕ ВременнаяТаблицаОборотыРБ.Счет.Временный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СальдоДтНач,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СальдоКтНач
		|ПОМЕСТИТЬ ВременнаяТаблицаСальдоБУНач
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&НачалоПериода,
		|			Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНаАвансы),
		|			&ВидыСубконто,
		|			Субконто2 В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаОборотыРБ.Договор
		|				ИЗ
		|					ВременнаяТаблицаОборотыРБ КАК ВременнаяТаблицаОборотыРБ)) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХозрасчетныйОбороты.Контрагент КАК Контрагент,
		|	ХозрасчетныйОбороты.Договор КАК Договор,
		|	ХозрасчетныйОбороты.Договор.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаСписокКонтрагентов
		|ИЗ
		|	ВременнаяТаблицаОборотыРБ КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АвансыДоотгрузкаОстатки.Контрагент КАК Контрагент,
		|	АвансыДоотгрузкаОстатки.Договор КАК Договор,
		|	АвансыДоотгрузкаОстатки.СуммаОстаток КАК СуммаОстаток,
		|	АвансыДоотгрузкаОстатки.СуммаНДСОстаток КАК СуммаНДСОстаток,
		|	АвансыДоотгрузкаОстатки.СуммаНСПОстаток КАК СуммаНСПОстаток,
		|	АвансыДоотгрузкаОстатки.ДокументА КАК ДокументАванса,
		|	АвансыДоотгрузкаОстатки.ДокументА.Дата КАК ДатаДокумента,
		|	АвансыДоотгрузкаОстатки.СуммаОстаток КАК СуммаАванса
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца
		|ИЗ
		|	РегистрНакопления.АвансыДоотгрузка.Остатки(&НачалоПериода, Организация = &Организация) КАК АвансыДоотгрузкаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСписокКонтрагентов.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаСписокКонтрагентов.Договор КАК Договор,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаОстаток, 0) КАК СуммаАванса,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаНДСОстаток, 0) КАК СуммаНДСОстаток,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаНСПОстаток, 0) КАК СуммаНСПОстаток,
		|	ЕСТЬNULL(СтавкиНДССрезПоследних.Ставка, 0) КАК ЗначениеСтавкиНДС,
		|	&ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса КАК ДокументАванса,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДатаДокумента КАК ДатаДокумента,
		|	ЕСТЬNULL(ВременнаяТаблицаСальдоБУНач.СальдоДтНач, 0) КАК СальдоДтНач,
		|	ЕСТЬNULL(ВременнаяТаблицаСальдоБУНач.СальдоКтНач, 0) КАК СальдоКтНач
		|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиНач
		|ИЗ
		|	ВременнаяТаблицаСписокКонтрагентов КАК ВременнаяТаблицаСписокКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца КАК ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца
		|		ПО ВременнаяТаблицаСписокКонтрагентов.Договор = ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДС.СрезПоследних(&КонецПериода, ) КАК СтавкиНДССрезПоследних
		|		ПО ВременнаяТаблицаСписокКонтрагентов.СтавкаНДС = СтавкиНДССрезПоследних.СтавкаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСальдоБУНач КАК ВременнаяТаблицаСальдоБУНач
		|		ПО ВременнаяТаблицаСписокКонтрагентов.Договор = ВременнаяТаблицаСальдоБУНач.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.Договор КАК Договор,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса КАК Документ,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДатаДокумента КАК ДатаДокумента,
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаАванса КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.СуммаАванса
		|		ИНАЧЕ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса.СуммаДокумента 
		|				* ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса.Курс
		|				/ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.ДокументАванса.Кратность
		|	КОНЕЦ КАК СуммаДокумента
		|ИЗ
		|	ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца КАК ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца
		|ГДЕ
		|	НЕ ВременнаяТаблицаОстаткиАвансовНаНачалоМесяца.Договор В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаСписокКонтрагентов.Договор
		|				ИЗ
		|					ВременнаяТаблицаСписокКонтрагентов КАК ВременнаяТаблицаСписокКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОстаткиНач.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОстаткиНач.Договор КАК Договор,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиНач.СуммаАванса, 0) КАК СуммаАванса,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиНач.СуммаНДСОстаток, 0) КАК СуммаНДСОстаток,
		|	ЕСТЬNULL(ВременнаяТаблицаОстаткиНач.СуммаНСПОстаток, 0) КАК СуммаНСПОстаток,
		|	ВременнаяТаблицаОстаткиНач.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаОстаткиНач.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаОстаткиНач.ДокументАванса КАК Документ,
		|	ВременнаяТаблицаОстаткиНач.ДатаДокумента КАК Период,
		|	ВременнаяТаблицаОстаткиНач.СальдоДтНач КАК СальдоДтНач,
		|	ВременнаяТаблицаОстаткиНач.СальдоКтНач КАК СальдоКтНач,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаОстаткиНач.ДокументАванса ССЫЛКА Документ.ВводНачальныхОстатков
		|			ТОГДА ЕСТЬNULL(ВременнаяТаблицаОстаткиНач.СуммаАванса, 0)
		|		ИНАЧЕ ВременнаяТаблицаОстаткиНач.ДокументАванса.СуммаДокумента 
		|				* ВременнаяТаблицаОстаткиНач.ДокументАванса.Курс
		|				/ ВременнаяТаблицаОстаткиНач.ДокументАванса.Кратность
		|	КОНЕЦ КАК СуммаДокумента
		|ИЗ
		|	ВременнаяТаблицаОстаткиНач КАК ВременнаяТаблицаОстаткиНач
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	Период
		|ИТОГИ
		|	МАКСИМУМ(Контрагент),
		|	МАКСИМУМ(СуммаНДСОстаток),
		|	МАКСИМУМ(СуммаНСПОстаток),
		|	МАКСИМУМ(ЗначениеСтавкиНДС),
		|	МАКСИМУМ(ЗначениеСтавкиНСП),
		|	МАКСИМУМ(СальдоДтНач),
		|	МАКСИМУМ(СальдоКтНач)
		|ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Регистратор КАК Документ,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Договор КАК Договор,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Оплата КАК Оплата,
		|	ВременнаяТаблицаОплатаТекущегоМесяца.ДатаДокумента КАК Период
		|ИЗ
		|	ВременнаяТаблицаОплатаТекущегоМесяца КАК ВременнаяТаблицаОплатаТекущегоМесяца
		|ГДЕ
		|	ВременнаяТаблицаОплатаТекущегоМесяца.Оплата <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Договор КАК Договор,
		|	СУММА(ВременнаяТаблицаОтгрузкаТекущегоМесяца.Отгрузка) КАК Отгрузка,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.ДатаДокумента КАК Период
		|ИЗ
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца КАК ВременнаяТаблицаОтгрузкаТекущегоМесяца
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Регистратор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Контрагент,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.Договор,
		|	ВременнаяТаблицаОтгрузкаТекущегоМесяца.ДатаДокумента
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	Период";
		
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	ЗначениеСтавкиНСП = УчетНДС.ПолучитьСтавкуНСП(НачалоМесяца(Объект.Дата), Организация, ДанныеУчетнойПолитики.СтавкаНСПДляРасчетаНДСНаАвансы);
	
	Запрос.УстановитьПараметр("КонецПериода", 		КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ВидыСубконто",		ВидыСубконто);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ЗначениеСтавкиНСП", 	ЗначениеСтавкиНСП);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаНеотгруженныхАвансов = РезультатЗапроса[7].Выгрузить();
	ВыборкаКонтрагент			= РезультатЗапроса[8].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаОплат 				= РезультатЗапроса[9].Выгрузить();
	ТаблицаОтгрузок 			= РезультатЗапроса[10].Выгрузить();
	
	МассивТиповДокументов = Новый Массив;
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));                                     
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ПлатежноеПоручениеВходящее")); 
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ОплатаПлатежнойКартой")); 
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер")); 
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));	
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));                                     
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее")); 
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ВозвратТоваровПоставщику")); 
	МассивТиповДокументов.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	
	ОписаниеТиповДокументов = Новый ОписаниеТипов(МассивТиповДокументов);
	
	ТЗАвансы = Новый ТаблицаЗначений;               
	ТЗАвансы.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТЗАвансы.Колонки.Добавить("Документ", ОписаниеТиповДокументов);
	ТЗАвансы.Колонки.Добавить("СуммаАванса", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТЗАвансы.Колонки.Добавить("СальдоНаНачало", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	Если Месяц(Объект.Дата) = 1 Тогда
		Месяц = "Январь";
		
	ИначеЕсли Месяц(Объект.Дата) = 2 Тогда
		Месяц = "Февраль";
		
	ИначеЕсли Месяц(Объект.Дата) = 3 Тогда
		Месяц = "Март";
		
	ИначеЕсли Месяц(Объект.Дата) = 4 Тогда
		Месяц = "Апрель";
		
	ИначеЕсли Месяц(Объект.Дата) = 5 Тогда
		Месяц = "Май";
		
	ИначеЕсли Месяц(Объект.Дата) = 6 Тогда
		Месяц = "Июнь";
		
	ИначеЕсли Месяц(Объект.Дата) = 7 Тогда
		Месяц = "Июль";
		
	ИначеЕсли Месяц(Объект.Дата) = 8 Тогда
		Месяц = "Август";
		
	ИначеЕсли Месяц(Объект.Дата) = 9 Тогда
		Месяц = "Сентябрь";
		
	ИначеЕсли Месяц(Объект.Дата) = 10 Тогда
		Месяц = "Октябрь";
		
	ИначеЕсли Месяц(Объект.Дата) = 11 Тогда
		Месяц = "Ноябрь";
		
	Иначе
		Месяц = "Декабрь";
	КонецЕсли;
	
	// Заполнение авансов прошлого месяца, для которых нет доотгрузок.
	СуммаОстатка = 0;
	СуммаВсехАвансов = 0;
	СуммаАвансовПоДоговору = 0;
	СуммаАвансовПоКонтрагенту = 0;
	СуммаВсехДоотгрузок = 0;
	СуммаДоотгрузокПоДоговору = 0;
	СуммаДоотгрузокПоКонтрагенту = 0;
	ТекущийДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	ТекущийКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	КоличествоСтрок = ТаблицаНеотгруженныхАвансов.Количество();
	Индекс = 0;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНеотгруженныхАвансов Цикл
		
		Если ТекущийКонтрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			ТекущийКонтрагент = СтрокаТаблицы.Контрагент;	
		КонецЕсли;	
		
		Если ТекущийДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда
			ТекущийДоговор 	= СтрокаТаблицы.Договор;	
		КонецЕсли;	
		
		Если ТекущийКонтрагент = СтрокаТаблицы.Контрагент Тогда
			СуммаАвансовПоКонтрагенту = СуммаАвансовПоКонтрагенту + СтрокаТаблицы.Сумма;
			
		Иначе	
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовПоКонтрагенту;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.КонтрагентДляОтбора 		= ТекущийКонтрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.КонтрагентДляОтбора 		= ТекущийКонтрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
			
			ТекущийКонтрагент 			= СтрокаТаблицы.Контрагент;
			СуммаАвансовПоКонтрагенту 	= СтрокаТаблицы.Сумма;
		КонецЕсли;	
		
		Если ТекущийДоговор = СтрокаТаблицы.Договор Тогда
			СуммаОстатка 			= СуммаОстатка + СтрокаТаблицы.Сумма;
			СуммаАвансовПоДоговору 	= СуммаОстатка;
			
		Иначе
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовПоДоговору;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.ДоговорДляОтбора 			= ТекущийДоговор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.ДоговорДляОтбора 			= ТекущийДоговор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
			
			ТекущийДоговор 			= СтрокаТаблицы.Договор;
			СуммаАвансовПоДоговору 	= СтрокаТаблицы.Сумма;
			СуммаОстатка 			= 0;
			СуммаОстатка 			= СуммаОстатка + СтрокаТаблицы.Сумма;
		КонецЕсли;	
		
		СтрокаТЗ = АвансыДоотгрузки.Добавить();
		СтрокаТЗ.Дата 						= СтрокаТаблицы.ДатаДокумента;
		СтрокаТЗ.Контрагент 				= СтрокаТаблицы.Контрагент;
		СтрокаТЗ.Договор 					= СтрокаТаблицы.Договор;
		СтрокаТЗ.Операция 					= СтрокаТаблицы.Документ;
		СтрокаТЗ.СуммаДокумента 			= СтрокаТаблицы.СуммаДокумента;
		СтрокаТЗ.Аванс 						= СтрокаТаблицы.Сумма;
		СтрокаТЗ.ОстатокАванса 				= СуммаОстатка;
		СтрокаТЗ.Уровень 					= 1;
		СтрокаТЗ.КонтрагентДляОтбора 		= СтрокаТаблицы.Контрагент;
		СтрокаТЗ.ДоговорДляОтбора 			= СтрокаТаблицы.Договор;
		СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;
		
		СуммаВсехАвансов = СуммаВсехАвансов + СтрокаТаблицы.Сумма;
		
		Индекс = Индекс + 1;
		
		Если КоличествоСтрок = Индекс Тогда		
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовПоКонтрагенту;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.КонтрагентДляОтбора 		= ТекущийКонтрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.КонтрагентДляОтбора 		= ТекущийКонтрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовПоДоговору;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.ДоговорДляОтбора 			= ТекущийДоговор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.ДоговорДляОтбора 			= ТекущийДоговор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
		КонецЕсли;	
	КонецЦикла;	
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	ОписаниеТипаБулево = Новый ОписаниеТипов(Массив);
	
	ТЗ = РеквизитФормыВЗначение("АвансыДоотгрузки");
	ТЗОтгрузок = ТЗ.СкопироватьКолонки();
	ТЗОтгрузок.Колонки.Добавить("СтрокаАванса", ОписаниеТипаБулево);
	ЗначениеВРеквизитФормы(ТЗ, "АвансыДоотгрузки");
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		
		СуммаАвансовПоКонтрагенту = 0;
		
		Контрагент = ВыборкаКонтрагент.Контрагент;
		ВыборкаДоговор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
		Пока ВыборкаДоговор.Следующий() Цикл
			СуммаАвансовНаНачалоМесяца = 0;
			
			Договор = ВыборкаДоговор.Договор;		
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.ДоговорДляОтбора 			= Договор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
			
			// Доотгрузка
			ТЗАвансы.Очистить();
			ВыборкаДокумента = ВыборкаДоговор.Выбрать();
			
			Пока ВыборкаДокумента.НайтиСледующий(Договор, "Договор")  Цикл
				Если ВыборкаДокумента.СуммаАванса > 0 Тогда
					СТЗ = ТЗАвансы.Добавить();
					ЗаполнитьЗначенияСвойств(СТЗ, ВыборкаДокумента);
					
					СуммаАвансовНаНачалоМесяца = СуммаАвансовНаНачалоМесяца + ВыборкаДокумента.СуммаАванса;
					
					СтрокаТЗ = АвансыДоотгрузки.Добавить();
					СтрокаТЗ.Дата 						= ВыборкаДокумента.Период;
					СтрокаТЗ.Контрагент 				= Контрагент;
					СтрокаТЗ.Договор 					= Договор;
					СтрокаТЗ.Операция 					= ВыборкаДокумента.Документ;
					СтрокаТЗ.СуммаДокумента 			= ВыборкаДокумента.СуммаДокумента;
					СтрокаТЗ.Аванс 						= ВыборкаДокумента.СуммаАванса;
					СтрокаТЗ.ОстатокАванса 				= СуммаАвансовНаНачалоМесяца;
					СтрокаТЗ.Уровень 					= 1;
					СтрокаТЗ.КонтрагентДляОтбора 		= Контрагент;
					СтрокаТЗ.ДоговорДляОтбора 			= Договор;
					СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;
				КонецЕсли;
			КонецЦикла;		
			
			СуммаВсехАвансов = СуммаВсехАвансов + СуммаАвансовНаНачалоМесяца;
			
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовНаНачалоМесяца;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.ДоговорДляОтбора 			= Договор;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
			
			ВсегоАвансов  	= ТЗАвансы.Количество();
			Счетчик			= 0;
			ОстТекАванс		= 0;
			СуммаДоотгрузки = 0;
			ОтборПоДоговору = Новый Структура("Договор", Договор);		
			
			Если ТЗАвансы.Количество() > 0 Тогда
				ОстТекАванс	= ТЗАвансы[Счетчик].СуммаАванса;
				
				ТЗДоотгрузка = ТаблицаОтгрузок.Скопировать(ТаблицаОтгрузок.НайтиСтроки(ОтборПоДоговору));
				Для Каждого СтрокаТЗДоотгрузки Из ТЗДоотгрузка  Цикл       
					// Если все авансы закончились, то выход
					Если Счетчик > ВсегоАвансов - 1 Тогда 
						Прервать;
					КонецЕсли;				
					
					ОстТекОтгр = СтрокаТЗДоотгрузки.Отгрузка;   			
					
					// Перебираем авансы до тех пор пока не кончится очередная отгрузка или аванс
					Пока ОстТекОтгр > 0 Цикл
						
						Если ОстТекАванс <= 0 Тогда
							Счетчик = Счетчик + 1;
							Если Счетчик > ВсегоАвансов - 1 Тогда
								Прервать;
							КонецЕсли;
							
							ОстТекАванс = ТЗАвансы[Счетчик].СуммаАванса;
		
							Продолжить;			 
						КонецЕсли; 
						// СозданиеДоотгрузки
						СуммаДоотгр = Мин(ОстТекАванс, ОстТекОтгр);
						ТекущийДокументАванса = ТЗАвансы[Счетчик].Документ;			
						
						// Строка доотгрузки для выше указанного аванса.
						СтрокаТЗ = ТЗОтгрузок.Добавить();
						СтрокаТЗ.Дата						= СтрокаТЗДоотгрузки.Период;
						СтрокаТЗ.Контрагент					= Контрагент;
						СтрокаТЗ.Договор					= Договор;
						СтрокаТЗ.Операция 					= СтрокаТЗДоотгрузки.Регистратор;
						СтрокаТЗ.НомерАванса				= ТекущийДокументАванса;
						СтрокаТЗ.СуммаДокумента 			= СтрокаТЗДоотгрузки.Отгрузка;
						СтрокаТЗ.Доотгрузка 				= СуммаДоотгр;
						СтрокаТЗ.Уровень 					= 3;
						СтрокаТЗ.КонтрагентДляОтбора 		= Контрагент;
						СтрокаТЗ.ДоговорДляОтбора 			= Договор;
						СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;							
						
						СуммаДоотгрузки = СуммаДоотгрузки + СуммаДоотгр;
						
						СуммаДоотгрузокПоДоговору = СуммаДоотгрузокПоДоговору + СуммаДоотгр;
						
						// Остаток аванса			
						ОстТекАванс = ОстТекАванс 	- СуммаДоотгр; 
						
						// Если текущая отгрузка закончилась, то начинаем новую
						ОстТекОтгр = ОстТекОтгр - СуммаДоотгр;			
						Если ОстТекОтгр = 0 Тогда 
							Прервать;
						КонецЕсли;
						
						// Если очередной аванс кончился, то начинаем следующий
						Если ОстТекАванс <= 0 Тогда
							
							Счетчик = Счетчик + 1;
							
							// Проверяем, кончились авансы или нет
							Если Счетчик <= ВсегоАвансов - 1 Тогда 
								ОстТекАванс 		= ТЗАвансы[Счетчик].СуммаАванса;
							Иначе
								Если ОстТекОтгр > 0 Тогда
									СтрокаТЗ.ОстатокТекущейДоогрузки = ОстТекОтгр;
								КонецЕсли;
								
								Прервать;
							КонецЕсли; // Если все авансы закончились, то выход во внешний цикл и выход оттуда
							
							Продолжить;								
						КонецЕсли; 					
					КонецЦикла;				
				КонецЦикла;			
			КонецЕсли; 
			
			// Заполнение оплат			
			ТЗОплата = ТаблицаОплат.Скопировать(ТаблицаОплат.НайтиСтроки(ОтборПоДоговору));
			ТЗОплата.Сортировать("Период");
			
			Для Каждого СтрокаТЗ Из ТЗОплата Цикл	
				СтрокаТЗОтгрузок = ТЗОтгрузок.Добавить();
					
				СтрокаТЗОтгрузок.Дата 						= СтрокаТЗ.Период;		
				СтрокаТЗОтгрузок.Контрагент 				= Контрагент;
				СтрокаТЗОтгрузок.Договор 					= Договор;
				СтрокаТЗОтгрузок.Операция 					= СтрокаТЗ.Документ;
				СтрокаТЗОтгрузок.СуммаДокумента 			= СтрокаТЗ.Оплата;
				СтрокаТЗОтгрузок.Уровень 					= 3;
				СтрокаТЗОтгрузок.КонтрагентДляОтбора 		= Контрагент;
				СтрокаТЗОтгрузок.ДоговорДляОтбора 			= Договор;
				СтрокаТЗОтгрузок.ПоказыватьПриПустомОтборе 	= Истина;
				СтрокаТЗОтгрузок.СтрокаАванса				= Истина;
			КонецЦикла;
			
			// Заполнение отгрузок оставшихся после доотгрузки
			ВремТаблицаОтгрузок = ТаблицаОтгрузок.Скопировать(ТаблицаОтгрузок.НайтиСтроки(ОтборПоДоговору));
			
			Для Каждого СтрокаТЗ Из ВремТаблицаОтгрузок Цикл	
				
				Если ТЗОтгрузок.Найти(СтрокаТЗ.Регистратор, "Операция") = Неопределено Тогда
					СтрокаТЗОтгрузок = ТЗОтгрузок.Добавить();
						
					СтрокаТЗОтгрузок.Дата 						= СтрокаТЗ.Период;		
					СтрокаТЗОтгрузок.Контрагент 				= Контрагент;
					СтрокаТЗОтгрузок.Договор 					= Договор;
					СтрокаТЗОтгрузок.Операция 					= СтрокаТЗ.Регистратор;
					СтрокаТЗОтгрузок.СуммаДокумента 			= СтрокаТЗ.Отгрузка;
					СтрокаТЗОтгрузок.Уровень 					= 3;
					СтрокаТЗОтгрузок.КонтрагентДляОтбора 		= Контрагент;
					СтрокаТЗОтгрузок.ДоговорДляОтбора 			= Договор;
					СтрокаТЗОтгрузок.ПоказыватьПриПустомОтборе 	= Истина;
				КонецЕсли;
			КонецЦикла;
			
			//ТЗОтгрузок.Сортировать("Дата Возр");
			СуммаАвансаДляРасчета = СуммаАвансовНаНачалоМесяца;
			
			Индекс = 1;
			
			// Заполнение отсортированных данных в ТЗ на форме и высчитывание остатка аванса
			Для Каждого СтрокаТЗОтгрузок Из ТЗОтгрузок Цикл
				СтрокаТЗ = АвансыДоотгрузки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЗ, СтрокаТЗОтгрузок);
				
				Если СтрокаТЗОтгрузок.СтрокаАванса Тогда
					СуммаАвансаДляРасчета  = СуммаАвансаДляРасчета + СтрокаТЗ.СуммаДокумента;
					
				ИначеЕсли СтрокаТЗОтгрузок.Доотгрузка <> 0 Тогда
					СуммаАвансаДляРасчета  = СуммаАвансаДляРасчета - СтрокаТЗ.Доотгрузка - СтрокаТЗ.ОстатокТекущейДоогрузки;
					
				Иначе
					СуммаАвансаДляРасчета  = СуммаАвансаДляРасчета - СтрокаТЗ.СуммаДокумента;
				КонецЕсли;
				
				Если СтрокаТЗ.Доотгрузка = 0 Тогда
					
					Сумма = Мин(СтрокаТЗ.СуммаДокумента, СуммаАвансаДляРасчета);
										
					СтрокаТЗ.Аванс = ?(Сумма < 0, 0, Сумма);	
				КонецЕсли;	
				
				СтрокаТЗ.ОстатокАванса = СуммаАвансаДляРасчета;
				СтрокаТЗ.УровеньОтгрузок = Индекс;
				Индекс = Индекс + 1;
			КонецЦикла;	
			
			//СтрокаТЗ = АвансыДоотгрузки.Добавить();
			//СтрокаТЗ.Уровень 					= 4;
			//СтрокаТЗ.ДоговорДляОтбора 			= Договор;
			//СтрокаТЗ.Доотгрузка					= СуммаДоотгрузокПоДоговору;
			//СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			//СтрокаТЗ.Дата 						= "Авансы";
			
			СуммаДоотгрузокПоКонтрагенту = СуммаДоотгрузокПоКонтрагенту + СуммаДоотгрузокПоДоговору;
			СуммаДоотгрузокПоДоговору 	 = 0;
			
			Индекс = 1;
			
			//// Аванс
			//Для каждого СтрокаТЗОплата Из ТЗОплата Цикл
			//	
			//	ТекАванс = Мин(СтрокаТЗОплата.Оплата, ОстАванс);
			//	
			//	Если ТекАванс > 0 Тогда
			//		СтрокаТЗ = АвансыДоотгрузки.Добавить();
			//		СтрокаТЗ.Дата 						= СтрокаТЗОплата.Период;
			//		СтрокаТЗ.Контрагент					= Контрагент;
			//		СтрокаТЗ.Договор					= Договор;
			//		//СтрокаТЗ.Операция 					= "Аванс №" + Индекс;
			//		СтрокаТЗ.НомерАванса 				= СтрокаТЗОплата.Документ;
			//		СтрокаТЗ.СуммаДокумента 			= СтрокаТЗОплата.Оплата;
			//		СтрокаТЗ.Аванс						= ТекАванс;
			//		СтрокаТЗ.Уровень 					= 5;
			//		СтрокаТЗ.УровеньАванса 				= УровеньАванса;
			//		СтрокаТЗ.КонтрагентДляОтбора		= Контрагент;
			//		СтрокаТЗ.ДоговорДляОтбора			= Договор;
			//		СтрокаТЗ.ПоказыватьПриПустомОтборе	= Истина;		
			//	КонецЕсли;
			//	
			//	ОстАванс = ОстАванс - ТекАванс;
			//	Если ОстАванс <= 0 Тогда 
			//		Прервать;	
			//	КонецЕсли;
			//	
			//	Индекс = Индекс + 1;
			//	УровеньАванса = УровеньАванса + 1;
			//КонецЦикла;
			
			СуммаАвансовПоКонтрагенту = СуммаАвансовПоКонтрагенту + СуммаАвансовНаНачалоМесяца;
			ТЗОтгрузок.Очистить();
		КонецЦикла;
		
		ТЗОтгрузок.Очистить();
		
		Отбор = Новый Структура();
		Отбор.Вставить("Уровень", 					0);
		Отбор.Вставить("КонтрагентДляОтбора", 		Контрагент);
		Отбор.Вставить("ПоказыватьПриПустомОтборе", Ложь);
		Отбор.Вставить("Дата", 						"Остаток");
		
		МассивСтрок = АвансыДоотгрузки.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.Уровень 					= 0;
			СтрокаТЗ.КонтрагентДляОтбора 		= Контрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= "Остаток";
		КонецЕсли;	
		
		Отбор = Новый Структура();
		Отбор.Вставить("Уровень", 					2);
		Отбор.Вставить("КонтрагентДляОтбора", 		Контрагент);
		Отбор.Вставить("ПоказыватьПриПустомОтборе", Ложь);
		Отбор.Вставить("Дата", 						Месяц);
		
		МассивСтрок = АвансыДоотгрузки.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() > 0 Тогда
			МассивСтрок[0].ОстатокАванса = МассивСтрок[0].ОстатокАванса + СуммаАвансовПоКонтрагенту	
			
		Иначе	
			СтрокаТЗ = АвансыДоотгрузки.Добавить();
			СтрокаТЗ.ОстатокАванса 				= СуммаАвансовПоКонтрагенту;
			СтрокаТЗ.Уровень 					= 2;
			СтрокаТЗ.КонтрагентДляОтбора 		= Контрагент;
			СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
			СтрокаТЗ.Дата 						= Месяц;
		КонецЕсли;
		
		//СтрокаТЗ = АвансыДоотгрузки.Добавить();
		//СтрокаТЗ.Уровень 					= 4;
		//СтрокаТЗ.КонтрагентДляОтбора 		= Контрагент;
		//СтрокаТЗ.Доотгрузка					= СуммаДоотгрузокПоКонтрагенту;
		//СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Ложь;
		//СтрокаТЗ.Дата 						= "Авансы";
		
		СуммаВсехДоотгрузок 		 = СуммаВсехДоотгрузок + СуммаДоотгрузокПоКонтрагенту;
		СуммаДоотгрузокПоКонтрагенту = 0;
	КонецЦикла;	
	
	СтрокаТЗ = АвансыДоотгрузки.Добавить();
	СтрокаТЗ.Уровень 					= 0;
	СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;
	СтрокаТЗ.Дата 						= "Остаток";
	
	СтрокаТЗ = АвансыДоотгрузки.Добавить();
	СтрокаТЗ.ОстатокАванса 				= СуммаВсехАвансов;
	СтрокаТЗ.Уровень 					= 2;
	СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;
	СтрокаТЗ.Дата 						= Месяц;
	
	//Если ВыборкаКонтрагент.Количество() <> 0 Тогда
	//	СтрокаТЗ = АвансыДоотгрузки.Добавить();
	//	СтрокаТЗ.Уровень 					= 4;
	//	СтрокаТЗ.Доотгрузка					= СуммаВсехДоотгрузок;
	//	СтрокаТЗ.ПоказыватьПриПустомОтборе 	= Истина;
	//	СтрокаТЗ.Дата 						= "Авансы";
	//КонецЕсли;
	
	//АвансыДоотгрузки.Сортировать("Уровень, Контрагент, Договор, Дата");
	АвансыДоотгрузки.Сортировать("Уровень, Контрагент, Договор, УровеньОтгрузок");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборНаАвансыДоотгрузки()

	Если ЗначениеЗаполнено(ДоговорОтбор) Тогда
		СтруктураОтбора = Новый ФиксированнаяСтруктура("ДоговорДляОтбора", ДоговорОтбор);
		
	ИначеЕсли ЗначениеЗаполнено(КонтрагентОтбор) Тогда
		СтруктураОтбора = Новый ФиксированнаяСтруктура("КонтрагентДляОтбора", КонтрагентОтбор);
		
	Иначе
		СтруктураОтбора = Новый ФиксированнаяСтруктура("ПоказыватьПриПустомОтборе", Истина);
	КонецЕсли;

	Элементы.АвансыДоотгрузки.ОтборСтрок = СтруктураОтбора;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗакладкуНастроек()

	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(НачалоМесяца(Объект.Дата), Организация);
	
	Если ДанныеУчетнойПолитики.ПлательщикНДС Тогда
		Элементы.ПлательщикНДС.Заголовок = НСтр("ru = 'Плательщик НДС: Да'")
	Иначе
		Элементы.ПлательщикНДС.Заголовок = НСтр("ru = 'Плательщик НДС: Нет'")
	КонецЕсли;
	
	Если ДанныеУчетнойПолитики.УчетНДСНаАвансы Тогда
		Элементы.ОтключитьРасчетНДСНаАвансы.Заголовок = НСтр("ru = 'Отключить расчет НДС на авансы: Нет'")
	Иначе
		Элементы.ОтключитьРасчетНДСНаАвансы.Заголовок = НСтр("ru = 'Отключить расчет НДС на авансы: Да'")
	КонецЕсли;

	Элементы.СтавкаНСПДляРасчетаНДСНаАвансы.Заголовок = СтрШаблон(НСтр("ru = 'Ставка НСП для расчета НДС на авансы: %1'"),
															ДанныеУчетнойПолитики.СтавкаНСПДляРасчетаНДСНаАвансы);
	
	Если ДанныеУчетнойПолитики.УказыватьПризнакЗачетаНДСПриПоступлении Тогда
		Элементы.УказыватьПризнакЗачетаНДС.Заголовок = НСтр("ru = 'Указывать признак зачета НДС: Да'")
	Иначе
		Элементы.УказыватьПризнакЗачетаНДС.Заголовок = НСтр("ru = 'Указывать признак зачета НДС: Нет'")
	КонецЕсли;															
	
	Элементы.ПороговыйПроцентОсвобожденныхПоставок.Заголовок = СтрШаблон(НСтр("ru = 'Пороговый %% освобожденных поставок: %1'"),
															ДанныеУчетнойПолитики.ПороговыйПроцентОсвобожденныхПоставок);
															
	Элементы.НДСНаПошлинуИмпортируемыхОС.Заголовок = НСтр("ru = 'НДС на пошлину импортируемых основных средств: смотреть в документе ГТД по импорту'");
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Элементы.ЗначениеСтавкиНДССтандарт.Заголовок = СтрШаблон(НСтр("ru = 'Значение ставки НДС Стандарт на текущую дату: %1'"),
												УчетНДС.ПолучитьСтавкуНДС(ТекущаяДата, Справочники.СтавкиНДС.Стандарт));
															
	Элементы.ЗначениеСтавкиНСПТорговля.Заголовок = СтрШаблон(НСтр("ru = 'Значение ставки НСП Торговля: %1'"),
												УчетНДС.ПолучитьСтавкуНСП(ТекущаяДата, Организация, Справочники.СтавкиНСП.Торговля));
															
	Элементы.ЗначениеСтавкиНСППрочее.Заголовок = СтрШаблон(НСтр("ru = 'Значение ставки НСП Прочее : %1'"),
												УчетНДС.ПолучитьСтавкуНСП(ТекущаяДата, Организация, Справочники.СтавкиНСП.Прочее));	
КонецПроцедуры

#КонецОбласти

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодМонитораПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Дата", "МесяцСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодМонитораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Дата", "МесяцСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ПериодМонитораРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Дата", "МесяцСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодМонитораАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодМонитораОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти
