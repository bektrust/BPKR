
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.НачалоПериода = НачалоМесяца(ТекущаяДатаСеанса());
	Объект.КонецПериода	 = КонецМесяца(Объект.НачалоПериода);
	
	БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект, Объект.Организация));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект, Объект.Организация));
		
	Если ЗначениеЗаполнено(Объект.Счет) Тогда	
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Объект.Счет);
		
		Субконто1ТолькоОбороты = СвойстваСчета.ВидСубконто1ТолькоОбороты;		
		Субконто2ТолькоОбороты = СвойстваСчета.ВидСубконто2ТолькоОбороты;		
		Субконто3ТолькоОбороты = СвойстваСчета.ВидСубконто3ТолькоОбороты;
			
		ПарныйСчет = СвойстваСчета.ПарныйСчет;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1ПриИзменении(Элемент)
	ПриИзмененииСубконто(1);	
	ОбработкаИзмененияВалюты(Объект.Субконто1);		
КонецПроцедуры

&НаКлиенте
Процедура Субконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Субконто2ПриИзменении(Элемент)
	ПриИзмененииСубконто(2);
	ОбработкаИзмененияВалюты(Объект.Субконто2);
КонецПроцедуры

&НаКлиенте
Процедура Субконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Субконто3ПриИзменении(Элемент)
	ПриИзмененииСубконто(3);
	ОбработкаИзмененияВалюты(Объект.Субконто3);
КонецПроцедуры

&НаКлиенте
Процедура Субконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОборотку(Команда)
	
	Если Объект.НачалоПериода > Объект.КонецПериода Тогда
		ТекстСообщения = НСтр("ru = 'Начало периода не может быть больше конца периода.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.НачалоПериода");
		Возврат;
	КонецЕсли;
	
	СформироватьОбороткуНаСервере();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОборотка;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Счет) Тогда
		ТекстСообщения = НСтр("ru = 'Укажите счет.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Счет");
		Возврат;
	КонецЕсли;	
	
	Если Объект.НачалоПериода > Объект.КонецПериода Тогда
		ТекстСообщения = НСтр("ru = 'Начало периода не может быть больше конца периода.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.НачалоПериода");
		Возврат;
	КонецЕсли;
	
	СформироватьОперации();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОперации;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИзОпераций(Команда)
	
	Если Объект.НачалоПериода > Объект.КонецПериода Тогда
		ТекстСообщения = НСтр("ru = 'Начало периода не может быть больше конца периода.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.НачалоПериода");
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти = Элементы.Оборотка.ТекущиеДанные;
	
	Если НЕ СтрокаТабличнойЧасти = Неопределено
		ИЛИ Объект.Оборотка.Количество() = 1 Тогда	
		
		ДанныеОборотки = Новый Структура();
		ДанныеОборотки.Вставить("Валюта", 	 СтрокаТабличнойЧасти.Валюта);
		ДанныеОборотки.Вставить("Счет", 	 СтрокаТабличнойЧасти.Счет);
		ДанныеОборотки.Вставить("Субконто1", СтрокаТабличнойЧасти.Субконто1);
		ДанныеОборотки.Вставить("Субконто2", СтрокаТабличнойЧасти.Субконто2);
		ДанныеОборотки.Вставить("Субконто3", СтрокаТабличнойЧасти.Субконто3);
		
		СформироватьОперации(ДанныеОборотки);
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОборотка;
	Иначе	
		ТекстСообщения = НСтр("ru = 'Выделите строку на закладке ""Оборотка"".'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Оборотка");		
	КонецЕсли;	
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОперации;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОбороткуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
		|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Субконто3,
		|	ХозрасчетныйОстаткиИОбороты.Валюта КАК Валюта,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокДт КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокКт КАК ВалютнаяСуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокДт КАК ВалютнаяСуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокКт КАК ВалютнаяСуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Счет В (&СписокСчетов), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Счет,
		|	Валюта,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3";	
	Запрос.УстановитьПараметр("НачалоПериода", 	Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 	Объект.КонецПериода);
	
	Если Объект.СписокСчетов.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("СписокСчетов", Объект.СписокСчетов.Выгрузить().ВыгрузитьКолонку("Счет"));
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Счет В (&СписокСчетов)", "");		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "");	
	КонецЕсли;	
	
	Объект.Оборотка.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура СформироватьОперации(ДанныеОборотки = Неопределено)

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	СписокСчетов = Новый Массив();
	
	Если ДанныеОборотки = Неопределено Тогда
		Валюта 		= ВалютаСубконто;
		Субконто1 	= Объект.Субконто1;
		Субконто2 	= Объект.Субконто2;
		Субконто3 	= Объект.Субконто3;
		
		СписокСчетов.Добавить(Объект.Счет);
		
		Если Объект.ИспользоватьПарныйСчет Тогда
			СписокСчетов.Добавить(ПарныйСчет);	
		КонецЕсли;	
	Иначе
		Валюта = ДанныеОборотки.Валюта;
		Субконто1 = ДанныеОборотки.Субконто1;	
	 	Субконто2 = ДанныеОборотки.Субконто2;	
		Субконто3 = ДанныеОборотки.Субконто3;
		
		СписокСчетов.Добавить(ДанныеОборотки.Счет);
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(ДанныеОборотки.Счет);
		
		Субконто1ТолькоОбороты = СвойстваСчета.ВидСубконто1ТолькоОбороты;		
		Субконто2ТолькоОбороты = СвойстваСчета.ВидСубконто2ТолькоОбороты;		
		Субконто3ТолькоОбороты = СвойстваСчета.ВидСубконто3ТолькоОбороты;
		
		ДанныеОборотки.Вставить("ВидСубконто1Наименование", СвойстваСчета.ВидСубконто1Наименование);
		ДанныеОборотки.Вставить("ВидСубконто2Наименование", СвойстваСчета.ВидСубконто2Наименование);
		ДанныеОборотки.Вставить("ВидСубконто3Наименование", СвойстваСчета.ВидСубконто3Наименование);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто_Приход.Период КАК Период,
		|	ХозрасчетныйДвиженияССубконто_Приход.Регистратор КАК Регистратор,
		|	ХозрасчетныйДвиженияССубконто_Приход.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто_Приход.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто_Приход.Сумма КАК СуммаПриход,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто_Приход.ВалютаДт ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйДвиженияССубконто_Приход.Сумма
		|		ИНАЧЕ ХозрасчетныйДвиженияССубконто_Приход.ВалютнаяСуммаДт
		|	КОНЕЦ КАК ВалютнаяСуммаПриход,
		|	0 КАК СуммаРасход,
		|	0 КАК ВалютнаяСуммаРасход,
		|	ХозрасчетныйДвиженияССубконто_Приход.Содержание КАК Содержание,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто_Приход.ВалютаДт, &ВалютаРегламентированногоУчета) КАК Валюта
		|ПОМЕСТИТЬ ВременнаяТаблицаХозрасчетныйДвиженияССубконто
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Организация = &Организация
		|				И СчетДт В (&СписокСчетов)
		|				И СубконтоДт1 = &Субконто1
		|				И СубконтоДт2 = &Субконто2
		|				И СубконтоДт3 = &Субконто3
		|				И ВалютаДт = &Валюта,
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто_Приход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто_Расход.Период,
		|	ХозрасчетныйДвиженияССубконто_Расход.Регистратор,
		|	ХозрасчетныйДвиженияССубконто_Расход.СчетДт,
		|	ХозрасчетныйДвиженияССубконто_Расход.СчетКт,
		|	0,
		|	0,
		|	ХозрасчетныйДвиженияССубконто_Расход.Сумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто_Расход.ВалютаКт ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйДвиженияССубконто_Расход.Сумма
		|		ИНАЧЕ ХозрасчетныйДвиженияССубконто_Расход.ВалютнаяСуммаКт
		|	КОНЕЦ,
		|	ХозрасчетныйДвиженияССубконто_Расход.Содержание,
		|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто_Расход.ВалютаКт, &ВалютаРегламентированногоУчета)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Организация = &Организация
		|				И СчетКт В (&СписокСчетов)
		|				И СубконтоКт1 = &Субконто1
		|				И СубконтоКт2 = &Субконто2
		|				И СубконтоКт3 = &Субконто3
		|				И ВалютаКт = &Валюта,
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто_Расход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КурсыВалют.Период КАК Период,
		|	КурсыВалют.Валюта КАК Валюта,
		|	КурсыВалют.Курс КАК Курс
		|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалют
		|ИЗ
		|	РегистрСведений.КурсыВалют КАК КурсыВалют
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Период КАК Период,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СуммаПриход КАК СуммаПриход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.ВалютнаяСуммаПриход КАК ВалютнаяСуммаПриход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СуммаРасход КАК СуммаРасход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.ВалютнаяСуммаРасход КАК ВалютнаяСуммаРасход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Содержание КАК Содержание,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Валюта КАК Валюта,
		|	МАКСИМУМ(ВременнаяТаблицаКурсыВалют.Период) КАК ПериодКурса
		|ПОМЕСТИТЬ ВременнаяТаблицаКурсыМаксПериод
		|ИЗ
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто КАК ВременнаяТаблицаХозрасчетныйДвиженияССубконто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалют КАК ВременнаяТаблицаКурсыВалют
		|		ПО ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Период >= ВременнаяТаблицаКурсыВалют.Период
		|			И ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Валюта = ВременнаяТаблицаКурсыВалют.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Содержание,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СчетДт,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СчетКт,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Валюта,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Период,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.Регистратор,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СуммаПриход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.ВалютнаяСуммаПриход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.СуммаРасход,
		|	ВременнаяТаблицаХозрасчетныйДвиженияССубконто.ВалютнаяСуммаРасход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаКурсыМаксПериод.Период КАК Период,
		|	ВременнаяТаблицаКурсыМаксПериод.Регистратор КАК Регистратор,
		|	ВременнаяТаблицаКурсыМаксПериод.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаКурсыМаксПериод.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаКурсыМаксПериод.СуммаПриход КАК СуммаПриход,
		|	ВременнаяТаблицаКурсыМаксПериод.ВалютнаяСуммаПриход КАК ВалютнаяСуммаПриход,
		|	ВременнаяТаблицаКурсыМаксПериод.СуммаРасход КАК СуммаРасход,
		|	ВременнаяТаблицаКурсыМаксПериод.ВалютнаяСуммаРасход КАК ВалютнаяСуммаРасход,
		|	ВременнаяТаблицаКурсыМаксПериод.Содержание КАК Содержание,
		|	ВременнаяТаблицаКурсыМаксПериод.Валюта КАК Валюта,
		|	ЕСТЬNULL(ВременнаяТаблицаКурсыВалют.Курс, 0) КАК Курс
		|ИЗ
		|	ВременнаяТаблицаКурсыМаксПериод КАК ВременнаяТаблицаКурсыМаксПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалют КАК ВременнаяТаблицаКурсыВалют
		|		ПО ВременнаяТаблицаКурсыМаксПериод.ПериодКурса = ВременнаяТаблицаКурсыВалют.Период
		|			И ВременнаяТаблицаКурсыМаксПериод.Валюта = ВременнаяТаблицаКурсыВалют.Валюта
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта,
		|	Период,
		|	Регистратор
		|ИТОГИ
		|	МАКСИМУМ(Период),
		|	СУММА(СуммаПриход),
		|	СУММА(ВалютнаяСуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(ВалютнаяСуммаРасход)
		|ПО
		|	Валюта,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
		|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК Субконто3,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Валюта, &ВалютаРегламентированногоУчета) КАК Валюта,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокДт
		|	КОНЕЦ КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокКт
		|	КОНЕЦ КАК ВалютнаяСуммаНачальныйОстатокКт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокДт
		|	КОНЕЦ КАК ВалютнаяСуммаКонечныйОстатокДт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокКт
		|	КОНЕЦ КАК ВалютнаяСуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,	
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт
		|	КОНЕЦ КАК ВалютнаяСуммаОборотДт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.Валюта ЕСТЬ NULL
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт
		|	КОНЕЦ КАК ВалютнаяСуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет В (&СписокСчетов),
		|			,
		|			Организация = &Организация
		|				И Валюта = &Валюта
		|				И Субконто1 = &Субконто1
		|				И Субконто2 = &Субконто2
		|				И Субконто3 = &Субконто3) КАК ХозрасчетныйОстаткиИОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта,
		|	Счет,
		|	Субконто1,
		|	Субконто2,
		|	Субконто3
		|ИТОГИ
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(СуммаНачальныйОстатокКт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокКт),
		|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
		|	СУММА(ВалютнаяСуммаНачальныйОстатокКт),
		|	СУММА(ВалютнаяСуммаКонечныйОстатокДт),
		|	СУММА(ВалютнаяСуммаКонечныйОстатокКт),
		|	СУММА(СуммаОборотДт),
		|	СУММА(СуммаОборотКт),
		|	СУММА(ВалютнаяСуммаОборотДт),
		|	СУММА(ВалютнаяСуммаОборотКт)
		|ПО
		|	Валюта";
	
	Если Объект.Организация.Пустая() Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "ИСТИНА");
	КонецЕсли;
	
	Если Валюта.Пустая() Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВалютаДт = &Валюта", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВалютаКт = &Валюта", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Валюта = &Валюта", "");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Субконто1) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоДт1 = &Субконто1", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоКт1 = &Субконто1", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто1 = &Субконто1", "");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Субконто2) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоДт2 = &Субконто2", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоКт2 = &Субконто2", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто2 = &Субконто2", "");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Субконто3) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоДт3 = &Субконто3", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СубконтоКт3 = &Субконто3", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто3 = &Субконто3", "");
	КонецЕсли;
	
	Если Субконто1ТолькоОбороты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто1 = &Субконто1", "");	
	КонецЕсли;
	
	Если Субконто2ТолькоОбороты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто2 = &Субконто2", "");	
	КонецЕсли;
	
	Если Субконто3ТолькоОбороты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто3 = &Субконто3", "");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", 					Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 					КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("Валюта", 						Валюта);
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("Субконто1", 						Субконто1);
	Запрос.УстановитьПараметр("Субконто2", 						Субконто2);
	Запрос.УстановитьПараметр("Субконто3", 						Субконто3);
	Запрос.УстановитьПараметр("СписокСчетов", 					СписокСчетов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	Результаты = Запрос.ВыполнитьПакет();		

	ТабличныйДокумент.Очистить();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.КарточкаОпераций.ПФ_MXL_Операции"); 
		
	ОбластьТекст 			= Макет.ПолучитьОбласть("Текст");
	ОбластьСодержаниеСчета 	= Макет.ПолучитьОбласть("СодержаниеСчета");
	ОбластьСодержание 		= Макет.ПолучитьОбласть("Содержание");
	ОбластьИтогВалютный 	= Макет.ПолучитьОбласть("ИтогВалютный");
	ОбластьИтог 			= Макет.ПолучитьОбласть("Итог");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаВалютная 	= Макет.ПолучитьОбласть("СтрокаВалютная");
	ОбластьДокумент 		= Макет.ПолучитьОбласть("Документ");
	ОбластьДокументВалютный	= Макет.ПолучитьОбласть("ДокументВалютный");
	
	ДанныеПечати = Новый Структура();
	ДанныеПечати.Вставить("Текст", 				Неопределено);
	ДанныеПечати.Вставить("СуммаДт", 			Неопределено);
	ДанныеПечати.Вставить("ВалютнаяСуммаДт", 	Неопределено);
	ДанныеПечати.Вставить("СуммаКт", 			Неопределено);
	ДанныеПечати.Вставить("ВалютнаяСуммаКт", 	Неопределено);
	ДанныеПечати.Вставить("Содержание", 		Неопределено);
	ДанныеПечати.Вставить("СчетДт", 			Неопределено);
	ДанныеПечати.Вставить("СчетКт", 			Неопределено);
	ДанныеПечати.Вставить("КурсРасчитанный", 	Неопределено);
	ДанныеПечати.Вставить("КурсНаДату", 		Неопределено);
	ДанныеПечати.Вставить("Дата", 				Неопределено);
	ДанныеПечати.Вставить("Документ", 			Неопределено);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ДанныеПечати.Текст = Объект.Организация.Наименование;
		ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьТекст);
	КонецЕсли;	
	
	ДанныеПечати.Текст = СтрШаблон(НСтр("ru = 'Карточка операций с %1 по %2'"), 
							Формат(Объект.НачалоПериода, "ДФ=dd.MM.yyyy"), 
							Формат(Объект.КонецПериода, "ДФ=dd.MM.yyyy"));
							
	Если ЗначениеЗаполнено(Объект.Заголовок) Тогда
		ДанныеПечати.Текст = СтрШаблон("%1 (%2)", ДанныеПечати.Текст, Объект.Заголовок);	
	КонецЕсли;	
	
	ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьТекст);
	
	ДанныеПечати.Текст = СтрШаблон(НСтр("ru = 'Счет: %1'"), СписокСчетов[0]);
	ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьТекст);
	
	Если НЕ Валюта.Пустая() Тогда
		ДанныеПечати.Текст = СтрШаблон(НСтр("ru = 'Валюта: %1'"), Валюта.Наименование);
		ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьТекст);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Субконто1) Тогда
		
		Если ДанныеОборотки = Неопределено Тогда
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), Элементы.Субконто1.Заголовок, Субконто1);
		Иначе
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), ДанныеОборотки.ВидСубконто1Наименование, Субконто1);	
		КонецЕсли;	
			
		ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Субконто2) Тогда
		
		Если ДанныеОборотки = Неопределено Тогда
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), Элементы.Субконто2.Заголовок, Субконто2);
		Иначе
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), ДанныеОборотки.ВидСубконто2Наименование, Субконто2);	
		КонецЕсли;	
		
		ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьТекст);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Субконто3) Тогда
		
		Если ДанныеОборотки = Неопределено Тогда
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), Элементы.Субконто3.Заголовок, Субконто3);
		Иначе
			ДанныеПечати.Текст = СтрШаблон(НСтр("ru = '%1: %2'"), ДанныеОборотки.ВидСубконто3Наименование, Субконто3);	
		КонецЕсли;	
		
		ОбластьТекст.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьТекст);
	КонецЕсли;
	
	Если Объект.ПоказатьПроводкиВДокументах Тогда
		ТабличныйДокумент.Вывести(ОбластьСодержаниеСчета);
	Иначе
		ТабличныйДокумент.Вывести(ОбластьСодержаниеСчета);
	КонецЕсли;	
	
	ВыборкаДвижения_Валюта = Результаты[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги = Результаты[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОтборДвижений = Новый Структура();
	ОтборДвижений.Вставить("Валюта", Неопределено);
	
	КонецПериода = КонецМесяца(Объект.КонецПериода) + 1; 
	
	// Итоги
	Пока ВыборкаИтоги.Следующий() Цикл
		
		СписокОборотовПоСубконто = Новый Массив();
		
		Если Объект.ПоказатьСомы Тогда
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Начальное сальдо на %1 по валюте ""%2""'"), 
												Формат(Объект.НачалоПериода, "ДФ=dd.MM.yyyy"), ВыборкаИтоги.Валюта);
			ДанныеПечати.СуммаДт			= ВыборкаИтоги.СуммаНачальныйОстатокДт;
			ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаИтоги.ВалютнаяСуммаНачальныйОстатокДт;
			ДанныеПечати.СуммаКт			= ВыборкаИтоги.СуммаНачальныйОстатокКт;
			ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаИтоги.ВалютнаяСуммаНачальныйОстатокКт;
			
			ОбластьИтогВалютный.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтогВалютный);
			
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Конечное сальдо на %1 по валюте ""%2""'"), 
												Формат(КонецПериода, "ДФ=dd.MM.yyyy"), ВыборкаИтоги.Валюта);
			ДанныеПечати.СуммаДт			= ВыборкаИтоги.СуммаКонечныйОстатокДт;
			ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаИтоги.ВалютнаяСуммаКонечныйОстатокДт;
			ДанныеПечати.СуммаКт			= ВыборкаИтоги.СуммаКонечныйОстатокКт;
			ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаИтоги.ВалютнаяСуммаКонечныйОстатокКт;
			
			ОбластьИтогВалютный.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтогВалютный);
			
			// Обороты
			ОбщаяСуммаОборотДт 			= 0;
			ОбщаяВалютнаяСуммаОборотДт 	= 0;
			ОбщаяСуммаОборотКт 			= 0;
			ОбщаяВалютнаяСуммаОборотКт 	= 0;
			
			ВыборкаИтогиДетальныеЗаписи = ВыборкаИтоги.Выбрать();
			
			Пока ВыборкаИтогиДетальныеЗаписи.Следующий() Цикл
				Содержание = "";
				
				// Нач. и Кон сальдо будут только по субконто, у которых НЕ стоит настройка "Только обороты",
				// а сами обороты нужны строго по указанным субкнто, вне зависимости от настройки "Только обороты"
				Если (ЗначениеЗаполнено(Субконто1) 
					И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто1 = Субконто1)
					ИЛИ (ЗначениеЗаполнено(Субконто2) 
						И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто2 = Субконто2)
					ИЛИ (ЗначениеЗаполнено(Субконто3) 
						И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто3 = Субконто3) Тогда
					Продолжить;						
				КонецЕсли;		
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто1) Тогда
					Содержание = Строка(ВыборкаИтогиДетальныеЗаписи.Субконто1);	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто2) Тогда
					Содержание = ?(Содержание = "", Строка(ВыборкаИтогиДетальныеЗаписи.Субконто2), 
									Содержание + "; " + Строка(ВыборкаИтогиДетальныеЗаписи.Субконто2));	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто3) Тогда
					Содержание = ?(Содержание = "", Строка(ВыборкаИтогиДетальныеЗаписи.Субконто3), 
									Содержание + "; " + Строка(ВыборкаИтогиДетальныеЗаписи.Субконто3));	
				КонецЕсли;
				
				ДанныеПечатиОбороты = Новый Структура();
				ДанныеПечатиОбороты.Вставить("Содержание", 		Содержание);
				ДанныеПечатиОбороты.Вставить("СчетДт", 			НСтр("ru = 'Счет:'"));
				ДанныеПечатиОбороты.Вставить("СчетКт", 			ВыборкаИтогиДетальныеЗаписи.Счет);			
				ДанныеПечатиОбороты.Вставить("СуммаДт", 		ВыборкаИтогиДетальныеЗаписи.СуммаОборотДт);
				ДанныеПечатиОбороты.Вставить("ВалютнаяСуммаДт", ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотДт);
				ДанныеПечатиОбороты.Вставить("СуммаКт", 		ВыборкаИтогиДетальныеЗаписи.СуммаОборотКт);
				ДанныеПечатиОбороты.Вставить("ВалютнаяСуммаКт", ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотКт);
													
				// Если все суммы нулевые, значит оборотов нет													
				Если ДанныеПечатиОбороты.СуммаДт = 0
					И ДанныеПечатиОбороты.ВалютнаяСуммаДт = 0
					И ДанныеПечатиОбороты.СуммаКт = 0
					И ДанныеПечатиОбороты.ВалютнаяСуммаКт = 0 Тогда
					Продолжить;	
				КонецЕсли;	
				
				ОбщаяСуммаОборотДт 			= ОбщаяСуммаОборотДт + ВыборкаИтогиДетальныеЗаписи.СуммаОборотДт;
				ОбщаяВалютнаяСуммаОборотДт 	= ОбщаяВалютнаяСуммаОборотДт + ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотДт;
				ОбщаяСуммаОборотКт 			= ОбщаяСуммаОборотКт + ВыборкаИтогиДетальныеЗаписи.СуммаОборотКт;
				ОбщаяВалютнаяСуммаОборотКт 	= ОбщаяВалютнаяСуммаОборотКт + ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотКт;
				
				Если Объект.ПоказатьПроводкиВДокументах Тогда
					СписокОборотовПоСубконто.Добавить(ДанныеПечатиОбороты);
				КонецЕсли;	
			КонецЦикла;
			
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Обороты за период по валюте ""%1""'"), ВыборкаИтоги.Валюта);
			ДанныеПечати.СуммаДт			= ОбщаяСуммаОборотДт;
			ДанныеПечати.ВалютнаяСуммаДт	= ОбщаяВалютнаяСуммаОборотДт;
			ДанныеПечати.СуммаКт			= ОбщаяСуммаОборотКт;
			ДанныеПечати.ВалютнаяСуммаКт	= ОбщаяВалютнаяСуммаОборотКт;
			
			ОбластьИтогВалютный.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтогВалютный);
			
			
			
			Если Объект.ПоказатьПроводкиВДокументах Тогда
				ДанныеПечати.Текст				= НСтр("ru = 'Обороты по субконто'");
				ДанныеПечати.ВалютнаяСуммаДт	= 0;
				ДанныеПечати.ВалютнаяСуммаКт	= 0;
				
				ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьИтог);
				
				Для Каждого ОборотПоСубконто Из СписокОборотовПоСубконто Цикл
					ОбластьСтрока.Параметры.Заполнить(ОборотПоСубконто);
					ТабличныйДокумент.Вывести(ОбластьСтрока);				       	
				КонецЦикла;
			КонецЕсли;	
			
			ДанныеПечати.Текст				= НСтр("ru = 'Обороты по документам'");
			ДанныеПечати.ВалютнаяСуммаДт	= 0;
			ДанныеПечати.ВалютнаяСуммаКт	= 0;
			
			ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтог);
			
			
			
			// Движения
			ОтборДвижений.Валюта = ВыборкаИтоги.Валюта;			
			
			Пока ВыборкаДвижения_Валюта.НайтиСледующий(ОтборДвижений) Цикл				
				ВыборкаДвижения_Регистратор = ВыборкаДвижения_Валюта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДвижения_Регистратор.Следующий() Цикл
					ДанныеПечати.Дата				= ВыборкаДвижения_Регистратор.Период;
					ДанныеПечати.Документ			= ВыборкаДвижения_Регистратор.Регистратор;					
					ДанныеПечати.СуммаДт			= ВыборкаДвижения_Регистратор.СуммаПриход;
					ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаДвижения_Регистратор.ВалютнаяСуммаПриход;
					ДанныеПечати.СуммаКт			= ВыборкаДвижения_Регистратор.СуммаРасход;
					ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаДвижения_Регистратор.ВалютнаяСуммаРасход;
					
					ОбластьДокументВалютный.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьДокументВалютный);
					
					Если Объект.ПоказатьПроводкиВДокументах Тогда					
						ВыборкаДвиженияДетальныеЗаписи = ВыборкаДвижения_Регистратор.Выбрать();
						
						Пока ВыборкаДвиженияДетальныеЗаписи.Следующий() Цикл
							ДанныеПечати.Содержание			= ВыборкаДвиженияДетальныеЗаписи.Содержание;
							ДанныеПечати.СчетДт				= ВыборкаДвиженияДетальныеЗаписи.СчетДт;
							ДанныеПечати.СчетКт				= ВыборкаДвиженияДетальныеЗаписи.СчетКт;
							ДанныеПечати.СуммаДт			= ВыборкаДвиженияДетальныеЗаписи.СуммаПриход;
							ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаДвиженияДетальныеЗаписи.ВалютнаяСуммаПриход;
							ДанныеПечати.СуммаКт			= ВыборкаДвиженияДетальныеЗаписи.СуммаРасход;
							ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаДвиженияДетальныеЗаписи.ВалютнаяСуммаРасход;
							
							Если ОтборДвижений.Валюта = ВалютаРегламентированногоУчета Тогда
								ДанныеПечати.КурсНаДату 		= Неопределено;
								ДанныеПечати.КурсРасчитанный 	= Неопределено;
							Иначе	
								ДанныеПечати.КурсНаДату			= ВыборкаДвиженияДетальныеЗаписи.Курс;
								
								Если НЕ ДанныеПечати.СуммаДт = 0
									ИЛИ НЕ ДанныеПечати.ВалютнаяСуммаДт = 0 Тогда 
									ДанныеПечати.КурсРасчитанный = ?(ДанныеПечати.ВалютнаяСуммаДт = 0, ДанныеПечати.СуммаДт,
																	ДанныеПечати.СуммаДт / ДанныеПечати.ВалютнаяСуммаДт);
								Иначе
									ДанныеПечати.КурсРасчитанный = ?(ДанныеПечати.ВалютнаяСуммаКт = 0, ДанныеПечати.СуммаКт,
																	ДанныеПечати.СуммаКт / ДанныеПечати.ВалютнаяСуммаКт);
								КонецЕсли;	
								
								ДанныеПечати.КурсРасчитанный = ?(ДанныеПечати.КурсРасчитанный < 0, -ДанныеПечати.КурсРасчитанный,
																	ДанныеПечати.КурсРасчитанный);
							КонецЕсли;																	
																
							ОбластьСтрокаВалютная.Параметры.Заполнить(ДанныеПечати);
							ТабличныйДокумент.Вывести(ОбластьСтрокаВалютная);																	
						КонецЦикла;	
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
			
			ВыборкаДвижения_Валюта.Сбросить();
			
		Иначе	
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Начальное сальдо на %1 по валюте ""%2""'"), 
												Формат(Объект.НачалоПериода, "ДФ=dd.MM.yyyy"), ВыборкаИтоги.Валюта);
			ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаИтоги.ВалютнаяСуммаНачальныйОстатокДт;
			ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаИтоги.ВалютнаяСуммаНачальныйОстатокКт;
			
			ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтог);
			
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Конечное сальдо на %1 по валюте ""%2""'"), 
												Формат(КонецПериода, "ДФ=dd.MM.yyyy"), ВыборкаИтоги.Валюта);
			ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаИтоги.ВалютнаяСуммаКонечныйОстатокДт;
			ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаИтоги.ВалютнаяСуммаКонечныйОстатокКт;
			
			ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтог);
			
			// Обороты
			ОбщаяВалютнаяСуммаОборотДт 	= 0;
			ОбщаяВалютнаяСуммаОборотКт 	= 0;
			
			ВыборкаИтогиДетальныеЗаписи = ВыборкаИтоги.Выбрать();
			
			Пока ВыборкаИтогиДетальныеЗаписи.Следующий() Цикл	
				Содержание = "";
				
				// Нач. и Кон сальдо будут только по субконто, у которых НЕ стоит настройка "Только обороты",
				// а сами обороты нужны строго по указанным субкнто, вне зависимости от настройки "Только обороты"
				Если (ЗначениеЗаполнено(Субконто1) 
					И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто1 = Субконто1)
					ИЛИ (ЗначениеЗаполнено(Субконто2) 
						И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто2 = Субконто2)
					ИЛИ (ЗначениеЗаполнено(Субконто3) 
						И НЕ ВыборкаИтогиДетальныеЗаписи.Субконто3 = Субконто3) Тогда
					Продолжить;						
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто1) Тогда
					Содержание = Строка(ВыборкаИтогиДетальныеЗаписи.Субконто1);	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто2) Тогда
					Содержание = ?(Содержание = "", Строка(ВыборкаИтогиДетальныеЗаписи.Субконто2), 
									Содержание + "; " + Строка(ВыборкаИтогиДетальныеЗаписи.Субконто2));	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаИтогиДетальныеЗаписи.Субконто3) Тогда
					Содержание = ?(Содержание = "", Строка(ВыборкаИтогиДетальныеЗаписи.Субконто3), 
									Содержание + "; " + Строка(ВыборкаИтогиДетальныеЗаписи.Субконто3));	
				КонецЕсли;
				
				ДанныеПечатиОбороты = Новый Структура();
				ДанныеПечатиОбороты.Вставить("Содержание", 		Содержание);
				ДанныеПечатиОбороты.Вставить("СчетДт", 			НСтр("ru = 'Счет:'"));
				ДанныеПечатиОбороты.Вставить("СчетКт", 			ВыборкаИтогиДетальныеЗаписи.Счет);			
				ДанныеПечатиОбороты.Вставить("ВалютнаяСуммаДт", ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотДт);
				ДанныеПечатиОбороты.Вставить("ВалютнаяСуммаКт", ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотКт);
													
				// Если все суммы нулевые, значит оборотов нет													
				Если ДанныеПечатиОбороты.ВалютнаяСуммаДт = 0
					И ДанныеПечатиОбороты.ВалютнаяСуммаКт = 0 Тогда
					Продолжить;	
				КонецЕсли;	
				
				ОбщаяВалютнаяСуммаОборотДт 	= ОбщаяВалютнаяСуммаОборотДт + ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотДт;
				ОбщаяВалютнаяСуммаОборотКт 	= ОбщаяВалютнаяСуммаОборотКт + ВыборкаИтогиДетальныеЗаписи.ВалютнаяСуммаОборотКт;
				
				Если Объект.ПоказатьПроводкиВДокументах Тогда
					СписокОборотовПоСубконто.Добавить(ДанныеПечатиОбороты);
				КонецЕсли;	
			КонецЦикла;
			
			ДанныеПечати.Текст				= СтрШаблон(НСтр("ru = 'Обороты за период по валюте ""%1""'"), ВыборкаИтоги.Валюта);
			ДанныеПечати.ВалютнаяСуммаДт	= ОбщаяВалютнаяСуммаОборотДт;
			ДанныеПечати.ВалютнаяСуммаКт	= ОбщаяВалютнаяСуммаОборотКт;
			
			ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтог);
			
			
			
			Если Объект.ПоказатьПроводкиВДокументах Тогда
				ДанныеПечати.Текст				= НСтр("ru = 'Обороты по субконто'");
				ДанныеПечати.ВалютнаяСуммаДт	= 0;
				ДанныеПечати.ВалютнаяСуммаКт	= 0;
				
				ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьИтог);
				
				Для Каждого ОборотПоСубконто Из СписокОборотовПоСубконто Цикл
					ОбластьСтрока.Параметры.Заполнить(ОборотПоСубконто);
					ТабличныйДокумент.Вывести(ОбластьСтрока);				       	
				КонецЦикла;	
			КонецЕсли;	
			
			ДанныеПечати.Текст				= НСтр("ru = 'Обороты по документам'");
			ДанныеПечати.ВалютнаяСуммаДт	= 0;
			ДанныеПечати.ВалютнаяСуммаКт	= 0;
			
			ОбластьИтог.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьИтог);
			
			
			
			// Движения
			ОтборДвижений.Валюта = ВыборкаИтоги.Валюта;			
			
			Пока ВыборкаДвижения_Валюта.НайтиСледующий(ОтборДвижений) Цикл				
				ВыборкаДвижения_Регистратор = ВыборкаДвижения_Валюта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДвижения_Регистратор.Следующий() Цикл
					ДанныеПечати.Дата				= ВыборкаДвижения_Регистратор.Период;
					ДанныеПечати.Документ			= ВыборкаДвижения_Регистратор.Регистратор;					
					ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаДвижения_Регистратор.ВалютнаяСуммаПриход;
					ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаДвижения_Регистратор.ВалютнаяСуммаРасход;
					
					ОбластьДокумент.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьДокумент);
					
					Если Объект.ПоказатьПроводкиВДокументах Тогда					
						ВыборкаДвиженияДетальныеЗаписи = ВыборкаДвижения_Регистратор.Выбрать();
						
						Пока ВыборкаДвиженияДетальныеЗаписи.Следующий() Цикл
							ДанныеПечати.Содержание			= ВыборкаДвиженияДетальныеЗаписи.Содержание;
							ДанныеПечати.СчетДт				= ВыборкаДвиженияДетальныеЗаписи.СчетДт;
							ДанныеПечати.СчетКт				= ВыборкаДвиженияДетальныеЗаписи.СчетКт;
							ДанныеПечати.ВалютнаяСуммаДт	= ВыборкаДвиженияДетальныеЗаписи.ВалютнаяСуммаПриход;
							ДанныеПечати.ВалютнаяСуммаКт	= ВыборкаДвиженияДетальныеЗаписи.ВалютнаяСуммаРасход;																
																
							ОбластьСтрока.Параметры.Заполнить(ДанныеПечати);
							ТабличныйДокумент.Вывести(ОбластьСтрока);																	
						КонецЦикла;	
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
			
			ВыборкаДвижения_Валюта.Сбросить();
		КонецЕсли;				
	КонецЦикла;	
	
	СформироватьНадписьПоОстаткам(ДанныеОборотки);
КонецПроцедуры

&НаСервере
Процедура СформироватьНадписьПоОстаткам(ДанныеОборотки)

	Если ДанныеОборотки = Неопределено Тогда
		Субконто1Значение 		= Объект.Субконто1;
		Субконто2Значение 		= Объект.Субконто2;
		Субконто3Значение 		= Объект.Субконто3;
		Субконто1Наименование 	= Элементы.Субконто1.Заголовок;
		Субконто2Наименование 	= Элементы.Субконто2.Заголовок;
		Субконто3Наименование 	= Элементы.Субконто3.Заголовок;			
	Иначе
		Субконто1Значение 		= ДанныеОборотки.Субконто1;
		Субконто2Значение 		= ДанныеОборотки.Субконто2;
		Субконто3Значение 		= ДанныеОборотки.Субконто3;
		Субконто1Наименование 	= ДанныеОборотки.ВидСубконто1Наименование;
		Субконто2Наименование 	= ДанныеОборотки.ВидСубконто2Наименование;
		Субконто3Наименование 	= ДанныеОборотки.ВидСубконто3Наименование;	
	КонецЕсли;
	
	Текст = "";
	ОдноОборотноеСубконто = Истина;
	
	Если Субконто1ТолькоОбороты 
		И ЗначениеЗаполнено(Субконто1Значение) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Субконто ""%1""'"), Субконто1Наименование);
	КонецЕсли;
	
	Если Субконто2ТолькоОбороты 
		И ЗначениеЗаполнено(Субконто2Значение) Тогда
		
		Если Текст = "" Тогда
			Текст = СтрШаблон(НСтр("ru = 'Субконто ""%1""'"), Субконто2Наименование);	
		Иначе
			Текст = СтрШаблон(НСтр("ru = '%1, субконто ""%1""'"), Текст, Субконто2Наименование);
			ОдноОборотноеСубконто = Ложь;
		КонецЕсли;					
	КонецЕсли;

	Если Субконто3ТолькоОбороты 
		И ЗначениеЗаполнено(Субконто3Значение) Тогда
		
		Если Текст = "" Тогда
			Текст = СтрШаблон(НСтр("ru = 'Субконто ""%1""'"), Субконто3Наименование);	
		Иначе
			Текст = СтрШаблон(НСтр("ru = '%1, субконто ""%1""'"), Текст, Субконто3Наименование);
			ОдноОборотноеСубконто = Ложь;
		КонецЕсли;					
	КонецЕсли;
	
	Если Текст = "" Тогда
		Элементы.ИнформацияПоОстаткам.Видимость = Ложь;
	Иначе
		Элементы.ИнформацияПоОстаткам.Видимость = Истина;			
	КонецЕсли;	
	
	Если ОдноОборотноеСубконто Тогда
		Элементы.ИнформацияПоОстаткам.Заголовок = СтрШаблон(
			НСтр("ru = '%1 является только оборотным, поэтому из суммы начального и конечного сальдо оно исключено.'"), Текст);	
	Иначе	
		Элементы.ИнформацияПоОстаткам.Заголовок = СтрШаблон(
			НСтр("ru = '%1 являются только оборотными, поэтому из суммы начального и конечного сальдо они исключены.'"), Текст);
	КонецЕсли;			
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСубконто(НомерСубконто)

	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		ЭтотОбъект, Объект, НомерСубконто, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект, Объект.Организация));
				
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Объект, 
		ПараметрыУстановкиСвойствСубконто(ЭтотОбъект, Объект.Организация));
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма, Организация)

	Результат = БухгалтерскийУчетКлиентСервер.ПараметрыУстановкиСвойствСубконтоПоШаблону(
		"Субконто", "Субконто", "Счет");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Результат.ДопРеквизиты.Вставить("Организация", Организация);
	КонецЕсли;	
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ОбработкаИзмененияВалюты(Субконто)

	Если ТипЗнч(Субконто) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Элементы.Валюта.Заголовок = СтрШаблон("Валюта: %1", Субконто.ВалютаДенежныхСредств.Наименование);
		ВалютаСубконто = Субконто.ВалютаДенежныхСредств;
		
	ИначеЕсли ТипЗнч(Субконто) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Элементы.Валюта.Заголовок = СтрШаблон("Валюта: %1", Субконто.ВалютаРасчетов.Наименование);
		ВалютаСубконто = Субконто.ВалютаРасчетов;
		
	ИначеЕсли ТипЗнч(Субконто) = Тип("СправочникСсылка.Кассы") Тогда
		Элементы.Валюта.Заголовок = СтрШаблон("Валюта: %1", Субконто.ВалютаДенежныхСредств.Наименование);	
		ВалютаСубконто = Субконто.ВалютаДенежныхСредств;
	Иначе
		Элементы.Валюта.Заголовок = "Валюта";
		ВалютаСубконто = Неопределено;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти
