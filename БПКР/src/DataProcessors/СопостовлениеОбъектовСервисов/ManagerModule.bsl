
#Область ПрограммныйИнтерфейс

 // СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла 
 
 // Устанавливает параметры загрузки.
//
//@skip-warning
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
КонецПроцедуры

// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - Адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - Порядковый номер строки;
//     * остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - Адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - Список неоднозначных значений, для которых в ИБ имеется несколько
//                                              подходящих вариантов.
//     * Колонка       - Строка - Имя колонки, в которой была обнаружена неоднозначность;
//     * Идентификатор - Число  - Идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - Полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - ЛюбойТип - Любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт
	
	ДанныеЗагрузки = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления);
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных);
	
	Для Каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		СтрокаТабличнойЧасти = ДанныеЗагрузки.Добавить();
		
		Если ДополнительныеПараметры.ВидСправочника = "Товары" Тогда
			СтрокаТабличнойЧасти.ИдентификаторОбъекта 		= СтрокаТаблицы.ИдентификаторОбъекта;
			СтрокаТабличнойЧасти.НаименованиеТовараЭТТН		= СтрокаТаблицы.Наименование;
			СтрокаТабличнойЧасти.КодТНВЭДСтрокой 			= СтрокаТаблицы.КодТНВЭД;
			СтрокаТабличнойЧасти.Штрихкод 					= СтрокаТаблицы.Штрихкод;
			
		ИначеЕсли ДополнительныеПараметры.ВидСправочника = "Склады"
			ИЛИ ДополнительныеПараметры.ВидСправочника = "Склады контрагентов" Тогда
			СтрокаТабличнойЧасти.ИдентификаторОбъекта 		= СтрокаТаблицы.ИдентификаторОбъекта;
			СтрокаТабличнойЧасти.НаименованиеСкладаВИСЭТТН 	= СтрокаТаблицы.Наименование;
			СтрокаТабличнойЧасти.АдресСкладаВИСЭТТН 		= СтрокаТаблицы.Адрес;
			
		ИначеЕсли ДополнительныеПараметры.ВидСправочника = "Транспортные средства" Тогда
			СтрокаТабличнойЧасти.ИдентификаторОбъекта 		= СтрокаТаблицы.ИдентификаторОбъекта;
			СтрокаТабличнойЧасти.МаркаТранспорта 			= СтрокаТаблицы.МаркаТранспорта;
			СтрокаТабличнойЧасти.НомерТранспорта 			= СтрокаТаблицы.НомерТранспорта;
			
		ИначеЕсли ДополнительныеПараметры.ВидСправочника = "Водители" Тогда
			СтрокаТабличнойЧасти.ИдентификаторОбъекта 		= СтрокаТаблицы.ИдентификаторОбъекта;
			СтрокаТабличнойЧасти.ФИОВодителя 				= СтрокаТаблицы.ФИОВодителя;
			СтрокаТабличнойЧасти.ИННВодителя 				= СтрокаТаблицы.ИННВодителя;	
		КонецЕсли;	
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДанныеЗагрузки, АдресТаблицыСопоставления);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
 
#КонецОбласти
