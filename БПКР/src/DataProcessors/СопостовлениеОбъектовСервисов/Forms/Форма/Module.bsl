
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Сервис = ПредопределенноеЗначение("Перечисление.ИменаСервисов.ЭТТН");
	Объект.ВидСправочника = "Товары";
	
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидСправочникаПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
&НаКлиенте
Процедура ЗагрузитьТоварыИзФайла(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидСправочника) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено поле ""Вид справочника"".'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.ВидСправочника");
		Возврат;
	КонецЕсли;
	
    ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПолноеИмяТабличнойЧасти = СтрШаблон("%1%2", "Обработка.СопостовлениеОбъектовСервисов.ТабличнаяЧасть.ДанныеЗагрузки", Объект.ВидСправочника);
    ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = ПолноеИмяТабличнойЧасти;
	
	Если Объект.ВидСправочника = "Товары" Тогда
	    ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка списка товаров из файла'");
		ПараметрыЗагрузки.ИмяМакетаСШаблоном = "ЗагрузкаИзФайлаТовары";
		
	ИначеЕсли Объект.ВидСправочника = "Склады" 
		ИЛИ Объект.ВидСправочника = "СкладыКонтрагентов" Тогда
		ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка списка складов из файла'");
		ПараметрыЗагрузки.ИмяМакетаСШаблоном = "ЗагрузкаИзФайлаСклады";
		
	ИначеЕсли Объект.ВидСправочника = "ТранспортныеСредства" Тогда
		ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка списка транспортных средств из файла'");
		ПараметрыЗагрузки.ИмяМакетаСШаблоном = "ЗагрузкаИзФайлаТранспортныеСредства";	
		
	ИначеЕсли Объект.ВидСправочника = "Водители" Тогда
		ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка списка водителей из файла'");
		ПараметрыЗагрузки.ИмяМакетаСШаблоном = "ЗагрузкаИзФайлаВодители";	
	КонецЕсли;	
	
	ПараметрыЗагрузки.ДополнительныеПараметры = Новый Структура("ВидСправочника", Объект.ВидСправочника);
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьТоварыИзФайлаЗавершение", ЭтотОбъект);
    ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;		
	КонецЕсли;	
	
	Отказ = Ложь;
	
	Если Объект.ВидСправочника = "Товары" Тогда
		ПроверкаШтрихкодов(Отказ);
	КонецЕсли;
		
	Если Отказ Тогда
		Возврат;	
	КонецЕсли;	
	
	ЕстьОшибки = Ложь;
	
	ЗаписатьДанныеВБазуНаСервере(ЕстьОшибки);
	
	Если НЕ ЕстьОшибки Тогда
		ТекстОповещения = НСтр("ru = 'Запись'");
		ТекстПояснения = НСтр("ru = 'Запись данных завершена'");
		ПоказатьОповещениеПользователя(ТекстОповещения,, ТекстПояснения, БиблиотекаКартинок.Информация32);
		Закрыть();
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
&НаКлиенте
Процедура ЗагрузитьТоварыИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
    Если АдресЗагруженныхДанных = Неопределено Тогда 
        Возврат;
    КонецЕсли;
    ЗагрузитьТоварыИзФайлаНаСервере(АдресЗагруженныхДанных);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаДанныеЗагрузкиТовары", 					"Видимость", Объект.ВидСправочника = "Товары");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаДанныеЗагрузкиТранспортныеСредства", 	"Видимость", Объект.ВидСправочника = "ТранспортныеСредства");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаДанныеЗагрузкиСклады", 					"Видимость", Объект.ВидСправочника = "Склады");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаДанныеЗагрузкиСкладыКонтрагентов", 		"Видимость", Объект.ВидСправочника = "СкладыКонтрагентов");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтраницаДанныеЗагрузкиВодители", 				"Видимость", Объект.ВидСправочника = "Водители");

КонецПроцедуры 

&НаСервере
Процедура ПроверкаШтрихкодов(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДанных.Номенклатура КАК Номенклатура,
		|	ТаблицаДанных.Штрихкод КАК Штрихкод
		|ПОМЕСТИТЬ ВременнаяТаблицаДанные
		|ИЗ
		|	&ТаблицаДанных КАК ТаблицаДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаДанные.Номенклатура КАК НоменклатураТаблицы,
		|	ВременнаяТаблицаДанные.Штрихкод КАК ШтрихкодТаблицы
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
		|		ПО ШтрихкодыНоменклатуры.Штрихкод = ВременнаяТаблицаДанные.Штрихкод
		|			И НЕ ШтрихкодыНоменклатуры.Номенклатура = ВременнаяТаблицаДанные.Номенклатура";
	Запрос.УстановитьПараметр("ТаблицаДанных", Объект.ДанныеЗагрузкиТовары.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Штрихкод %1 уже используется для номенклатуры %2.'"), 
			Выборка.Штрихкод, Выборка.Номенклатура);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВБазуНаСервере(ЕстьОшибки)
	
	НачатьТранзакцию();
	
	ИмяТаблицыДанныеЗагрузки = "ДанныеЗагрузки" + Объект.ВидСправочника; 
	
	Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТаблицыДанныеЗагрузки] Цикл
		МенеджерЗаписи = РегистрыСведений.СоответствиеОбъектовСервисов.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.ИмяСервиса = Объект.Сервис;
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТабличнойЧасти);
		МенеджерЗаписи.Идентификатор = СтрокаТабличнойЧасти.ИдентификаторОбъекта;
		
		Если Объект.ВидСправочника = "Товары" Тогда			
			МенеджерЗаписи.ОбъектСоответствия = СтрокаТабличнойЧасти.Номенклатура;
			
		ИначеЕсли Объект.ВидСправочника = "ТранспортныеСредства" Тогда
			МенеджерЗаписи.ОбъектСоответствия = СтрокаТабличнойЧасти.ТранспортноеСредство;
			
		ИначеЕсли Объект.ВидСправочника = "Склады" Тогда
			МенеджерЗаписи.ОбъектСоответствия = СтрокаТабличнойЧасти.Склад;
			
		ИначеЕсли Объект.ВидСправочника = "СкладыКонтрагентов" Тогда
			МенеджерЗаписи.ОбъектСоответствия = СтрокаТабличнойЧасти.СкладКонтрагента;
			
		ИначеЕсли Объект.ВидСправочника = "Водители" Тогда
			МенеджерЗаписи.ОбъектСоответствия = СтрокаТабличнойЧасти.Водитель;
		КонецЕсли;	
		
		Попытка
			МенеджерЗаписи.Записать();			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись по причине: %1'"), 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			ЕстьОшибки = Истина;
			Возврат;	
		КонецПопытки;
	КонецЦикла;	
	
	Если Объект.ВидСправочника = "Товары" Тогда
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.ДанныеЗагрузкиТовары Цикл    
			
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Штрихкод) Тогда
				Продолжить;	
			КонецЕсли;
			
			МенеджерЗаписи = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Штрихкод 	= СтрокаТабличнойЧасти.Штрихкод;
			МенеджерЗаписи.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
			
			Попытка
				МенеджерЗаписи.Записать();			
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось завершить запись по причине: %1'"), 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
					УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
				ЕстьОшибки = Истина;
				Возврат;	
			КонецПопытки;
		КонецЦикла;	
	КонецЕсли;	
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

// СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла
&НаСервере
Процедура ЗагрузитьТоварыИзФайлаНаСервере(АдресЗагруженныхДанных)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса =
		"ВЫБРАТЬ * 
		|ПОМЕСТИТЬ ВременнаяТаблицаДанные
		|ИЗ
		|	&ТаблицаДанных КАК ТаблицаДанных";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Если Объект.ВидСправочника = "Товары" Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия, ЕСТЬNULL(СправокникНоменклатура.Ссылка, НЕОПРЕДЕЛЕНО)) КАК Номенклатура,
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия.КодТНВЭД, ЕСТЬNULL(СправокникНоменклатура.Ссылка.КодТНВЭД, НЕОПРЕДЕЛЕНО)) КАК НоменклатураКодТНВЭД,
			|	ВременнаяТаблицаДанные.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
			|	ВременнаяТаблицаДанные.НаименованиеТовараЭТТН КАК НаименованиеТовараЭТТН,
			|	ЕСТЬNULL(КлассификаторТНВЭД.Ссылка, НЕОПРЕДЕЛЕНО) КАК КодТНВЭД,
			|	ВременнаяТаблицаДанные.КодТНВЭД КАК КодТНВЭДИзФайла,
			|	ВременнаяТаблицаДанные.Штрихкод КАК Штрихкод
			|ИЗ
			|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектовСервисов КАК СоответствиеОбъектовСервисов
			|		ПО ВременнаяТаблицаДанные.ИдентификаторОбъекта = СоответствиеОбъектовСервисов.Идентификатор
			|			И (СоответствиеОбъектовСервисов.ОбъектСоответствия ССЫЛКА Справочник.Номенклатура)
			|			И (СоответствиеОбъектовСервисов.ИмяСервиса = &ИмяСервиса)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправокникНоменклатура
			|		ПО (ВременнаяТаблицаДанные.НаименованиеТовараЭТТН = (ВЫРАЗИТЬ(СправокникНоменклатура.НаименованиеПолное КАК СТРОКА(200))))
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
			|		ПО ВременнаяТаблицаДанные.КодТНВЭД = КлассификаторТНВЭД.Код";
		ТекстыЗапроса.Добавить(ТекстЗапроса);	
		
	ИначеЕсли Объект.ВидСправочника = "Склады" Тогда	
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия, ЕСТЬNULL(Склады.Ссылка, НЕОПРЕДЕЛЕНО)) КАК Склад,
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ФактичесикйАдресСклада, НЕОПРЕДЕЛЕНО) КАК ФактичесикйАдресСклада,
			|	ВременнаяТаблицаДанные.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
			|	ВременнаяТаблицаДанные.НаименованиеСкладаВИСЭТТН КАК НаименованиеСкладаВИСЭТТН,
			|	ВременнаяТаблицаДанные.АдресСкладаВИСЭТТН КАК АдресСкладаВИСЭТТН
			|ИЗ
			|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектовСервисов КАК СоответствиеОбъектовСервисов
			|		ПО ВременнаяТаблицаДанные.ИдентификаторОбъекта = СоответствиеОбъектовСервисов.Идентификатор
			|			И (СоответствиеОбъектовСервисов.ОбъектСоответствия ССЫЛКА Справочник.Склады)
			|			И (СоответствиеОбъектовСервисов.ИмяСервиса = &ИмяСервиса)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
			|		ПО (ВременнаяТаблицаДанные.НаименованиеСкладаВИСЭТТН = (ВЫРАЗИТЬ(Склады.Наименование КАК СТРОКА(200))))";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	ИначеЕсли Объект.ВидСправочника = "СкладыКонтрагентов" Тогда	
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия, ЕСТЬNULL(СкладыКонтрагентов.Ссылка, НЕОПРЕДЕЛЕНО)) КАК СкладКонтрагента,
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ФактичесикйАдресСклада, ЕСТЬNULL(СкладыКонтрагентов.Адрес, НЕОПРЕДЕЛЕНО)) КАК ФактичесикйАдресСклада,
			|	ВременнаяТаблицаДанные.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
			|	ВременнаяТаблицаДанные.НаименованиеСкладаВИСЭТТН КАК НаименованиеСкладаВИСЭТТН,
			|	ВременнаяТаблицаДанные.АдресСкладаВИСЭТТН КАК АдресСкладаВИСЭТТН
			|ИЗ
			|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектовСервисов КАК СоответствиеОбъектовСервисов
			|		ПО ВременнаяТаблицаДанные.ИдентификаторОбъекта = СоответствиеОбъектовСервисов.Идентификатор
			|			И (СоответствиеОбъектовСервисов.ОбъектСоответствия ССЫЛКА Справочник.СкладыКонтрагентов)
			|			И (СоответствиеОбъектовСервисов.ИмяСервиса = &ИмяСервиса)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладыКонтрагентов КАК СкладыКонтрагентов
			|		ПО (ВременнаяТаблицаДанные.НаименованиеСкладаВИСЭТТН = (ВЫРАЗИТЬ(СкладыКонтрагентов.Наименование КАК СТРОКА(200))))";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	ИначеЕсли Объект.ВидСправочника = "ТранспортныеСредства" Тогда	
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия, ЕСТЬNULL(ТранспортныеСредства.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ТранспортноеСредство,
			|	ВременнаяТаблицаДанные.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
			|	ВременнаяТаблицаДанные.МаркаТранспорта КАК МаркаТранспорта,
			|	ВременнаяТаблицаДанные.НомерТранспорта КАК НомерТранспорта
			|ИЗ
			|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектовСервисов КАК СоответствиеОбъектовСервисов
			|		ПО ВременнаяТаблицаДанные.ИдентификаторОбъекта = СоответствиеОбъектовСервисов.Идентификатор
			|			И (СоответствиеОбъектовСервисов.ОбъектСоответствия ССЫЛКА Справочник.ТранспортныеСредства)
			|			И (СоответствиеОбъектовСервисов.ИмяСервиса = &ИмяСервиса)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК ТранспортныеСредства
			|		ПО (ВременнаяТаблицаДанные.МаркаТранспорта = (ВЫРАЗИТЬ(ТранспортныеСредства.Наименование КАК СТРОКА(100))))";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	ИначеЕсли Объект.ВидСправочника = "Водители" Тогда	
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СоответствиеОбъектовСервисов.ОбъектСоответствия, ЕСТЬNULL(Водители.Ссылка, НЕОПРЕДЕЛЕНО)) КАК Водитель,
			|	ВременнаяТаблицаДанные.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
			|	ВременнаяТаблицаДанные.ФИОВодителя КАК ФИОВодителя,
			|	ВременнаяТаблицаДанные.ИННВодителя КАК ИННВодителя
			|ИЗ
			|	ВременнаяТаблицаДанные КАК ВременнаяТаблицаДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектовСервисов КАК СоответствиеОбъектовСервисов
			|		ПО ВременнаяТаблицаДанные.ИдентификаторОбъекта = СоответствиеОбъектовСервисов.Идентификатор
			|			И (СоответствиеОбъектовСервисов.ОбъектСоответствия ССЫЛКА Справочник.Водители)
			|			И (СоответствиеОбъектовСервисов.ИмяСервиса = &ИмяСервиса)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Водители КАК Водители
			|		ПО (ВременнаяТаблицаДанные.ФИОВодителя = (ВЫРАЗИТЬ(Водители.Наименование КАК СТРОКА(200))))";
		ТекстыЗапроса.Добавить(ТекстЗапроса);	
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("ТаблицаДанных", ЗагруженныеДанные);
	Запрос.УстановитьПараметр("ИмяСервиса", Объект.Сервис);
	
	ИмяТаблицыДанныеЗагрузки = "ДанныеЗагрузки" + Объект.ВидСправочника; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		СтрокаТабличнойЧасти = Объект[ИмяТаблицыДанныеЗагрузки].Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
		
		Если Объект.ВидСправочника = "Склады" 
			И ЗначениеЗаполнено(Выборка.Склад) Тогда
			СведенияОСкладе = БухгалтерскийУчетСервер.ПолучитьСведенияОСкладе(Выборка.Склад);
			СтрокаТабличнойЧасти.ФактичесикйАдресСклада = СведенияОСкладе.АдрФакт;
			
		ИначеЕсли Объект.ВидСправочника = "Товары" Тогда
			
			Если НЕ ЗначениеЗаполнено(Выборка.КодТНВЭД) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не найден ТНВЭД по коду %1.'"), Выборка.КодТНВЭДИзФайла);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
			ИначеЕсли ЗначениеЗаполнено(Выборка.НоменклатураКодТНВЭД)
				И НЕ Выборка.КодТНВЭД = Выборка.НоменклатураКодТНВЭД Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 ТНВЭД из файла и ТНВЭД из номенклатуры отличаются.'"), 
					СтрокаТабличнойЧасти.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);			
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла

#КонецОбласти
