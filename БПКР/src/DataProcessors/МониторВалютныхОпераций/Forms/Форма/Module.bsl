
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДатаНачала") И Параметры.Свойство("ДатаОкончания") Тогда
		ДатаНачала 		= Параметры.ДатаНачала;
		ДатаОкончания 	= Параметры.ДатаОкончания;
	Иначе
		Дата = ТекущаяДатаСеанса();		
		ДатаНачала 		= НачалоМесяца(Дата);
		ДатаОкончания 	= КонецМесяца(Дата);
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда 
		Организация = Параметры.Организация;
	Иначе                            
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ПустаяВалюта = Справочники.Валюты.ПустаяСсылка();
	СчетаНКР.Добавить(ПланыСчетов.Хозрасчетный.ДоходОтКурсовыхРазницПоОперациямВИностраннойВалюте);
	СчетаНКР.Добавить(ПланыСчетов.Хозрасчетный.УбыткиОтКурсовыхРазницПоОперациямВИностраннойВалюте);
	СчетаОКР.Добавить(ПланыСчетов.Хозрасчетный.ДоходыОтОперационныхКурсовыхРазниц);
	СчетаОКР.Добавить(ПланыСчетов.Хозрасчетный.УбыткиОтОперационныхКурсовыхРазниц);
	
	ВидСубконтоБанкКассы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеСредства;
	
	//ВидСубконто = Новый Массив;
	//ВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	//ВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Местонахождение);
	//
	//ВидСубконтоКонтрагенты = ВидСубконто;
	//ВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ВидСубконтоСотрудники = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СотрудникиОрганизаций;
	
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДанные();
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ДатаОкончания = КонецМесяца(ДатаНачала);
	ОбновитьДанные();
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ДатаНачала = НачалоМесяца(ДатаОкончания);
	ОбновитьДанные();
	
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыОбработкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОбновитьДанные();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	УстановитьПараметрыДинамическихСписков();
	ОбновитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура Расшифровка(Команда)
	Элементы.ТаблицаОКРРасшифровка.Пометка = Не Элементы.ТаблицаОКРРасшифровка.Пометка;
	ПроверитьРасшифровкуПоОКР();
КонецПроцедуры

&НаКлиенте
Процедура КурсыВалют(Команда)
	ТекущаяСтрока = Элементы.СписокОСВ.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Валюта = ТекущаяСтрока.Валюта;
		ЗначениеОтбора = Новый Структура("Валюта", Валюта);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		ОткрытьФорму("РегистрСведений.КурсыВалют.ФормаСписка", ПараметрыФормы);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОКРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СсылкаДокумента = Элементы.ТаблицаОКР.ТекущиеДанные.Регистратор;
	НазваниеДокумента = ПолучитьНазваниеДокумента(СсылкаДокумента);
	ПараметрыФормы 	= Новый Структура("Ключ", СсылкаДокумента);
	ОткрытьФорму("Документ." + НазваниеДокумента + ".ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНКРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СсылкаДокумента = Элементы.ДокументыНКР.ТекущиеДанные.Регистратор;
	НазваниеДокумента = ПолучитьНазваниеДокумента(СсылкаДокумента);
	ПараметрыФормы 	= Новый Структура("Ключ", СсылкаДокумента);
	ОткрытьФорму("Документ." + НазваниеДокумента + ".ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()

	Элементы.РасшифровкаПоОКР.Видимость = Элементы.ТаблицаОКРРасшифровка.Пометка;	

КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()

// Процедура установки значений параметров динамических списков.
//
// Параметры:
//	ИзменилосьОС - Булево - проверка изменения значения реквизита "ОсновноеСредство".
//
&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()

	//ТекущаяСтрокаОСВ = Элементы.СписокОСВ.ТекущиеДанные;
	// СписокОСВ
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ДатаНачала);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("КонецПериода", КонецДня(ДатаОкончания));
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("ПустаяВалюта", ПустаяВалюта);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("СчетаНКР", СчетаНКР);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("СчетаОКР", СчетаОКР);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("ДенежныеСредства", ВидСубконтоБанкКассы);
	ВидСубконтоКонтрагенты = Новый Массив;
	ВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("Контрагенты", ВидСубконтоКонтрагенты);
	СписокОСВ.Параметры.УстановитьЗначениеПараметра("Сотрудники", ВидСубконтоСотрудники);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицуНКР()
	
	СводнаяТаблицаПереоценки = ПолучитьСводнуюТаблицуПереоценки();
	
	ТаблицаНКР.Загрузить(СводнаяТаблицаПереоценки);
	Переоценка = 0; 

	Для Каждого СтрокаТабличнойЧасти Из ТаблицаНКР Цикл
		
		Если СтрокаТабличнойЧасти.ВалютнаяСуммаНачальныйОстаток = Null Тогда 
			СтрокаТабличнойЧасти.ВалютнаяСуммаНачальныйОстаток = 0;
		КонецЕсли;			
		Если СтрокаТабличнойЧасти.ВалютнаяСуммаКонечныйОстаток = Null Тогда 
			СтрокаТабличнойЧасти.ВалютнаяСуммаКонечныйОстаток = 0;
		КонецЕсли;			
		
		СтрокаТабличнойЧасти.КурсНБ 	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ДатаОкончания).Курс;
		СтрокаТабличнойЧасти.СальдоНБ	= Окр(СтрокаТабличнойЧасти.ВалютнаяСуммаКонечныйОстаток * СтрокаТабличнойЧасти.КурсНБ, 2);
		
		СтрокаТабличнойЧасти.Регистратор = "Закрытие месяца от " + Формат(ДатаОкончания, "ДЛФ=D");
		
		СтрокаТабличнойЧасти.Комментарий = "" + СтрокаТабличнойЧасти.Счет + "-" + Валюта + "-" + Субконто1 + ?(ЗначениеЗаполнено(Договор), "-" + Договор, "");
		
		Если СтрокаТабличнойЧасти.Содержание <> "Закрытие парных счетов" Тогда
			Переоценка = Переоценка + ?(СтрокаТабличнойЧасти.Результат = "Убытки", -СтрокаТабличнойЧасти.Переоценка, СтрокаТабличнойЧасти.Переоценка);		
		ИначеЕсли СтрокаТабличнойЧасти.Содержание = "Закрытие парных счетов" Тогда
			СтрокаТабличнойЧасти.Переоценка = Переоценка;	
		КонецЕсли;
		
	КонецЦикла;
	

КонецПроцедуры // СформироватьТаблицуНКР()

&НаСервере
Процедура СформироватьДокументыНКР(Субконто1, Субконто2)
	
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
		               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		               |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
		               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
		               |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт,
		               |	ХозрасчетныйОстаткиИОбороты.Регистратор.Курс КАК Курс,
		               |	ХозрасчетныйОстаткиИОбороты.СуммаОборот КАК СуммаОборот,
		               |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборот КАК ВалютнаяСуммаОборот,
		               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		               |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
		               |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК ВалютнаяСуммаКонечныйОстаток
		               |ИЗ
		               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Движения,
		               |			,
		               |			,
		               |			Организация = &Организация
		               |				И Субконто1 = &Субконто1
		               |				И Субконто2 = &Субконто2) КАК ХозрасчетныйОстаткиИОбороты
		               |ГДЕ
		               |	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ЗакрытиеМесяца";
		
		Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Субконто1", Субконто1);
		Если ЗначениеЗаполнено(Субконто2) Тогда
			Запрос.УстановитьПараметр("Субконто2", Субконто2);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто2 = &Субконто2", "");
		КонецЕсли;	
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		ДокументыНКР.Загрузить(Результат);
		
		
	
	

КонецПроцедуры // СформироватьДокументыНКР()

&НаСервере
Функция ПолучитьСводнуюТаблицуПереоценки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
	|	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК ВалютнаяСуммаКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.Период КАК Дата,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК Переоценка,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходОтКурсовыхРазницПоОперациямВИностраннойВалюте)
	|			ТОГДА ""Доход""
	|		ИНАЧЕ ""Убытки""
	|	КОНЕЦ КАК Результат,
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	|	&Содержание КАК Содержание
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Месяц, , Счет = &Счет, , Субконто1 = &Субконто1) КАК ХозрасчетныйОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериодаНКР,
	|				Авто,
	|				,
	|				,
	|				,
	|				,
	|				СубконтоКт1 = &Субконто1
	|					ИЛИ СубконтоДт1 = &Субконто1) КАК ХозрасчетныйОборотыДтКт
	|		ПО (ХозрасчетныйОстаткиИОбороты.Счет = ХозрасчетныйОборотыДтКт.СчетДт
	|				ИЛИ ХозрасчетныйОстаткиИОбороты.Счет = ХозрасчетныйОборотыДтКт.СчетКт)
	|ГДЕ
	|	(ХозрасчетныйОборотыДтКт.СчетДт В (&СчетаНКР)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В (&СчетаНКР))";
	
	Если ТипЗнч(Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто1 = &Субконто1", "Субконто1 = &Субконто1 И Субконто2 = &Договор");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СубконтоКт1 = &Субконто1", "СубконтоКт1 = &Субконто1 И СубконтоКт2 = &Договор");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СубконтоДт1 = &Субконто1", "СубконтоДт1 = &Субконто1 И СубконтоДт2 = &Договор");
	ИначеЕсли ТипЗнч(Субконто1) = Тип("СправочникСсылка.ФизическиеЛица") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто1 = &Субконто1", "Субконто1 = &Субконто1 И Валюта = &Валюта");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СубконтоКт1 = &Субконто1", "СубконтоКт1 = &Субконто1 И (ВалютаКт = &Валюта ИЛИ ВалютаДт = &Валюта)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СубконтоДт1 = &Субконто1", "СубконтоДт1 = &Субконто1 И (ВалютаКт = &Валюта ИЛИ ВалютаДт = &Валюта)");
	КонецЕсли;		
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Если ЗначениеЗаполнено(ДокументЗакрытиеМесяца) Тогда
		Запрос.УстановитьПараметр("КонецПериода", Новый Граница(ДокументЗакрытиеМесяца.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаОкончания));
	КонецЕсли;	
	Запрос.УстановитьПараметр("КонецПериодаНКР",КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("ПарныйСчет", Счет.ПарныйСчет);
	Запрос.УстановитьПараметр("Субконто1", Субконто1);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("СчетаНКР", СчетаНКР);
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Курсовая разница'"));
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗначений;

КонецФункции // ПолучитьСводнуюТаблицуНКР()

&НаСервере
Процедура СформироватьТаблицуОКР()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйДвиженияССубконто.Период КАК Дата,
	|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Организация = &Организация
	|					И Субконто1 = &Субконто1
	|					И (СчетДт В (&СчетаОКР)
	|				ИЛИ СчетКт В (&СчетаОКР)),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|ГДЕ
	|	НЕ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ЗакрытиеМесяца";
	
	Если ТипЗнч(Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Субконто1", "&Субконто1 И Субконто2 = &Договор");
	ИначеЕсли ТипЗнч(Субконто1) = Тип("СправочникСсылка.ФизическиеЛица") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Субконто1", "&Субконто1 И Валюта = &Валюта");
	КонецЕсли;		
	
	Запрос.УстановитьПараметр("Валюта", 		Валюта);
	Запрос.УстановитьПараметр("НачалоПериода", 	ДатаНачала);	
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Счет", 			Счет);
	Запрос.УстановитьПараметр("Субконто1", 		Субконто1);
	Запрос.УстановитьПараметр("Договор", 		Договор);
	Запрос.УстановитьПараметр("СчетаОКР", 		СчетаОКР);
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	ТаблицаОКР.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры // СформироватьТаблицуОКР()

&НаКлиенте
Процедура ПроверитьРасшифровкуПоОКР()

	ТекущаяСтрока = Элементы.ТаблицаОКР.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если Элементы.ТаблицаОКРРасшифровка.Пометка Тогда
			СформироватьТаблицуРасшифровкаПоОКР(ТекущаяСтрока.Регистратор);
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимостьДоступностьЭлементов();

КонецПроцедуры // ПоказатьРасшифровкуПоОКР()

&НаСервере
Процедура СформироватьТаблицуРасшифровкаПоОКР(Регистратор)
	
	РасшифровкаПоОКР.Очистить();	
	Регистр = РегистрыБухгалтерии.Хозрасчетный;
	
	ДвиженияБУ = Регистр.ВыбратьПоРегистратору(Регистратор);
	Пока ДвиженияБУ.Следующий() Цикл
		СтрокаТаблицы = РасшифровкаПоОКР.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДвиженияБУ);
		
		НомерСубконто = 0;
		Для каждого Субконто Из ДвиженияБУ.СубконтоДт Цикл
			СтрокаТаблицы["СубконтоДт" + (НомерСубконто + 1)] = Субконто.Значение;
		КонецЦикла;
		
		НомерСубконто = 0;
		Для каждого Субконто Из ДвиженияБУ.СубконтоКт Цикл
			СтрокаТаблицы["СубконтоКт" + (НомерСубконто + 1)] = Субконто.Значение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицуРасшифровкаПоОКР()

&НаСервере
Процедура УстановитьДокументЗакрытияМесяца()

	ДокументЗакрытиеМесяца = Документы.ЗакрытиеМесяца.ПустаяСсылка();
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗакрытиеМесяца) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЗакрытиеМесяца.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ЗакрытиеМесяца КАК ЗакрытиеМесяца
			|ГДЕ
			|	НЕ ЗакрытиеМесяца.ПометкаУдаления
			|	И КОНЕЦПЕРИОДА(ЗакрытиеМесяца.Дата, МЕСЯЦ) = &ДатаОкончания
			|	И ЗакрытиеМесяца.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);		
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ДокументЗакрытиеМесяца = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПолучитьДокументЗакрытияМесяца()

&НаКлиенте
Процедура ОбновитьДанные()
	
	УстановитьДокументЗакрытияМесяца();
	
	ТекущаяСтрока = Элементы.СписокОСВ.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Субконто1 = ТекущаяСтрока.Субконто1;
		Субконто2 = ТекущаяСтрока.Субконто2;
		Счет = ТекущаяСтрока.Счет;
		Валюта = ТекущаяСтрока.Валюта;
		Если ТипЗнч(ТекущаяСтрока.Субконто2) = ТипЗнч(ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка")) Тогда 
			Договор	= ТекущаяСтрока.Субконто2; 
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.СтраницыОбработки.ТекущаяСтраница = Элементы.СтраницыОбработки.ПодчиненныеЭлементы.СтраницаНКР Тогда
		СформироватьТаблицуНКР();
		СформироватьДокументыНКР(Субконто1, Субконто2);
		Элементы.ДокументыНКРСуммаОборот.ТекстПодвала = ДокументыНКР.Итог("СуммаОборот");
		Элементы.ДокументыНКРВалютнаяСуммаОборот.ТекстПодвала = ДокументыНКР.Итог("ВалютнаяСуммаОборот");
	ИначеЕсли Элементы.СтраницыОбработки.ТекущаяСтраница = Элементы.СтраницыОбработки.ПодчиненныеЭлементы.СтраницаОКР Тогда
		СформироватьТаблицуОКР();
		ПроверитьРасшифровкуПоОКР();
	КонецЕсли;
	
	
	//Элементы.СтраницаНКР.Заголовок = "НКР – переоценка " + ?(ТаблицаНКР.Количество() <> 0, "(" + ТаблицаНКР.Количество() + ")", "");
	//Элементы.СтраницаОКР.Заголовок = "ОКР – переоценка " + ?(ТаблицаОКР.Количество() <> 0, "(" + ТаблицаОКР.Количество() + ")", "");
	


КонецПроцедуры // ОбновитьДанные()

// Функция получения ссылок документов.
//
// Параметры:
//	Ссылка - ДокументСсылка - ссылка на выбранный документ.
//
// Возвращаемое значение:
//	Имя - Строка - название документа.
//
&НаСервере
Функция ПолучитьНазваниеДокумента(Ссылка)
	
	Возврат Ссылка.Метаданные().Имя

КонецФункции

&НаКлиенте
Процедура ТаблицаОКРПриАктивизацииСтроки(Элемент)
	ПроверитьРасшифровкуПоОКР();
КонецПроцедуры

#КонецОбласти