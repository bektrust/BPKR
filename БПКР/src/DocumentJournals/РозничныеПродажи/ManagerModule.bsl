
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ИмяВидимогоБаннера_РозничнаяТорговля() Экспорт
	
	ИмяБаннера = "";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьФискальныйРегистратор") Тогда
		ТипыКассовойТехники = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
		СписокДоступныхУстройств = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам(ТипыКассовойТехники);
		Если Не ЗначениеЗаполнено(СписокДоступныхУстройств) Тогда
			ИмяБаннера = "БаннерКассаНеПодключена_РозничнаяТорговля";
		Иначе
			Для Каждого Устройство Из СписокДоступныхУстройств Цикл
				ОписаниеПоследнейСмены = КассовыеСменыВызовСервера.ОписаниеПоследнейКассовойСмены(Устройство.Ссылка);
				Если ОписаниеПоследнейСмены <> Неопределено И ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта
					И ОписаниеПоследнейСмены.ДатаИстеченияСрокаДействия < ТекущаяДатаСеанса() Тогда
					ИмяБаннера = "БаннерЗакрытьСмену_РозничнаяТорговля";
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ИмяБаннера) И ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПоПлатежнымКартам") Тогда
		ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Если Не Справочники.ВидыОплатОрганизаций.ПроверитьЗаполненностьВидовОплат(
			ОсновнаяОрганизация, Перечисления.ТипыОплат.ПлатежнаяКарта) Тогда
			ИмяБаннера = "БаннерНастроитьВидыОплат_РозничнаяТорговля";
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыРозничныхПродажСуществуют = КассовыеСменыВызовСервераБП.ПараметрыРозничныхПродажСуществуют(Неопределено, Неопределено); 
	Если Не ПараметрыРозничныхПродажСуществуют Тогда
		ИмяБаннера = "БаннерПараметрыРозничныхПродаж";	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ИмяБаннера;
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварныйЧек";
	КомандаПечати.Представление = НСтр("ru = 'Товарный чек'");
	КомандаПечати.МенеджерПечати = "Документ.РозничнаяПродажа";
	КомандаПечати.ТипыОбъектовПечати = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		Тип("ДокументСсылка.РозничнаяПродажа"));
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетККМ";
	КомандаПечати.Представление = НСтр("ru = 'Справка-отчет кассира (КМ-6)'");
	КомандаПечати.МенеджерПечати = "Документ.ОтчетОРозничныхПродажах";
	КомандаПечати.ТипыОбъектовПечати = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов розничной торговли'");
		КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		// Реестр документов выводим в списке последним
		КомандаПечати.Порядок = 100;
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыПодменюУправленияКассовойСменой() Экспорт
	
	Параметры = НовыеПараметрыПодменюУправленияКассовойСменой();
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьФискальныйРегистратор") Тогда
		Параметры.ДоступныеКоманды = ДоступныеКомандыПодменюУправленияКассовойСменой(Неопределено);
		Параметры.КартинкаСостоянияСмены
			= КассовыеСменыВызовСервераБП.ПиктограммаСостоянияКассовойСмены(Истина);
		Возврат Параметры;
	КонецЕсли;
	
	СменаОткрыта = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ТипыОборудования = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
	СписокДоступныхУстройств = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам(ТипыОборудования);
	Для Каждого Устройство Из СписокДоступныхУстройств Цикл
		ОписаниеПоследнейСмены = КассовыеСменыВызовСервера.ОписаниеПоследнейКассовойСмены(Устройство.Ссылка);
		Если ОписаниеПоследнейСмены <> Неопределено
			И ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
			СменаОткрыта = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДоступныеКоманды = ДоступныеКомандыПодменюУправленияКассовойСменой(СменаОткрыта);
	Параметры.КартинкаСостоянияСмены
		= КассовыеСменыВызовСервераБП.ПиктограммаСостоянияКассовойСмены(СменаОткрыта);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Параметры;
	
КонецФункции

Функция НовыеПараметрыПодменюУправленияКассовойСменой()
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДоступныеКоманды");
	Параметры.Вставить("КартинкаСостоянияСмены");
	Возврат Параметры;
	
КонецФункции

Функция ДоступныеКомандыПодменюУправленияКассовойСменой(СменаОткрыта)
	
	ИменаДоступныхКоманд = Новый Массив;
	Если СменаОткрыта = Истина Тогда
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОтчетОТекущемСостоянииРасчетов");
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОтчетБезГашения");
		ИменаДоступныхКоманд.Добавить("КассоваяСменаЗакрыть");
		ИменаДоступныхКоманд.Добавить("ДенежныеОперации");
	ИначеЕсли СменаОткрыта = Ложь Тогда
		ИменаДоступныхКоманд.Добавить("КассоваяСменаОткрыть");
	ИначеЕсли СменаОткрыта = Неопределено Тогда
		// Не используется подключаемое оборудование
		ИменаДоступныхКоманд.Добавить("КассоваяСменаЗакрыть");
	КонецЕсли;
	Возврат ИменаДоступныхКоманд;
	
КонецФункции

#КонецЕсли








