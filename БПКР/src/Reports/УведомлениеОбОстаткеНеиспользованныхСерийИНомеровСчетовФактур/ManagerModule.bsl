#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина);
	
	НастройкиВарианта = МодульВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Уведомление об остатке неиспользованных серий и номеров счетов фактур.'");

	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'ИНН
		|Наименование облагаемого субъекта
		|Код и наименование налогового органа
		|Почтовый индекс
		|Область, город, район, село
		|Ул./микр, № дома, офиса, квартиры 
		|Контактные телефоны
		|Адрес электронной почты'");
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'КонецПериода
		|Организация'");
	НастройкиВарианта.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Уведомление об остатке неиспользованных серий и номеров счетов фактур'");
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирования отчета.
//
// Параметры:
//   ПараметрыОтчета - структура - набор параметров, необходимых для построения отчета.
// 	АдресХранилища - адрес временного хранилища.
Процедура Сформировать(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатФормирования = Новый Структура("Результат, ОписаниеОшибки", Неопределено, "");
	СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования);
	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

// Процедура - Сформировать табличный документ
//
// Параметры:
//  СтруктураПараметров	 - Структура - Параметры формирования отчета.
//  РезультатФормирования	 	- Структура - 
//
Процедура СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "УведомлениеОбОстаткеНеиспользованныхСерийИНомеровСчетовФактур_ОтчетОбОстаткеНеиспользованныхСерийИНомеровСчетовФактур";
	
	Макет = ПолучитьМакет("ПФ_MXL_ОтчетОбОстаткеНеиспользованныхСерийИНомеровСчетовФактур");
	ОбластьМакета	= Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета);	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Остаток серий
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БланкиСчетовФактурОстатки.СерияБланкаСФ КАК Серия,
	|	МИНИМУМ(БланкиСчетовФактурОстатки.НомерБланкаСФ) КАК НомерБланкаНачало,
	|	МАКСИМУМ(БланкиСчетовФактурОстатки.НомерБланкаСФ) КАК НомерБланкаКонец,
	|	СУММА(БланкиСчетовФактурОстатки.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.БланкиСчетовФактур.Остатки(&Период, Организация = &Организация) КАК БланкиСчетовФактурОстатки
	|ГДЕ
	|	БланкиСчетовФактурОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	БланкиСчетовФактурОстатки.СерияБланкаСФ";
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.КонецПериода);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьДетали	= Макет.ПолучитьОбласть("Детали");
	ВыборкаСерия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСерия.Следующий() Цикл
		ОбластьДетали.Параметры.Заполнить(ВыборкаСерия);
		ТабличныйДокумент.Вывести(ОбластьДетали);
	КонецЦикла;
	
	// Пустые строки, если меньше 3ех
	Если ВыборкаСерия.Количество() < 3 Тогда
		ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
		Для Сч = 1 По 3 - ВыборкаСерия.Количество() Цикл
			ТабличныйДокумент.Вывести(ОбластьПустаяСтрока);
		КонецЦикла;
	КонецЕсли;

	ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
	ДанныеПечати = Новый Структура();	
	СтруктураРуководство = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	Если НЕ СтруктураРуководство.Свойство("Руководитель") = Неопределено Тогда
		ДанныеПечати.Вставить("Руководитель", СтруктураРуководство.Руководитель);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры,ДанныеПечати);	

	ТабличныйДокумент.Вывести(ОбластьПодвал);			
	РезультатФормирования.Результат = ТабличныйДокумент;
	
КонецПроцедуры

// Процедура - Заполнить шапку отчета
//
// Параметры:
//  НачалоПериода	 - 	 - 
//  КонецПериода	 - 	 - 
//  Организация		 - 	 - 
//  ОбластьШапка	 - 	 - 
//
Процедура ЗаполнитьШапкуОтчета(СтруктураПараметров, ОбластьМакета)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры,СведенияОбОрганизации);
		
	ДанныеПечати = Новый Структура();
	
	ИНН = СведенияОбОрганизации.ИНН;
	Если ЗначениеЗаполнено(ИНН) Тогда 
		ДанныеПечати.Вставить("ИНН1", Сред(ИНН,1,1));	
		ДанныеПечати.Вставить("ИНН2", Сред(ИНН,2,1));
		ДанныеПечати.Вставить("ИНН3", Сред(ИНН,3,1));
		ДанныеПечати.Вставить("ИНН4", Сред(ИНН,4,1));
		ДанныеПечати.Вставить("ИНН5", Сред(ИНН,5,1));
		ДанныеПечати.Вставить("ИНН6", Сред(ИНН,6,1));
		ДанныеПечати.Вставить("ИНН7", Сред(ИНН,7,1));
		ДанныеПечати.Вставить("ИНН8", Сред(ИНН,8,1));
		ДанныеПечати.Вставить("ИНН9", Сред(ИНН,9,1));
		ДанныеПечати.Вставить("ИНН10", Сред(ИНН,10,1));
		ДанныеПечати.Вставить("ИНН11", Сред(ИНН,11,1));
		ДанныеПечати.Вставить("ИНН12", Сред(ИНН,12,1));
		ДанныеПечати.Вставить("ИНН13", Сред(ИНН,13,1));
		ДанныеПечати.Вставить("ИНН14", Сред(ИНН,14,1));
	КонецЕсли;
	ГНСКод = СведенияОбОрганизации.ГНСКод;
	Если ЗначениеЗаполнено(ГНСКод) Тогда 
		ДанныеПечати.Вставить("КОД1", Сред(ГНСКод, 1, 1));
		ДанныеПечати.Вставить("КОД2", Сред(ГНСКод, 2, 1));
		ДанныеПечати.Вставить("КОД3", Сред(ГНСКод, 3, 1));		
	КонецЕсли;
	
	//ДатаК = КонецМесяца(ДобавитьМесяц(СтруктураПараметров.КонецПериода,-1));
	ДатаК = СтруктураПараметров.КонецПериода;	
	ДанныеПечати.Вставить("ДК1", Сред(ДатаК,1,1));
	ДанныеПечати.Вставить("ДК2", Сред(ДатаК,2,1));
	ДанныеПечати.Вставить("ДК3", Сред(ДатаК,4,1));
	ДанныеПечати.Вставить("ДК4", Сред(ДатаК,5,1));
	ДанныеПечати.Вставить("ДК5", Сред(ДатаК,7,1));
	ДанныеПечати.Вставить("ДК6", Сред(ДатаК,8,1));
	ДанныеПечати.Вставить("ДК7", Сред(ДатаК,9,1));
	ДанныеПечати.Вставить("ДК8", Сред(ДатаК,10,1));
	
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
	ДанныеПечати.Вставить("Адрес", АдресОрганизации);	
	
	ДанныеПечати.Вставить("АдресЭлектроннойПочты", СведенияОбОрганизации.Email);     
	ДанныеПечати.Вставить("Телефон", СведенияОбОрганизации.Тел);
	ДанныеПечати.Вставить("Область", СведенияОбОрганизации.Регион);
	ДанныеПечати.Вставить("НаименованиеНалоговой", СведенияОбОрганизации.ГНСНаименование);
	ДанныеПечати.Вставить("НаименованиеОрганизации", СведенияОбОрганизации.Наименование);
				
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры,ДанныеПечати);	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
