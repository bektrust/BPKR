#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	СписокСформированныхЛистов = Новый СписокЗначений;
	СформироватьЛистыЖурналаБанковскихДокументов(ПараметрыОтчета, СписокСформированныхЛистов);
	
	ПоместитьВоВременноеХранилище(СписокСформированныхЛистов, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьЛистыЖурналаБанковскихДокументов(ПараметрыОтчета, СписокСформированныхЛистов)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.КлючПараметровПечати = "ЖурналБанковскихДокументов_ЖурналБанковскихДокументов";
	
	Макет = ПолучитьМакет("ЖурналБанковскихДокументов");
	
	ОбластьЗаголовокОтчет 				= Макет.ПолучитьОбласть("Заголовок|Отчет");
	ОбластьШапкаОтчет 					= Макет.ПолучитьОбласть("Шапка|Отчет");
	ОбластьОстатокНаНДОтчет 			= Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
	ОбластьСтрокаОтчет 					= Макет.ПолучитьОбласть("Строка|Отчет");
	ОбластьОборотОтчет 					= Макет.ПолучитьОбласть("Оборот|Отчет");
	ОбластьКонечныйОстатокОтчет 		= Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");
	ОбластьПодвалОтчет 					= Макет.ПолучитьОбласть("Подвал|Отчет");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ТиповойОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ДатаНач,
		|			Счет В ИЕРАРХИИ (&СчетаБанковскогоСчета),
		|			&ВидСубконтоБанковскийСчет,
		|			Организация = &Организация
		|				И Субконто1 = &БанковскийСчет
		|				И (НЕ &ВВалюте
		|					ИЛИ Валюта = &Валюта)) КАК ТиповойОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ДатаНач КАК Период,
		|	ТиповойОбороты.Регистратор КАК Документ,
		|	ТиповойОбороты.Регистратор.Дата КАК ДатаДокумента,
		|	ТиповойОбороты.Регистратор.Номер КАК НомерДокумента,
		|	ПРЕДСТАВЛЕНИЕ(ТиповойОбороты.Регистратор) КАК ПредставлениеДокумента,
		|	ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) КАК Приход,
		|	ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) КАК Расход,
		|	ВЫБОР
		|		КОГДА ТиповойОбороты.Регистратор.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ТиповойОбороты.Регистратор.Контрагент.НаименованиеПолное <> """"
		|						ТОГДА ТиповойОбороты.Регистратор.Контрагент.НаименованиеПолное
		|					ИНАЧЕ ТиповойОбороты.Регистратор.Контрагент.Наименование
		|				КОНЕЦ
		|		КОГДА ТиповойОбороты.Регистратор.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|			ТОГДА ТиповойОбороты.Регистратор.ФизЛицо.Наименование
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Контрагент,
		|	ТиповойОбороты.Регистратор.Комментарий КАК Комментарий,
		|	ПРЕДСТАВЛЕНИЕ(ТиповойОбороты.КорСчет) КАК ПредставлениеСчета,
		|	ВЫБОР
		|		КОГДА ТиповойОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Регистратор ССЫЛКА Документ.ОплатаПлатежнойКартой
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК ИндексСортировкиВида,
		|	ТиповойОбороты.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетаБанковскогоСчета),
		|			&ВидСубконтоБанковскийСчет,
		|			Организация = &Организация
		|				И Субконто1 = &БанковскийСчет
		|				И (НЕ &ВВалюте
		|					ИЛИ Валюта = &Валюта),
		|			,
		|			) КАК ТиповойОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТиповойОбороты.Регистратор.Дата
		|ИТОГИ
		|	СУММА(Приход),
		|	СУММА(Расход)
		|ПО
		|	Период,
		|	Документ";
		
	БанковскийСчет  = ПараметрыОтчета.БанковскийСчет;
	Организация 	= ПараметрыОтчета.Организация;
		
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ВалютаДенежныхСредств          = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "ВалютаДенежныхСредств");
		
	СписокСчетовБанковскогоСчета = Новый СписокЗначений();
	СписокСчетовБанковскогоСчета.Добавить(ПланыСчетов.Хозрасчетный.ДенежныеСредстваВБанке);
	ОтчетВВалюте = НЕ ВалютаДенежныхСредств.Пустая() И НЕ ВалютаДенежныхСредств = ВалютаРегламентированногоУчета;
	ИмяРесурса   = ?(ОтчетВВалюте, ".ВалютнаяСумма", ".Сумма");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ".Сумма", ИмяРесурса);
	
	БлокСортировки = "УПОРЯДОЧИТЬ ПО НАЧАЛОПЕРИОДА(ТиповойОбороты.Регистратор.Дата, ДЕНЬ), ДатаДокумента" + 
					?(ПараметрыОтчета.СортироватьПоВиду  , ", ИндексСортировкиВида", "") + 
					?(ПараметрыОтчета.СортироватьПоНомеру, ", ТиповойОбороты.Регистратор.Номер", "");
					
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО ТиповойОбороты.Регистратор.Дата", БлокСортировки); 
	
	Запрос.УстановитьПараметр("Валюта"           			, ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("ВВалюте"          			, ОтчетВВалюте);
	Запрос.УстановитьПараметр("Дата"             			, ПараметрыОтчета.НачалоПериода - 86400);
	Запрос.УстановитьПараметр("ДатаКон"          			, КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("ДатаНач"          			, ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("БанковскийСчет"   			, БанковскийСчет);
	Запрос.УстановитьПараметр("Организация"      			, Организация);
	Запрос.УстановитьПараметр("СчетаБанковскогоСчета"       , СписокСчетовБанковскогоСчета);
	Запрос.УстановитьПараметр("ВидСубконтоБанковскийСчет" 	, ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеСредства);

	Результат = Запрос.ВыполнитьПакет();
	
	НомерЛиста = 0;
	
	// Определим начальный остаток по кассе
	ТекущийОстаток = 0;
	Если НЕ Результат[0].Пустой() Тогда
		ВыборкаПоОстаткам = Результат[0].Выбрать();
		ВыборкаПоОстаткам.Следующий();
		ТекущийОстаток = ВыборкаПоОстаткам.СуммаОстаток;
	КонецЕсли;	

    // Формирование листов отчета
	Если Результат[1].Пустой() Тогда
		// Выводим только шапку таблицы
		ДатаЛиста = ПараметрыОтчета.НачалоПериода;
		ВывестиШапкуОтчета(ДокументРезультат, ДатаЛиста, ТекущийОстаток, ОбластьЗаголовокОтчет, ОбластьШапкаОтчет, ОбластьОстатокНаНДОтчет, ПараметрыОтчета);
		ВывестиПодвалОтчета(ДокументРезультат,ТекущийОстаток, ДатаЛиста, 0, 0,
							ОбластьОборотОтчет, ОбластьКонечныйОстатокОтчет, ОбластьПодвалОтчет, ПараметрыОтчета)

	Иначе
		// Были движения за период
		ВыборкаПериоды = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПериоды.Следующий() Цикл
			Если ВыборкаПериоды.Приход = 0 И ВыборкаПериоды.Расход = 0 Тогда
				Продолжить;
			КонецЕсли;
			ДатаЛиста = ВыборкаПериоды.Период;
			КоличествоРасходныхДокументов = 0;				
			КоличествоПриходныхДокументов = 0;
			
			// Вывод Шапки листа
			ВывестиШапкуОтчета(ДокументРезультат, ДатаЛиста, ТекущийОстаток, ОбластьЗаголовокОтчет, ОбластьШапкаОтчет, ОбластьОстатокНаНДОтчет, ПараметрыОтчета);	
						
			// По документам
			ВыборкаДокументы = ВыборкаПериоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			КоличествоСтрок = ВыборкаДокументы.Количество();
			НомерСтроки = 0;
			Пока ВыборкаДокументы.Следующий() Цикл
				Если ВыборкаДокументы.Приход = 0 И ВыборкаДокументы.Расход = 0 Тогда
					Продолжить;
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;
				
				// Проверим вывод
				МассивСтрок = Новый Массив;
				МассивСтрок.Добавить(ОбластьСтрокаОтчет);
				// Если строка последняя, то нужно проверить не только его помещение на листе,
				// но и сроки по оборотам, остатку и подвалу
				Если НомерСтроки = КоличествоСтрок Тогда	
					МассивСтрок.Добавить(ОбластьОборотОтчет);
					МассивСтрок.Добавить(ОбластьКонечныйОстатокОтчет);
					МассивСтрок.Добавить(ОбластьПодвалОтчет);
				КонецЕсли;
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, МассивСтрок) Тогда					
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ОбластьШапкаОтчет);
				КонецЕсли;
				
				
				ОбластьСтрокаОтчет.Параметры.Заполнить(ВыборкаДокументы);
				
				НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СокрЛП(ВыборкаДокументы.НомерДокумента));
				
				ПредставлениеДокумента = СокрЛП(ВыборкаДокументы.Документ.Метаданные().Синоним) + " № " + НомерДокумента + НСтр("ru = ' от '") + Формат(ВыборкаДокументы.ДатаДокумента, "ДФ=дд.ММ.гг")
									+ ?(ПараметрыОтчета.ВыводитьКомментарииИзДокумента И ЗначениеЗаполнено(ВыборкаДокументы.Комментарий), " (" + СокрЛП(ВыборкаДокументы.Комментарий) + ")", "" );			
				ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = ПредставлениеДокумента;
				
				ОбластьСтрокаОтчет.Параметры.Контрагент = СокрЛП(ВыборкаДокументы.Контрагент);
				
				// По счетам
				ВыборкаСчета = ВыборкаДокументы.Выбрать();				
				Пока ВыборкаСчета.Следующий() Цикл
					ОбластьСтрокаОтчет.Параметры.КоррСчет = СокрЛП(ВыборкаСчета.ПредставлениеСчета);
					ОбластьСтрокаОтчет.Параметры.Приход = ВыборкаСчета.Приход;
					ОбластьСтрокаОтчет.Параметры.Расход = ВыборкаСчета.Расход;
					ДокументРезультат.Вывести(ОбластьСтрокаОтчет);
				КонецЦикла;				
				
				Если ВыборкаДокументы.Расход <> 0 Тогда
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;				
				Иначе				
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
				КонецЕсли;
			КонецЦикла;// Выборка периодов
			
			// итоги за день - Обороты
			ОбластьОборотОтчет.Параметры.Заполнить(ВыборкаПериоды);
			
			// итоги за день - Остаток
			ТекущийОстаток = ТекущийОстаток + ВыборкаПериоды.Приход - ВыборкаПериоды.Расход;		
			ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = ТекущийОстаток;		
				
			ВывестиПодвалОтчета(ДокументРезультат,ТекущийОстаток, ДатаЛиста, КоличествоПриходныхДокументов, КоличествоРасходныхДокументов,
							ОбластьОборотОтчет, ОбластьКонечныйОстатокОтчет, ОбластьПодвалОтчет, ПараметрыОтчета)
										
		КонецЦикла; // Выборка периодов
						
	КонецЕсли;
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	СписокСформированныхЛистов.Добавить(ДокументРезультат, "Листы");
	
КонецПроцедуры

// Процедура - выводит шапку таблицы
//
Процедура ВывестиШапкуОтчета(ДокументРезультат, ДатаЛиста, ТекущийОстаток, ОбластьЗаголовокОтчет, ОбластьШапкаОтчет, ОбластьОстатокНаНДОтчет, ПараметрыОтчета)
		
	// Вывод Шапки листа
	ДанныеБанковскогоСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.БанковскийСчет, "Наименование, ВалютаДенежныхСредств");
	
	ПериодЛистаСтрокой = НСтр("ru = 'Журнал банковских документов'") + " " + НСтр("ru = 'за период с '") 
					+ Формат(ПараметрыОтчета.НачалоПериода, "ДЛФ=D") + НСтр("ru = ' по '") + Формат(ПараметрыОтчета.КонецПериода, "ДЛФ=D");		
						 
	ОбластьЗаголовокОтчет.Параметры.ЗаголовокЛиста = ПериодЛистаСтрокой;	
	ОбластьЗаголовокОтчет.Параметры.БанковскийСчет = ПараметрыОтчета.БанковскийСчет.Наименование;
	ОбластьЗаголовокОтчет.Параметры.Валюта = ПараметрыОтчета.БанковскийСчет.ВалютаДенежныхСредств;
	ОбластьЗаголовокОтчет.Параметры.Организация = ?(ПараметрыОтчета.Организация.НаименованиеПолное <> "",
							ПараметрыОтчета.Организация.НаименованиеПолное, ПараметрыОтчета.Организация.Наименование);
	
	ДокументРезультат.Вывести(ОбластьЗаголовокОтчет);
	
	ДокументРезультат.Вывести(ОбластьШапкаОтчет);
	
	ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало = ТекущийОстаток;	
	ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);
	
КонецПроцедуры  // ВывестиШапкуОтчета

// Процедура - выводит подвал таблицы
//
Процедура ВывестиПодвалОтчета(ДокументРезультат,ТекущийОстаток, ДатаЛиста, КоличествоПриходныхДокументов, КоличествоРасходныхДокументов,
	ОбластьОборотОтчет, ОбластьКонечныйОстатокОтчет, ОбластьПодвалОтчет, ПараметрыОтчета)
	
	ДокументРезультат.Вывести(ОбластьОборотОтчет);
	
	// итоги за день - Остаток
	ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = ТекущийОстаток;		
	ДокументРезультат.Вывести(ОбластьКонечныйОстатокОтчет);
	
	//// итоги за день - подписи
	//ОбластьПодвалОтчет.Параметры.НадписьКолПриходных = ?(КоличествоПриходныхДокументов > 0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ");																
	//ОбластьПодвалОтчет.Параметры.НадписьКолРасходных = ?(КоличествоРасходныхДокументов > 0, ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ");
	
	Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	
	ОбластьПодвалОтчет.Параметры.ГлБухгалтер = Руководители.ГлавныйБухгалтер;
	//ОбластьПодвалОтчет.Параметры.Кассир 	 = Руководители.Кассир;
	ДокументРезультат.Вывести(ОбластьПодвалОтчет);
КонецПроцедуры  // ВывестиПодвалОтчета

#КонецОбласти

#КонецЕсли
