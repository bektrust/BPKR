#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Для подсистемы "Варианты отчетов" при работе в модели сервиса.
//
// Возвращаемое значение:
//  Массив - массив структур (варианты отчета).
Функция ВариантыНастроек() Экспорт
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("Имя, Представление","РасшифровкаСводкиПоДенежнымСредствам", НСтр("ru = 'Расшифровка сводки по денежным средствам'")));
	Возврат Массив;
КонецФункции

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;

	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасшифровкаСводкиПоДенежнымСредствам");
	НастройкиВарианта.Описание = НСтр("ru = 'Расшифровка сводки по денежным средствам'");

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьПослеКомпоновкиМакета",  Ложь);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	
	Возврат Результат;

КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт 
	
	Возврат "Расшифровка сводки по денежным средствам" + БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	СчетаРасчетовСКонтрагентами = БухгалтерскийУчетСервер.СчетаРасчетовСКонтрагентами();
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "РасшифровкаСводкиПоДенежнымСредствам", СчетаРасчетовСКонтрагентами);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериодаОстатки", НачалоДня(ПараметрыОтчета.НачалоПериода) + 1);
	Иначе
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериодаОстатки", Дата(1, 1, 1) + 1);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериодаОстатки", КонецДня(ПараметрыОтчета.КонецПериода) + 1);
	Иначе
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериодаОстатки", Дата(3999, 1, 1) + 1);
	КонецЕсли;
		
	Для Каждого Элемент Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		Если Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Валюта") Тогда	
			БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "Валюта", Элемент.ПравоеЗначение);	
		КонецЕсли;	
	КонецЦикла;		
	
	// Группировка
	БухгалтерскиеОтчетыВызовСервера.ДобавитьГруппировки(ПараметрыОтчета, КомпоновщикНастроек);
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	// Вывод подписей
	БухгалтерскиеОтчеты.ВыводПодписейОтчета(ПараметрыОтчета, Результат);
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета, ПараметрыОтчета.ИдентификаторОтчета, Результат);

	ОбластьЯчеек = Результат.НайтиТекст("<ОстатокНаНачало>");
	Если ОбластьЯчеек <> Неопределено Тогда
		
		ТекстЯчейки = НСтр("ru = 'Остаток на %1'");
		
		ОбластьЯчеек.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЯчейки, Формат(ПараметрыОтчета.НачалоПериода, "ДФ=dd.MM.yy; ДП=..."));;
		ОбластьЯчеек = Результат.Область(ОбластьЯчеек.Верх, ОбластьЯчеек.Лево, ОбластьЯчеек.Верх + 1, ОбластьЯчеек.Лево + 7);
		ОбластьЯчеек.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		
	КонецЕсли;
		
	ОбластьЯчеек = Результат.НайтиТекст("<ОстатокНаКонец>");
	Если ОбластьЯчеек <> Неопределено Тогда
		
		ТекстЯчейки = НСтр("ru = 'Остаток на %1'");
		
		ОбластьЯчеек.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЯчейки, Формат(ПараметрыОтчета.КонецПериода, "ДФ=dd.MM.yy; ДП=..."));
		
	КонецЕсли;
	
	ОтредактироватьРезультат(Результат, ПараметрыОтчета.СкрытьВалюты);
КонецПроцедуры

// Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		 Настройки.ОписаниеВариантов.Вставить(Вариант.Имя,Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает набор параметров, которые необходимо сохранять в рассылке отчетов.
// Значения параметров используются при формировании отчета в рассылке.
//
// Возвращаемое значение:
//   Структура - структура настроек, сохраняемых в рассылке с неинициализированными значениями.
//
Функция НастройкиОтчетаСохраняемыеВРассылке() Экспорт
	
	КоллекцияНастроек = Новый Структура;
	КоллекцияНастроек.Вставить("Организация"                      , Справочники.Организации.ПустаяСсылка());
	КоллекцияНастроек.Вставить("СкрытьВалюты"					  , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьЗаголовок"                , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьПодвал"                   , Ложь);
	КоллекцияНастроек.Вставить("МакетОформления"                  , Неопределено);
	КоллекцияНастроек.Вставить("НастройкиКомпоновкиДанных"        , Неопределено);
	КоллекцияНастроек.Вставить("КассаБанковскийСчет"              , Справочники.Кассы.ПустаяСсылка());
	
	Возврат КоллекцияНастроек;
	
КонецФункции

// Возвращает структуру параметров, наличие которых требуется для успешного формирования отчета.
//
// Возвращаемое значение:
//   Структура - структура параметров для формирования отчета.
//
Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	// Часть параметров компоновки отчета используется так же и в рассылке отчета.
	ПараметрыОтчета = НастройкиОтчетаСохраняемыеВРассылке();
	
	// Дополним параметрами, влияющими на формирование отчета.
	ПараметрыОтчета.Вставить("ПериодОтчета"         , Неопределено);
	ПараметрыОтчета.Вставить("НачалоПериода"        , Дата(1,1,1));
	ПараметрыОтчета.Вставить("КонецПериода"         , Дата(1,1,1));
	ПараметрыОтчета.Вставить("РежимРасшифровки"     , Ложь);
	ПараметрыОтчета.Вставить("ДанныеРасшифровки"    , Неопределено);
	ПараметрыОтчета.Вставить("СхемаКомпоновкиДанных", Неопределено);
	ПараметрыОтчета.Вставить("ИдентификаторОтчета"  , "");
	
	Возврат ПараметрыОтчета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура редактирования результата вывода в табличный документ
//
Процедура ОтредактироватьРезультат(Результат, СкрытьВалюты)

	// Скрывается видимость строки из заголовка, где находятся колонки "Приход сом" и "Расход сом", 
	// чтобы остались только "Приход" и "Расход".
	НайденнаяОбласть = Результат.НайтиТекст("Приход сом");
	НачалоСтрокТаблицы = 0;
	
	Если НЕ НайденнаяОбласть = Неопределено Тогда
		Область = Результат.Область(НайденнаяОбласть.Верх,,НайденнаяОбласть.Верх,);
		Область.Видимость = Ложь;
		
		НачалоСтрокТаблицы = НайденнаяОбласть.Верх + 1;
	КонецЕсли;
	
	Если СкрытьВалюты Тогда
		
		// Поиск ячейки со словом "Валюта" и скрытие видимости всей этой колонки.
		НайденнаяОбласть = Результат.НайтиТекст("Валюта",,,,Истина);
		Область = Результат.Область(,НайденнаяОбласть.Лево,,НайденнаяОбласть.Лево);
		Область.Видимость = Ложь;
		
		// Последние две колонки - это "Приход" и "Расход".
		НомерКолонкиПриход = Результат.ШиринаТаблицы - 1;
		НомерКолонкиРасход = Результат.ШиринаТаблицы;
		
		// В цикле идет объединение ячеек с суммами и редактируется высота строки
		Для НомерСтроки = НачалоСтрокТаблицы По Результат.ВысотаТаблицы Цикл
			
			// Если в первой колонке каждой из строк не задан текст, то это строка только валютной суммы.
			// Происходит объединение ячеек, колонок "Приход" и "Расход", с выше расположенными ячейками,
			// где находится сумма в валюте регламентированного учета.
			Если Результат.Область("R" + Строка(НомерСтроки) + "C1").Текст = "" Тогда
				
				// Объединение ячеек колонки "Приход"
				Область = Результат.Область("R" + Строка(НомерСтроки - 1) + "C" + Строка(НомерКолонкиПриход)
										+ ":R" + Строка(НомерСтроки) + "C" + Строка(НомерКолонкиПриход));						
				Область.Объединить();													
				
				// Объединение ячеек колонки "Расход"
				Область = Результат.Область("R" + Строка(НомерСтроки - 1) + "C" + Строка(НомерКолонкиРасход)
										+ ":R" + Строка(НомерСтроки) + "C" + Строка(НомерКолонкиРасход));						
				Область.Объединить();													
				
				// Редактирование высоты строки
				Область = Результат.Область(НомерСтроки,,НомерСтроки,);
				Область.ВысотаСтроки = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
