#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Справка о заработной плате.'");
	НастройкиВарианта.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Справка'");
КонецПроцедуры

// Для формирования отчета в фоновом задании.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ПодготовитьПараметрыОтчета() в ФормаОтчета.
//  АдресХранилища - Строка - адрес временного хранилища, куда будет помещен результат формирования отчета.
//
Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	// Присвоим имя для сохранения параметров печати табличного документа.
	ТабличныйДокумент.ИмяПараметровПечати = "СправкаОЗаработнойПлате";
	ТабличныйДокумент.АвтоМасштаб = Истина;

	// Спислк видов удержаний для данного отчета определяется оформленными документами Исполнительнй лист за весь период.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПлановыеУдержанияНачалоСрезПоследних.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияНачало.СрезПоследних(, Регистратор ССЫЛКА Документ.ИсполнительныйЛист) КАК ПлановыеУдержанияНачалоСрезПоследних";
	СписокВидовУдержанийИсполнительногоЛиста = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета");
	
	// Выполним общий запрос.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СотрудникиСрезПоследних.Должность.Наименование КАК ДолжностьНаименование,
		|	СотрудникиСрезПоследних.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	СотрудникиСрезПоследних.Организация КАК Организация,
		|	СотрудникиСрезПоследних.Подразделение.Наименование КАК ПодразделениеНаименование,
		|	СотрудникиСрезПоследних.ФизЛицо.ИНН КАК ФизЛицоИНН,
		|	СотрудникиСрезПоследних.ФизЛицо.Код КАК ФизЛицоКод
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ФизЛицо = &ФизЛицо) КАК СотрудникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
		|	Начисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА Начисления.ВидРасчета.ДополнительныйДоход
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Результат
		|	КОНЕЦ КАК СуммаНачислено,
		|	0 КАК СуммаУдержано,
		|	0 КАК СуммаСФ,
		|	0 КАК СуммаПН,
		|	0 КАК СуммаПрофВзнос,
		|	ВЫБОР
		|		КОГДА Начисления.ВидРасчета.ОблагаетсяПН
		|				И Начисления.ВидРасчета.ОблагаетсяСФ
		|			ТОГДА Начисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемыйДоход,
		|	ВЫБОР
		|		КОГДА Начисления.ВидРасчета.ОблагаетсяПН
		|				И Начисления.ВидРасчета.ОблагаетсяСФ
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Результат
		|	КОНЕЦ КАК НеоблагаемыйДоход
		|ПОМЕСТИТЬ ВременнаяТаблицаЗаработнаяПлата
		|ИЗ
		|	РегистрРасчета.Начисления КАК Начисления
		|ГДЕ
		|	Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Начисления.Организация = &Организация
		|	И Начисления.ФизЛицо = &ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Удержания.ПериодРегистрации,
		|	Удержания.ФизЛицо,
		|	0,
		|	Удержания.Результат,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	РегистрРасчета.Удержания КАК Удержания
		|ГДЕ
		|	Удержания.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Удержания.Организация = &Организация
		|	И Удержания.ФизЛицо = &ФизЛицо
		|	И Удержания.ВидРасчета В(&СписокВидовУдержанийИсполнительногоЛиста)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалогиПоЗаработнойПлатеОбороты.ПериодМесяц,
		|	НалогиПоЗаработнойПлатеОбороты.ФизЛицо,
		|	0,
		|	0,
		|	ВЫБОР
		|		КОГДА НалогиПоЗаработнойПлатеОбороты.ВидНалога = ЗНАЧЕНИЕ(ПланВидовРасчета.ВидыНалогов.ПФР)
		|			ТОГДА НалогиПоЗаработнойПлатеОбороты.СуммаОборот
		|		КОГДА НалогиПоЗаработнойПлатеОбороты.ВидНалога = ЗНАЧЕНИЕ(ПланВидовРасчета.ВидыНалогов.ГНПФР)
		|			ТОГДА НалогиПоЗаработнойПлатеОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НалогиПоЗаработнойПлатеОбороты.ВидНалога = ЗНАЧЕНИЕ(ПланВидовРасчета.ВидыНалогов.ПН)
		|			ТОГДА НалогиПоЗаработнойПлатеОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НалогиПоЗаработнойПлатеОбороты.ВидНалога = ЗНАЧЕНИЕ(ПланВидовРасчета.ВидыНалогов.ПрофВзнос)
		|			ТОГДА НалогиПоЗаработнойПлатеОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.НалогиПоЗаработнойПлате.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Организация = &Организация
		|				И ФизЛицо = &ФизЛицо) КАК НалогиПоЗаработнойПлатеОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаЗаработнаяПлата.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаЗаработнаяПлата.ПериодРегистрации КАК ПериодРегистрации,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаНачислено) КАК СуммаНачислено,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаУдержано) КАК СуммаУдержано,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаСФ) КАК СуммаСФ,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаПН) КАК СуммаПН,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаПрофВзнос) КАК СуммаПрофВзнос,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаНачислено - ВременнаяТаблицаЗаработнаяПлата.СуммаУдержано - ВременнаяТаблицаЗаработнаяПлата.СуммаСФ - ВременнаяТаблицаЗаработнаяПлата.СуммаПН - ВременнаяТаблицаЗаработнаяПлата.СуммаПрофВзнос) КАК СуммаКВыплате,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.ОблагаемыйДоход) КАК ОблагаемыйДоход,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.НеоблагаемыйДоход) КАК НеоблагаемыйДоход
		|ИЗ
		|	ВременнаяТаблицаЗаработнаяПлата КАК ВременнаяТаблицаЗаработнаяПлата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаЗаработнаяПлата.ПериодРегистрации,
		|	ВременнаяТаблицаЗаработнаяПлата.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодРегистрации
		|ИТОГИ
		|	СУММА(СуммаНачислено),
		|	СУММА(СуммаУдержано),
		|	СУММА(СуммаСФ),
		|	СУММА(СуммаПН),
		|	СУММА(СуммаПрофВзнос),
		|	СУММА(СуммаКВыплате)
		|ПО
		|	ОБЩИЕ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаЗаработнаяПлата.ПериодРегистрации КАК ПериодРегистрации,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаСФ) КАК СуммаСФ,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.СуммаПН) КАК СуммаПН,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.ОблагаемыйДоход) КАК ОблагаемыйДоход,
		|	СУММА(ВременнаяТаблицаЗаработнаяПлата.НеоблагаемыйДоход) КАК НеоблагаемыйДоход
		|ИЗ
		|	ВременнаяТаблицаЗаработнаяПлата КАК ВременнаяТаблицаЗаработнаяПлата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаЗаработнаяПлата.ПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодРегистрации";
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ФизЛицо", ПараметрыОтчета.ФизЛицо);
	Запрос.УстановитьПараметр("СписокВидовУдержанийИсполнительногоЛиста", СписокВидовУдержанийИсполнительногоЛиста);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если МассивРезультатов[0].Пустой() Тогда 
		Возврат;
	КонецЕсли;	
	
	ВыборкаСотрудники = МассивРезультатов[0].Выбрать();
	ВыборкаСотрудники.Следующий();
	
	Если ПараметрыОтчета.ФормаОтчета = 0 Тогда  
		Макет = ПолучитьМакет("СправкаОЗаработнойПлатеПолная");
		
	ИначеЕсли ПараметрыОтчета.ФормаОтчета = 1 Тогда 
		Макет = ПолучитьМакет("СправкаОЗаработнойПлатеУпрощенная");		
	Иначе
		Макет = ПолучитьМакет("СправкаОЗаработнойПлатеЕНД");
	КонецЕсли;	

	// Вывод отчета.
	Если НЕ ПараметрыОтчета.ФормаОтчета = 2 Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаСотрудники);
		
		ОбластьЗаголовок.Параметры.НачалоПериода = Формат(ПараметрыОтчета.НачалоПериода, "ДЛФ=D");
		ОбластьЗаголовок.Параметры.КонецПериода = Формат(ПараметрыОтчета.КонецПериода, "ДЛФ=D");
		
		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(ВыборкаСотрудники.Организация);
		
		ОбластьЗаголовок.Параметры.ОрганизацияНаименованиеПолное = СведенияОбОрганизации.НаименованиеПолное;
		ОбластьЗаголовок.Параметры.Адрес = СведенияОбОрганизации.АдрЮР + "; " + СведенияОбОрганизации.Тел;
		ОбластьЗаголовок.Параметры.ИНН = СведенияОбОрганизации.ИНН;
		ОбластьЗаголовок.Параметры.ТекущаяДата = ТекущаяДатаСеанса();
		
		ОбластьЗаголовок.Параметры.ФизЛицоНаименование = ВыборкаСотрудники.ФизЛицоНаименование +
			?(ВыборкаСотрудники.ФизЛицоКод <> "", ", " + ВыборкаСотрудники.ФизЛицоКод, "") +
			?(ВыборкаСотрудники.ФизЛицоИНН <> "", ", " + ВыборкаСотрудники.ФизЛицоИНН, "");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

		ВыборкаИтоги = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаИтоги.Следующий() Тогда 
			ВыборкаДетали = ВыборкаИтоги.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл  
				ОбластьСтрока.Параметры.Заполнить(ВыборкаДетали);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЦикла;
			
			ОбластьПодвал.Параметры.Заполнить(ВыборкаИтоги);
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			Если ПараметрыОтчета.ФормаОтчета = 0 Тогда  
				ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");

				СуммаПрописью = БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ВыборкаИтоги.СуммаКВыплате);
				ОбластьСуммаПрописью.Параметры.СуммаПрописью = СуммаПрописью;
				ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
			КонецЕсли;
		КонецЕсли;	
			
		// Вывод подписей
		БухгалтерскиеОтчеты.ВыводПодписейОтчета(ПараметрыОтчета, ТабличныйДокумент);
		
		// Отчет выведен.
		
		УправлениеКолонтитулами.УстановитьКолонтитулы(ТабличныйДокумент, НСтр("ru = 'Справка о заработной плате'"));
		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеПечати = Новый Структура();
		
		Если ЗначениеЗаполнено(ВыборкаСотрудники.ФизЛицоИНН) Тогда	
			ДанныеПечати.Вставить("ИННРаботника1", Сред(ВыборкаСотрудники.ФизЛицоИНН, 1, 1));
			ДанныеПечати.Вставить("ИННРаботника2", Сред(ВыборкаСотрудники.ФизЛицоИНН, 2, 1));
			ДанныеПечати.Вставить("ИННРаботника3", Сред(ВыборкаСотрудники.ФизЛицоИНН, 3, 1));
			ДанныеПечати.Вставить("ИННРаботника4", Сред(ВыборкаСотрудники.ФизЛицоИНН, 4, 1));
			ДанныеПечати.Вставить("ИННРаботника5", Сред(ВыборкаСотрудники.ФизЛицоИНН, 5, 1));
			ДанныеПечати.Вставить("ИННРаботника6", Сред(ВыборкаСотрудники.ФизЛицоИНН, 6, 1));
			ДанныеПечати.Вставить("ИННРаботника7", Сред(ВыборкаСотрудники.ФизЛицоИНН, 7, 1));
			ДанныеПечати.Вставить("ИННРаботника8", Сред(ВыборкаСотрудники.ФизЛицоИНН, 8, 1));
			ДанныеПечати.Вставить("ИННРаботника9", Сред(ВыборкаСотрудники.ФизЛицоИНН, 9, 1));
			ДанныеПечати.Вставить("ИННРаботника10", Сред(ВыборкаСотрудники.ФизЛицоИНН, 10, 1));
			ДанныеПечати.Вставить("ИННРаботника11", Сред(ВыборкаСотрудники.ФизЛицоИНН, 11, 1));
			ДанныеПечати.Вставить("ИННРаботника12", Сред(ВыборкаСотрудники.ФизЛицоИНН, 12, 1));
			ДанныеПечати.Вставить("ИННРаботника13", Сред(ВыборкаСотрудники.ФизЛицоИНН, 13, 1));
			ДанныеПечати.Вставить("ИННРаботника14", Сред(ВыборкаСотрудники.ФизЛицоИНН, 14, 1));
		КонецЕсли;	
		
		ДанныеПечати.Вставить("РаботникПредставление", ВыборкаСотрудники.ФизЛицоНаименование);
		
		НачалоПериодаСтрокой = Строка(ПараметрыОтчета.НачалоПериода);
		ДанныеПечати.Вставить("НачалоПериода1", Сред(НачалоПериодаСтрокой, 1, 1));
		ДанныеПечати.Вставить("НачалоПериода2", Сред(НачалоПериодаСтрокой, 2, 1));
		ДанныеПечати.Вставить("НачалоПериода3", Сред(НачалоПериодаСтрокой, 4, 1));
		ДанныеПечати.Вставить("НачалоПериода4", Сред(НачалоПериодаСтрокой, 5, 1));
		ДанныеПечати.Вставить("НачалоПериода5", Сред(НачалоПериодаСтрокой, 7, 1));
		ДанныеПечати.Вставить("НачалоПериода6", Сред(НачалоПериодаСтрокой, 8, 1));
		ДанныеПечати.Вставить("НачалоПериода7", Сред(НачалоПериодаСтрокой, 9, 1));
		ДанныеПечати.Вставить("НачалоПериода8", Сред(НачалоПериодаСтрокой, 10, 1));
		
		КонецПериодаСтрокой = Строка(ПараметрыОтчета.КонецПериода);
		ДанныеПечати.Вставить("КонецПериода1", Сред(КонецПериодаСтрокой, 1, 1));
		ДанныеПечати.Вставить("КонецПериода2", Сред(КонецПериодаСтрокой, 2, 1));
		ДанныеПечати.Вставить("КонецПериода3", Сред(КонецПериодаСтрокой, 4, 1));
		ДанныеПечати.Вставить("КонецПериода4", Сред(КонецПериодаСтрокой, 5, 1));
		ДанныеПечати.Вставить("КонецПериода5", Сред(КонецПериодаСтрокой, 7, 1));
		ДанныеПечати.Вставить("КонецПериода6", Сред(КонецПериодаСтрокой, 8, 1));
		ДанныеПечати.Вставить("КонецПериода7", Сред(КонецПериодаСтрокой, 9, 1));
		ДанныеПечати.Вставить("КонецПериода8", Сред(КонецПериодаСтрокой, 10, 1));
		
		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(ВыборкаСотрудники.Организация);
				
		Если ЗначениеЗаполнено(СведенияОбОрганизации.ИНН) Тогда	
			ДанныеПечати.Вставить("ИННОрганизации1", Сред(СведенияОбОрганизации.ИНН, 1, 1));
			ДанныеПечати.Вставить("ИННОрганизации2", Сред(СведенияОбОрганизации.ИНН, 2, 1));
			ДанныеПечати.Вставить("ИННОрганизации3", Сред(СведенияОбОрганизации.ИНН, 3, 1));
			ДанныеПечати.Вставить("ИННОрганизации4", Сред(СведенияОбОрганизации.ИНН, 4, 1));
			ДанныеПечати.Вставить("ИННОрганизации5", Сред(СведенияОбОрганизации.ИНН, 5, 1));
			ДанныеПечати.Вставить("ИННОрганизации6", Сред(СведенияОбОрганизации.ИНН, 6, 1));
			ДанныеПечати.Вставить("ИННОрганизации7", Сред(СведенияОбОрганизации.ИНН, 7, 1));
			ДанныеПечати.Вставить("ИННОрганизации8", Сред(СведенияОбОрганизации.ИНН, 8, 1));
			ДанныеПечати.Вставить("ИННОрганизации9", Сред(СведенияОбОрганизации.ИНН, 9, 1));
			ДанныеПечати.Вставить("ИННОрганизации10", Сред(СведенияОбОрганизации.ИНН, 10, 1));
			ДанныеПечати.Вставить("ИННОрганизации11", Сред(СведенияОбОрганизации.ИНН, 11, 1));
			ДанныеПечати.Вставить("ИННОрганизации12", Сред(СведенияОбОрганизации.ИНН, 12, 1));
			ДанныеПечати.Вставить("ИННОрганизации13", Сред(СведенияОбОрганизации.ИНН, 13, 1));
			ДанныеПечати.Вставить("ИННОрганизации14", Сред(СведенияОбОрганизации.ИНН, 14, 1));
		КонецЕсли;
		
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", 	СведенияОбОрганизации.НаименованиеПолное);
		ДанныеПечати.Вставить("ОрганизацияАдрес", 				СведенияОбОрганизации.АдрЮР);
		ДанныеПечати.Вставить("ОрганизацияТелефон", 			СведенияОбОрганизации.Тел);
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(
							ВыборкаСотрудники.Организация, ПараметрыОтчета.КонецПериода);
		ДанныеПечати.Вставить("ГлавныйБухгалтер", 	Руководители.ГлавныйБухгалтер);
		ДанныеПечати.Вставить("Руководитель", 		Руководители.Руководитель);
		
		ДанныеПечати.Вставить("ОД_Итого", 0);
		ДанныеПечати.Вставить("НД_Итого", 0);
		ДанныеПечати.Вставить("СФ_Итого", 0);
		ДанныеПечати.Вставить("ПН_Итого", 0);
		
		ВыборкаСуммы = МассивРезультатов[3].Выбрать();
		
		Пока ВыборкаСуммы.Следующий() Цикл
			
			Если Месяц(ВыборкаСуммы.ПериодРегистрации) = 1 Тогда
				ДанныеПечати.Вставить("ОД_Январь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Январь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Январь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Январь", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 2 Тогда
				ДанныеПечати.Вставить("ОД_Февраль", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Февраль", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Февраль", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Февраль", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 3 Тогда
				ДанныеПечати.Вставить("ОД_Март", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Март", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Март", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Март", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 4 Тогда
				ДанныеПечати.Вставить("ОД_Апрель", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Апрель", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Апрель", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Апрель", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 5 Тогда
				ДанныеПечати.Вставить("ОД_Май", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Май", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Май", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Май", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 6 Тогда
				ДанныеПечати.Вставить("ОД_Июнь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Июнь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Июнь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Июнь", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 7 Тогда
				ДанныеПечати.Вставить("ОД_Июль", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Июль", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Июль", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Июль", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 8 Тогда
				ДанныеПечати.Вставить("ОД_Август", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Август", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Август", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Август", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 9 Тогда
				ДанныеПечати.Вставить("ОД_Сентябрь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Сентябрь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Сентябрь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Сентябрь", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 10 Тогда
				ДанныеПечати.Вставить("ОД_Октябрь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Октябрь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Октябрь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Октябрь", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 11 Тогда
				ДанныеПечати.Вставить("ОД_Ноябрь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Ноябрь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Ноябрь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Ноябрь", ВыборкаСуммы.СуммаПН);
				
			ИначеЕсли Месяц(ВыборкаСуммы.ПериодРегистрации) = 12 Тогда
				ДанныеПечати.Вставить("ОД_Декабрь", ВыборкаСуммы.ОблагаемыйДоход);
				ДанныеПечати.Вставить("НД_Декабрь", ВыборкаСуммы.НеоблагаемыйДоход);
				ДанныеПечати.Вставить("СФ_Декабрь", ВыборкаСуммы.СуммаСФ);
				ДанныеПечати.Вставить("ПН_Декабрь", ВыборкаСуммы.СуммаПН);
			КонецЕсли;	
			
			ДанныеПечати.ОД_Итого = ДанныеПечати.ОД_Итого + ВыборкаСуммы.ОблагаемыйДоход;
			ДанныеПечати.НД_Итого = ДанныеПечати.НД_Итого + ВыборкаСуммы.НеоблагаемыйДоход;
			ДанныеПечати.СФ_Итого = ДанныеПечати.СФ_Итого + ВыборкаСуммы.СуммаСФ;
			ДанныеПечати.ПН_Итого = ДанныеПечати.ПН_Итого + ВыборкаСуммы.СуммаПН;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;	
		
	ПоместитьВоВременноеХранилище(ТабличныйДокумент, АдресХранилища);	
КонецПроцедуры

#КонецОбласти

#КонецЕсли