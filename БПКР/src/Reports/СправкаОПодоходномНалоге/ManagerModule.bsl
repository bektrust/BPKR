#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации()
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       см. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
	МодульВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина);
	
	НастройкиВарианта = МодульВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "");
	НастройкиВарианта.Описание = НСтр("ru = 'Справка о подоходном налоге.'");

	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей =
		НСтр("ru = 'Предприятие
		|Сумма облагаемая п/н
		|Кол-во сотрудников
		|Сумма взносов'");
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов =
		НСтр("ru = 'НачалоПериода
		|КонецПериода
		|Организация'");
	НастройкиВарианта.НастройкиДляПоиска.КлючевыеСлова = НСтр("ru = 'Справка о подоходном налоге'");
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура формирования отчета.
//
// Параметры:
//   ПараметрыОтчета - структура - набор параметров, необходимых для построения отчета.
// 	АдресХранилища - адрес временного хранилища.
Процедура Сформировать(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатФормирования = Новый Структура("Результат, ОписаниеОшибки", Неопределено, "");
	СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования);
	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

// Процедура - Сформировать табличный документ
//
// Параметры:
//  СтруктураПараметров	 - Структура - Параметры формирования отчета.
//  РезультатФормирования	 	- Структура - 
//
Процедура СформироватьТабличныйДокумент(СтруктураПараметров, РезультатФормирования)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "СправкаОПодоходномНалоге_СправкаОПН";
	
	Организация = СтруктураПараметров.Организация;
	НачалоПериода = НачалоДня(СтруктураПараметров.НачалоПериода);
	КонецПериода = КонецДня(СтруктураПараметров.КонецПериода);
	
	Макет = ПолучитьМакет("ПФ_MXL_СправкаОПН");

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ПериодПредставление = ПредставлениеПериода(НачалоПериода, КонецПериода);
	ОбластьШапка.Параметры.Организация = Организация;
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	Запрос = Новый Запрос;
	ТекстЗапроса =	
	
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодоходныйНалог.ФизЛицо) КАК КоличествоФизЛиц,
	|	СУММА(ПодоходныйНалог.ОДПНОборот) КАК СуммаОбагаемаяПН,
	|	СУММА(ПодоходныйНалог.ПНОборот) КАК СуммаПН
	|ИЗ
	|	РегистрНакопления.ПодоходныйНалог.Обороты(&НачалоПериода, КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), , Организация = &Организация) КАК ПодоходныйНалог";	
	
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	КонецДня(КонецПериода));
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация = &Организация", "Истина");
	КонецЕсли;		
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		
		ОбластьШапкаТаблицы	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьШапкаТаблицы.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

	КонецЕсли;

	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	РезультатФормирования.Результат = ТабличныйДокумент;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
