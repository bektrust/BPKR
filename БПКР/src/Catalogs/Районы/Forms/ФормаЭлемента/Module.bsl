
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ЗаполнитьМаксимальнойДатойПоРайону();
	
	СозданиеНового = Объект.Ссылка.Пустая();
	
	СтруктураОбъектов = Новый Структура;
	СтруктураОбъектов.Вставить("Период", Дата);
	СтруктураОбъектов.Вставить("Район", Объект.Ссылка);
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, "СтавкиЗемельногоНалогаПоРайонам", СтруктураОбъектов);
		
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

// Процедура - обработчик события ПриЗаписиНаСервере.
//
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДополнительныеСвойства = Новый Структура;
	
	Если СозданиеНового Тогда
		ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
	КонецЕсли;
	
	СтруктураОбъектов = Новый Структура;
	СтруктураОбъектов.Вставить("Период", Дата);
	СтруктураОбъектов.Вставить("Район", ТекущийОбъект.Ссылка);
	
	РедактированиеПериодическихСведений.ЗаписатьНаборЗаписейПоСтруктуре(
		ЭтаФорма,
		"СтавкиЗемельногоНалогаПоРайонам",
		СтруктураОбъектов,
		,
		ДополнительныеСвойства);
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Дата = НачалоМесяца(Дата);
	
	ДатаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для заполнения ставок
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект);
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ЗаполнитьСтавкиЗемельногоНалогаФрагмент();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыОбработчикиСобытийНабораЗаписейРайоны

&НаКлиенте
Процедура РайоныНаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		// получаем текущую строку
		СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
		
		// не удалось получить- возвращаемся
		Если СтрокаТабличнойЧасти = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Период = НачалоМесяца(Дата);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РайоныНаборЗаписейПериодПриИзменении(Элемент)
	ТекДанные = Элементы.СтавкиЗемельногоНалогаПоРайонамНаборЗаписей.ТекущиеДанные;
	ТекДанные.Период = НачалоМесяца(ТекДанные.Период);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает функциональные опции формы документа.
//
&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	Период = ТекущаяДатаСеанса();
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма, Организация, Период);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтавкиЗемельногоНалогаФрагмент()
	ЗаполнитьСтавкиЗемельногоНалогаНаКлиенте();	
КонецПроцедуры // ЗаполнитьСтавкиЗемельногоНалога()

&НаКлиенте
Процедура ЗаполнитьСтавкиЗемельногоНалогаНаКлиенте()
	
	ОписаниеОшибки = "";
	ЗаполнитьСтавкиЗемельногоНалогаНаСервере(ОписаниеОшибки);
	Модифицированность = Истина;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		
		ОбработчикЗавершенияОбработкиОшибки = Новый ОписаниеОповещения(
			"ОбработатьОшибкуЗаполнитьСтавкиЗемельногоНалога",
			ЭтотОбъект);
		ДополнительныеПараметрыОбработкиОшибки =
			РаботаСКонтрагентамиКлиентБП.НовыйДополнительныеПараметрыОбработкиОшибки();
		ДополнительныеПараметрыОбработкиОшибки.ПредставлениеДействия    = НСтр("ru = 'Загрузка ставок земельного налога'");
		ДополнительныеПараметрыОбработкиОшибки.ИдентификаторМестаВызова = "ratesLandTaxDistricts";
		ДополнительныеПараметрыОбработкиОшибки.Форма                    = ЭтотОбъект;
		
		РаботаСКонтрагентамиКлиентБП.ОбработатьОшибку(
			ОписаниеОшибки,
			ОбработчикЗавершенияОбработкиОшибки,
			ДополнительныеПараметрыОбработкиОшибки);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСтавкиЗемельногоНалогаНаКлиенте()

&НаКлиенте
Процедура ОбработатьОшибкуЗаполнитьСтавкиЗемельногоНалога(Результат, ДополнительныеПараметры) Экспорт
	Если Результат.ПовторитьДействие Тогда
		ЗаполнитьСтавкиЗемельногоНалогаНаКлиенте();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкиЗемельногоНалогаНаСервере(ОписаниеОшибки)	
	
	Результат = РаботаСКонтрагентамиБП.РеквизитыСтавкиНалогов("ratesLandTaxDistricts");
	
	Если ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда 
		ОписаниеОшибки = Результат.ОписаниеОшибки;
		Возврат;
	КонецЕсли;	
	
	// Получение из XML.
	КлассификаторXML = Результат.КлассификаторXML;
	ТаблицаСтавкиЗемельногоНалога = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	ТаблицаСтавкиЗемельногоНалога.Индексы.Добавить("КодРайона");
	
	ПериодЗаполнения = ОбщегоНазначенияБПСервер.ПолучитьПериодИзXML(КлассификаторXML);
	
	НаборЗаписей = РегистрыСведений.СтавкиЗемельногоНалогаПоРайонам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Район.Установить(Объект.Ссылка);
	НаборЗаписей.Отбор.Период.Установить(ПериодЗаполнения);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	НайденныеСтроки = ТаблицаСтавкиЗемельногоНалога.НайтиСтроки(Новый Структура("КодРайона", Объект.Код));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
		
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, НайденнаяСтрока);
		Запись.Период = ПериодЗаполнения;
		Запись.Район = Объект.Ссылка;
		Запись.ВидЗемельногоУчастка = Перечисления.ВидыЗемельныхУчастков[НайденнаяСтрока.ВидЗемельногоУчастка];
		
	КонецЦикла;

	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина, Истина, Истина);
	
	Дата = ПериодЗаполнения;
	
	СтруктураОбъектов = Новый Структура;
	СтруктураОбъектов.Вставить("Период", Дата);
	СтруктураОбъектов.Вставить("Район", Объект.Ссылка);
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, "СтавкиЗемельногоНалогаПоРайонам", СтруктураОбъектов);
	
КонецПроцедуры // ЗаполнитьСтавкиЗемельногоНалогаНаСервере()

&НаСервере
Функция ЗаполнитьМаксимальнойДатойПоРайону()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтавкиЗемельногоНалогаПоРайонам.Период КАК Период
		|ИЗ
		|	РегистрСведений.СтавкиЗемельногоНалогаПоРайонам КАК СтавкиЗемельногоНалогаПоРайонам
		|ГДЕ
		|	СтавкиЗемельногоНалогаПоРайонам.Район = &Район
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("Район", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат НачалоМесяца(ТекущаяДатаСеанса());
	Иначе	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Период;
	КонецЕсли;	
		
КонецФункции	

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	СтруктураОбъектов = Новый Структура;
	СтруктураОбъектов.Вставить("Период", Дата);
	СтруктураОбъектов.Вставить("Район", Объект.Ссылка);
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, "СтавкиЗемельногоНалогаПоРайонам", СтруктураОбъектов);
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиБиблиотек

// ИнтернетПоддержкаПользователей
&НаСервере
Функция ТребуетсяНастройкаАвторизацияИнтернетПоддержки()
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
		Возврат Не МодульИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПриПодключенииИнтернетПоддержки(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект, ДополнительныеПараметры);
		МодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтернетПоддержкаПользователейКлиент");
		МодульИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	Если Не (ТипЗнч(Результат) = Тип("Структура")
		И ЗначениеЗаполнено(Результат.Логин)) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСтавкиЗемельногоНалогаФрагмент();	
КонецПроцедуры

// Конец ИнтернетПоддержкаПользователей
#КонецОбласти

