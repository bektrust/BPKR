#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить по умолчанию
// Выполняет первоночальное заполнение
Процедура ЗаполнитьПоУмолчанию() Экспорт 
	СправочникМенеджер = Справочники.СтатьиДвиженияДенежныхСредств;
	
	КлассификаторXML = Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьМакет("МакетЗаполнения").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		Наименование = СокрЛП(СтрокаТаблицыЗначений.Наименование);
		Родитель   	 = СокрЛП(СтрокаТаблицыЗначений.Родитель);
		КодСтроки 	 = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		
		СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(Наименование, Истина);
		
		Если СправочникСсылка.Пустая() Тогда
			Если СтрокаТаблицыЗначений.Группа <> "" Тогда 
				СправочникОбъект = СправочникМенеджер.СоздатьГруппу();
			Иначе 
				СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
			КонецЕсли;	
		Иначе
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		КонецЕсли;	
		
		СправочникОбъект.Наименование = Наименование;
		
		Если СтрокаТаблицыЗначений.Группа = "" Тогда
			СправочникОбъект.КодСтроки = КодСтроки;
		КонецЕсли;
		
		Если Родитель <> "" Тогда 
			РодительЭлемента = СправочникМенеджер.НайтиПоНаименованию(Родитель, Истина);
			СправочникОбъект.Родитель  = РодительЭлемента;
		КонецЕсли;	
		
		БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	КонецЦикла;
КонецПроцедуры // ЗаполнитьПоУмолчанию()	

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	Настройки.ИмяКлючевогоРеквизита = "Наименование";
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника ПапкиФайлов.
//  ТабличныеЧасти - Структура - описание табличных частей объекта, где:
//   * Ключ - Строка - имя табличной части;
//   * Значение - ТаблицаЗначений - табличная часть в виде таблицы значений, структуру которой
//                                  необходимо скопировать перед заполнением. Например:
//                                  Элемент.Ключи = ТабличныеЧасти.Ключи.Скопировать();
//                                  ЭлементТЧ = Элемент.Ключи.Добавить();
//                                  ЭлементТЧ.ИмяКлюча = "Первичный";
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	СправочникМенеджер = Справочники.СтатьиДвиженияДенежныхСредств;

	// Создание групп.
	СправочникОбъект = СправочникМенеджер.СоздатьГруппу();
	СправочникОбъект.Наименование = НСтр("ru = 'Операционная деятельность'", ОбщегоНазначения.КодОсновногоЯзыка());
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	СправочникОбъект = СправочникМенеджер.СоздатьГруппу();
	СправочникОбъект.Наименование = НСтр("ru = 'Инвестиционная деятельность'", ОбщегоНазначения.КодОсновногоЯзыка());
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	СправочникОбъект = СправочникМенеджер.СоздатьГруппу();
	СправочникОбъект.Наименование = НСтр("ru = 'Финансовая деятельность'", ОбщегоНазначения.КодОсновногоЯзыка());
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполнения").ПолучитьТекст();
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Наименование", СтрокаТаблицыЗначений.Наименование);
		ЗначенияЗаполнения.Вставить("Родитель", СправочникМенеджер.НайтиПоНаименованию(СтрокаТаблицыЗначений.Родитель, Истина));
		ЗначенияЗаполнения.Вставить("КодСтроки", СтрокаТаблицыЗначений.КодСтроки);
		
		Элемент = Элементы.Добавить();
		ЗаполнитьЗначенияСвойств(Элемент, ЗначенияЗаполнения);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли