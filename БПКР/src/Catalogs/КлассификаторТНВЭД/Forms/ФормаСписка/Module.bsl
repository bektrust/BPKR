
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	
	// Проверка наличия текущего задания по обновлению ТН ВЭД
	ВыполняетсяОбновлениеТНВЭД = ПроверитьОбновлениеТНВЭДНаСервере(РазделениеВключено).Свойство("Активно");
	
	Если Не ВыполняетсяОбновлениеТНВЭД Тогда
		АктуализироватьСостояниеОбновленияТНВЭД();
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// РаботаСНоменклатурой.ОблачныеКлассификаторы
	ОблачныеКлассификаторы.ПриСозданииНаСервереФормаСпискаТНВЭД(ЭтотОбъект, ЭтотОбъект.КоманднаяПанель);
	// Конец РаботаСНоменклатурой.ОблачныеКлассификаторы

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗавершениеЗагрузкиДанныхТНВЭД"
		Или ИмяСобытия = "ЗавершениеПодбораИзМакетаДанныхТНВЭД" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПодборИзКлассификатора(Команда)
	ПодобратьИзКлассификатора();
КонецПроцедуры

#Область ТНВЭД

&НаКлиенте
Процедура ОбновитьТНВЭД(Команда)
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	ЗапуститьОбновлениеТНВЭД(РазделениеВключено, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДлительнаяОперацияОбновлениеТНВЭД.Видимость = Истина;
	Элементы.СостояниеОбновленияТНВЭД.Заголовок = НСтр("ru = 'Выполняется обновление'");
	Элементы.ОбновитьТНВЭД.Доступность = Ложь;
	
	ПодключитьОбработчикОжидания("ПроверитьОбновлениеТНВЭД", 2);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапуститьОбновлениеТНВЭД(РазделениеВключено, Отказ)
	
	ЭлементыТНВЭД = Новый Массив;
	МодульПодсистемы = ОбщегоНазначения.ОбщийМодуль("ОблачныеКлассификаторыПереопределяемый");
	МодульПодсистемы.ОпределитьЗагруженныеЭлементыТНВЭД(ЭлементыТНВЭД);
	
	Если Не ЭлементыТНВЭД.Количество() Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка обновления: в базе отсутствуют элементы классификатора.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если РазделениеВключено Тогда
		КлючЗадания = "ОбновлениеТНВЭД" + Строка(ПараметрыСеанса.ОбластьДанныхЗначение);
	Иначе
		КлючЗадания = "ОбновлениеТНВЭД";
	КонецЕсли;
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Состояние", КлючЗадания, СостояниеФоновогоЗадания.Активно)); 
	
	Если Задания.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОблачныеКлассификаторы.ОбновитьКлассификаторТНВЭД",,
		КлючЗадания, НСтр("ru = 'Обновление классификатора ТН ВЭД'"));
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОбновлениеТНВЭД()
	
	Результат = ПроверитьОбновлениеТНВЭДНаСервере(РазделениеВключено);

	Если Результат.Свойство("Успешно") Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление ТН ВЭД'"),, НСтр("ru = 'Данные классификатора успешно обновлены'"));
	ИначеЕсли Результат.Свойство("Ошибка") Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Обновление ТН ВЭД'"),, НСтр("ru = 'Не удалось обновить данные классификатора'"));
	Иначе
		Возврат;
	КонецЕсли;
		
	Элементы.ДлительнаяОперацияОбновлениеТНВЭД.Видимость = Ложь;
	Элементы.ОбновитьТНВЭД.Доступность = Истина;
	АктуализироватьСостояниеОбновленияТНВЭД();
	
	ОтключитьОбработчикОжидания("ПроверитьОбновлениеТНВЭД");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьОбновлениеТНВЭДНаСервере(РазделениеВключено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если РазделениеВключено Тогда
		КлючЗадания = "ОбновлениеТНВЭД" + Строка(ПараметрыСеанса.ОбластьДанныхЗначение);
	Иначе
		КлючЗадания = "ОбновлениеТНВЭД";
	КонецЕсли;
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ", КлючЗадания));
	
	Результат = Новый Структура;
	
	Если Не Задания.Количество() 
		Или Задания[0].Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Результат.Вставить("Ошибка");
	ИначеЕсли Задания[0].Состояние <> СостояниеФоновогоЗадания.Активно Тогда
		Результат.Вставить("Успешно");
	ИначеЕсли Задания[0].Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Результат.Вставить("Активно");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// РаботаСНоменклатурой.ОблачныеКлассификаторы
&НаКлиенте
Процедура Подключаемый_ПодобратьИзСервисаЭлементыТНВЭД(Команда)
	
	АльтернативныйСпособПодбора = Новый ОписаниеОповещения("ОткрытьПодборЭлементовИзМакета", ЭтотОбъект);
	НастройкиРежима = Новый Структура("АльтернативныйСпособПодбора", АльтернативныйСпособПодбора);
	ОблачныеКлассификаторыКлиент.ПодобратьИзСервисаЭлементыТНВЭД(НастройкиРежима);
	
КонецПроцедуры
// Конец РаботаСНоменклатурой.ОблачныеКлассификаторы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОткрытьПодборЭлементовИзМакета(Результат, ДополнительныеПараметры) Экспорт
	
	ОткрытьФорму("Справочник.КлассификаторТНВЭД.Форма.ФормаПодбораИзМакета");
	
КонецФункции

&НаСервере
Процедура АктуализироватьСостояниеОбновленияТНВЭД()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаПоследнегоОбновленияТНВЭД = Константы["ДатаСинхронизацииТНВЭД"].Получить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ЗначениеЗаполнено(ДатаПоследнегоОбновленияТНВЭД) Тогда
		ДатаПоследнегоОбновленияТНВЭД = МестноеВремя(ДатаПоследнегоОбновленияТНВЭД, ЧасовойПоясСеанса());
		Элементы.СостояниеОбновленияТНВЭД.Заголовок = СтрШаблон(НСтр("ru = 'Последнее обновление %1'"), Формат(ДатаПоследнегоОбновленияТНВЭД, "ДЛФ=DDT"));
	Иначе
		Элементы.СостояниеОбновленияТНВЭД.Заголовок = НСтр("ru = 'Обновление не выполнялось'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
		
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьИзКлассификатора()
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей.Вставить("Note", "ДатаНачалаДействия");
	
	ОбщегоНазначенияБПКлиент.ОткрытьФормуПодбораИзКлассификатора(
		"КлассификаторТНВЭД", "Справочник.КлассификаторТНВЭД.КлассификаторТНВЭД2022", НСтр("ru = 'Классификатор ТНВЭД'"), ЭтаФорма, СоответствиеПолей);
КонецПроцедуры

#КонецОбласти
