
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьНастройкиСрока(Ложь);
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписи.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СоздатьЗадачиВРегистреСпискаЗадач();
	Оповестить("СписокЗадачБухгалтера_Изменение");
	Оповестить("ОбновитьСписокЗадачБухгалтера");        
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Периодичность.
//
&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	ОпределитьНастройкиСрока(Истина);
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Архив.
//
&НаКлиенте
Процедура АрхивПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда

		Если НЕ ЗначениеЗаполнено(Объект.Срок) Тогда	
			ТекстСообщения = НСтр("ru = 'Сначала необходимо заполнить срок.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Срок");
			Объект.Архив = НЕ Объект.Архив;
			Возврат;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		Если Объект.Архив Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросАрхивацияЗадачи", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru = 'Данная задача будет исключена из списка задач. Продолжить выполнение операции?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
		Иначе
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросАрхивацияЗадачи", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru = 'Данная задача будет включена в список задач. Продолжить выполнение операции?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

// Процедура - действия при ответе на вопрос об изменении поля Архив.
//
&НаКлиенте
Процедура ОтветНаВопросАрхивацияЗадачи(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Если Объект.Архив Тогда
			ИсключитьНевыполненныеЗадачиИзРегистраСпискаЗадач();	
		КонецЕсли;	
		
		Записать();
		
		Оповестить("СписокЗадачБухгалтера_Изменение");
		Оповестить("ОбновитьСписокЗадачБухгалтера");
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Объект.Архив = НЕ Объект.Архив;	
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()

	Элементы.Срок.ТолькоПросмотр = Объект.Периодичность = 0;
		
КонецПроцедуры

// Процедура по полю Периодичность определяет тип и список выбора поля Срок.
//
&НаСервере
Процедура ОпределитьНастройкиСрока(ОчиститьСрок)

	Если ОчиститьСрок Тогда
		Объект.Срок = Неопределено;
	КонецЕсли;	
		
	// Неделя
	Если Объект.Периодичность = 1 Тогда
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Число"));
		ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);		
		Элементы.Срок.ОграничениеТипа = ДопустимыйТип;
		
		Элементы.Срок.РежимВыбораИзСписка = Истина;
		
		Элементы.Срок.СписокВыбора.Очистить();
		Элементы.Срок.СписокВыбора.Добавить(1, НСтр("ru = 'Понедельник'"));
		Элементы.Срок.СписокВыбора.Добавить(2, НСтр("ru = 'Вторник'"));
		Элементы.Срок.СписокВыбора.Добавить(3, НСтр("ru = 'Среда'"));
		Элементы.Срок.СписокВыбора.Добавить(4, НСтр("ru = 'Четверг'"));
		Элементы.Срок.СписокВыбора.Добавить(5, НСтр("ru = 'Пятница'"));
		Элементы.Срок.СписокВыбора.Добавить(6, НСтр("ru = 'Суббота'"));
		Элементы.Срок.СписокВыбора.Добавить(7, НСтр("ru = 'Воскресенье'"));
		
		Элементы.Срок.Заголовок = НСтр("ru = 'Срок (день недели)'");
		
	// Месяц
	ИначеЕсли Объект.Периодичность = 2 Тогда
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Число"));
		ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);		
		Элементы.Срок.ОграничениеТипа = ДопустимыйТип;
	
		Элементы.Срок.РежимВыбораИзСписка = Истина;
		Элементы.Срок.СписокВыбора.Очистить();
		
		Для ДеньМесяца = 1 По 31 Цикл
			Элементы.Срок.СписокВыбора.Добавить(ДеньМесяца, ДеньМесяца);	
		КонецЦикла;	
		
		Элементы.Срок.Заголовок = НСтр("ru = 'Срок (день месяца)'");
		
	// Квартал
	ИначеЕсли Объект.Периодичность = 3 Тогда
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Дата"));
		ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);		
		Элементы.Срок.ОграничениеТипа = ДопустимыйТип;
		
		Элементы.Срок.РежимВыбораИзСписка = Ложь;
		
		Элементы.Срок.Заголовок = НСтр("ru = 'Срок (дата)'");
		
	// Год
	ИначеЕсли Объект.Периодичность = 4 Тогда
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Дата"));
		ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);		
		Элементы.Срок.ОграничениеТипа = ДопустимыйТип;
		
		Элементы.Срок.РежимВыбораИзСписка = Ложь;
		
		Элементы.Срок.Заголовок = НСтр("ru = 'Срок (дата)'");
		
	// Произвольно
	ИначеЕсли Объект.Периодичность = 5 Тогда
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("Дата"));
		ДопустимыйТип = Новый ОписаниеТипов(МассивТипов);		
		Элементы.Срок.ОграничениеТипа = ДопустимыйТип;
		
		Элементы.Срок.РежимВыбораИзСписка = Ложь;	
		
		Элементы.Срок.Заголовок = НСтр("ru = 'Срок (дата)'");
	КонецЕсли;
	
КонецПроцедуры

// Процедура удаления записей из РС "СписокЗадачБухгалтера" при установке значения ИСТИНА поля Архив.
//
&НаСервере
Процедура ИсключитьНевыполненныеЗадачиИзРегистраСпискаЗадач()

	НаборЗаписей = РегистрыСведений.СписокЗадачБухгалтера.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задача.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	МассивЗаписейДляУдаления = Новый Массив();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если НЕ Запись.Выполнено Тогда
			
			МассивЗаписейДляУдаления.Добавить(Запись);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Для Каждого СтрокаМассива Из МассивЗаписейДляУдаления Цикл
		
		НаборЗаписей.Удалить(СтрокаМассива);		
		
	КонецЦикла;
	
	НаборЗаписей.Записать();	
КонецПроцедуры

// Процедура создания записей в РС "СписокЗадачБухгалтера" нового элемента.
//
&НаСервере
Процедура СоздатьЗадачиВРегистреСпискаЗадач()

	НаборЗаписей = РегистрыСведений.СписокЗадачБухгалтера.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Задача.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Задача", Объект.Ссылка);
		
		ТаблицаЗадач = ОбщегоНазначенияБПСервер.ЗадачиБухгалтера(Истина);
		МассивЗадач  = ТаблицаЗадач.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаМассива Из МассивЗадач Цикл
			Запись = НаборЗаписей.Добавить();	
			ЗаполнитьЗначенияСвойств(Запись, СтрокаМассива);
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
