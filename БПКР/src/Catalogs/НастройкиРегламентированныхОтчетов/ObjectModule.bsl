#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьНастройкиБаланс() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполненияНастройкиБаланс").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	// Заполнение НастройкиСтрок.
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		СчетУчета = СокрЛП(СтрокаТаблицыЗначений.СчетУчета);
		Формула = СокрЛП(СтрокаТаблицыЗначений.Формула);
		Знак = СокрЛП(СтрокаТаблицыЗначений.Знак);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		// Пропуск не настраеваемых строк.
		Если ВРег(ЭтоЗаголовок) = "ИСТИНА"
			Или Формула = "" Тогда 
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = НастройкиСтрок.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчета);
		СтрокаТабличнойЧасти.Формула = ?(ЗначениеЗаполнено(Формула), Перечисления.Формулы[Формула], Перечисления.Формулы.ПустаяСсылка());
		СтрокаТабличнойЧасти.Знак = ?(ЗначениеЗаполнено(Знак), Перечисления.ПлюсМинус[Знак], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, НаименованиеСтрокиКырг, ЭтоЗаголовок");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		НаименованиеСтрокиКырг = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтрокиКырг);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.НаименованиеСтрокиКырг = НаименованиеСтрокиКырг;
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
	КонецЦикла;
	
	ЗаполнитьКлючиСвязи("НастройкиСтрок");

КонецПроцедуры

Процедура ЗаполнитьНастройкиОПУ() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполненияНастройкиОПУ").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	// Заполнение НастройкиСтрок.
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		СчетУчета = СокрЛП(СтрокаТаблицыЗначений.СчетУчета);
		Формула = СокрЛП(СтрокаТаблицыЗначений.Формула);
		Знак = СокрЛП(СтрокаТаблицыЗначений.Знак);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		// Пропуск не настраеваемых строк.
		Если ВРег(ЭтоЗаголовок) = "ИСТИНА"
			Или Формула = "" Тогда 
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти = НастройкиСтрок.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчета);
		СтрокаТабличнойЧасти.Формула = ?(ЗначениеЗаполнено(Формула), Перечисления.Формулы[Формула], Перечисления.Формулы.ПустаяСсылка());
		СтрокаТабличнойЧасти.Знак = ?(ЗначениеЗаполнено(Знак), Перечисления.ПлюсМинус[Знак], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, НаименованиеСтрокиКырг, ЭтоЗаголовок, ЗнакГруппы");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		НаименованиеСтрокиКырг = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтрокиКырг);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		ЗнакГруппы = СокрЛП(СтрокаТаблицыЗначений.ЗнакГруппы);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.НаименованиеСтрокиКырг = НаименованиеСтрокиКырг;
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
		СтрокаТабличнойЧасти.ЗнакГруппы = ?(ЗначениеЗаполнено(ЗнакГруппы), Перечисления.ПлюсМинус[ЗнакГруппы], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	ЗаполнитьКлючиСвязи("НастройкиСтрок");
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиОДДС() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполненияНастройкиОДДС").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	// Заполнение НастройкиСтрок.
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		СчетДт = СокрЛП(СтрокаТаблицыЗначений.СчетДт);
		СчетКт = СокрЛП(СтрокаТаблицыЗначений.СчетКт);
		Формула = СокрЛП(СтрокаТаблицыЗначений.Формула);
		Знак = СокрЛП(СтрокаТаблицыЗначений.Знак);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		// Пропуск не настраеваемых строк.
		Если ВРег(ЭтоЗаголовок) = "ИСТИНА"
			Или Формула = "" Тогда 
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти = НастройкиСтрокОДДС.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетДт);
		СтрокаТабличнойЧасти.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетКт);
		СтрокаТабличнойЧасти.Формула = ?(ЗначениеЗаполнено(Формула), Перечисления.Формулы[Формула], Перечисления.Формулы.ПустаяСсылка());
		СтрокаТабличнойЧасти.Знак = ?(ЗначениеЗаполнено(Знак), Перечисления.ПлюсМинус[Знак], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, НаименованиеСтрокиКырг, ЭтоЗаголовок, ЗнакГруппы");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		НаименованиеСтрокиКырг = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтрокиКырг);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		ЗнакГруппы = СокрЛП(СтрокаТаблицыЗначений.ЗнакГруппы);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.НаименованиеСтрокиКырг = НаименованиеСтрокиКырг;
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
		СтрокаТабличнойЧасти.ЗнакГруппы = ?(ЗначениеЗаполнено(ЗнакГруппы), Перечисления.ПлюсМинус[ЗнакГруппы], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	ЗаполнитьКлючиСвязи("НастройкиСтрокОДДС");
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиОДДСПоСтатьям() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполненияНастройкиОДДС").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, НаименованиеСтрокиКырг, ЭтоЗаголовок, ЗнакГруппы");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		НаименованиеСтрокиКырг = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтрокиКырг);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		ЗнакГруппы = СокрЛП(СтрокаТаблицыЗначений.ЗнакГруппы);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.НаименованиеСтрокиКырг = НаименованиеСтрокиКырг;
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
		СтрокаТабличнойЧасти.ЗнакГруппы = ?(ЗначениеЗаполнено(ЗнакГруппы), Перечисления.ПлюсМинус[ЗнакГруппы], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	// Заполнение НастройкиСтрок.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДвиженияДенежныхСредств.КодСтроки КАК КодСтроки,
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДвиженияДенежныхСредств,
		|	ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт) КАК Формула,
		|	ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Плюс) КАК Знак
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|ГДЕ
		|	НЕ СтатьиДвиженияДенежныхСредств.ЭтоГруппа
		|	И НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления
		|	И НЕ СтатьиДвиженияДенежныхСредств.КодСтроки = """"
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТабличнойЧасти = НастройкиСтрокОДДСПоСтатьям.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаДетальныеЗаписи);
	КонецЦикла;

	ЗаполнитьКлючиСвязи("НастройкиСтрокОДДСПоСтатьям");
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиОИК() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполненияНастройкиОИК").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	// Заполнение НастройкиСтрок.
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		СчетУчета = СокрЛП(СтрокаТаблицыЗначений.СчетУчета);
		Формула = СокрЛП(СтрокаТаблицыЗначений.Формула);
		Знак = СокрЛП(СтрокаТаблицыЗначений.Знак);
		ВидКапитала = СокрЛП(СтрокаТаблицыЗначений.ВидКапитала);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		СчетДт = СокрЛП(СтрокаТаблицыЗначений.СчетДт);
		СчетКт = СокрЛП(СтрокаТаблицыЗначений.СчетКт);
		
		// Пропуск не настраеваемых строк.
		Если ВРег(ЭтоЗаголовок) = "ИСТИНА"
			Или Формула = "" Тогда 
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти = НастройкиСтрокОИК.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчета);
		СтрокаТабличнойЧасти.Формула = ?(ЗначениеЗаполнено(Формула), Перечисления.Формулы[Формула], Перечисления.Формулы.ПустаяСсылка());
		СтрокаТабличнойЧасти.Знак = ?(ЗначениеЗаполнено(Знак), Перечисления.ПлюсМинус[Знак], Перечисления.ПлюсМинус.ПустаяСсылка());
		СтрокаТабличнойЧасти.ВидКапитала = ?(ЗначениеЗаполнено(ВидКапитала), Перечисления.ВидыКапитала[ВидКапитала], Перечисления.ВидыКапитала.ПустаяСсылка());
		СтрокаТабличнойЧасти.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетДт);
		СтрокаТабличнойЧасти.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетКт);
	КонецЦикла;
	
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, НаименованиеСтрокиКырг, ЭтоЗаголовок, ЗнакГруппы");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		НаименованиеСтрокиКырг = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтрокиКырг);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		ЗнакГруппы = СокрЛП(СтрокаТаблицыЗначений.ЗнакГруппы);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.НаименованиеСтрокиКырг = НаименованиеСтрокиКырг;
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
		СтрокаТабличнойЧасти.ЗнакГруппы = ?(ЗначениеЗаполнено(ЗнакГруппы), Перечисления.ПлюсМинус[ЗнакГруппы], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	ЗаполнитьКлючиСвязи("НастройкиСтрокОИК");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьКлючиСвязи(ИмяПодчиненнойТабличнойЧасти)

	// Формирование ключа связи.
	КлючСвязи = 1;
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОтчета Цикл 
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
		НайденныеСтроки = ЭтотОбъект[ИмяПодчиненнойТабличнойЧасти].НайтиСтроки(Новый Структура("КодСтроки", СтрокаТабличнойЧасти.КодСтроки));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			НайденнаяСтрока.КлючСвязи = КлючСвязи;
		КонецЦикла;	
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьКлючСвязи()
	
#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли