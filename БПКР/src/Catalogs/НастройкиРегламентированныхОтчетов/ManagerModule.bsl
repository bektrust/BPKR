#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить по умолчанию
// Выполняет первоночальное заполнение
Процедура ЗаполнитьПоУмолчанию() Экспорт 
	СправочникМенеджер = Справочники.НастройкиРегламентированныхОтчетов;
	
	// Настроки строк Баланса.
	НаименованиеСправочника = НСтр("ru = 'Настройка строк Баланса (по умолчанию)'");
	СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(НаименованиеСправочника, Истина);
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = НаименованиеСправочника;
		СправочникОбъект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс;
	Иначе
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		СправочникОбъект.СтрокиОтчета.Очистить();
		СправочникОбъект.НастройкиСтрок.Очистить();
	КонецЕсли;	
	
	СправочникОбъект.ЗаполнитьНастройкиБаланс();
	
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);

	// Настроки строк ОПУ (Отчет о прибылях и убытках).
	НаименованиеСправочника = НСтр("ru = 'Настройка строк ОПУ (по умолчанию)'");
	СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(НаименованиеСправочника, Истина);
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = НаименованиеСправочника;
		СправочникОбъект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ;
	Иначе
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		СправочникОбъект.СтрокиОтчета.Очистить();
		СправочникОбъект.НастройкиСтрок.Очистить();
	КонецЕсли;	
	
	СправочникОбъект.ЗаполнитьНастройкиОПУ();
	
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	
	// Настроки строк ОДДС (Отчет о движении денежных средств).
	НаименованиеСправочника = НСтр("ru = 'Настройка строк ОДДС (по умолчанию)'");
	СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(НаименованиеСправочника, Истина);
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = НаименованиеСправочника;
		СправочникОбъект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС;
	Иначе
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		СправочникОбъект.СтрокиОтчета.Очистить();
		СправочникОбъект.НастройкиСтрок.Очистить();
	КонецЕсли;	
	
	СправочникОбъект.ЗаполнитьНастройкиОДДС();
	
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	
	// Настроки строк ОИК (Отчет об изменениях в капитале).
	НаименованиеСправочника = НСтр("ru = 'Настройка строк ОИК (по умолчанию)'");
	СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(НаименованиеСправочника, Истина);
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = НаименованиеСправочника;
		СправочникОбъект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК;
	Иначе
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		СправочникОбъект.СтрокиОтчета.Очистить();
		СправочникОбъект.НастройкиСтрок.Очистить();
	КонецЕсли;	
	
	СправочникОбъект.ЗаполнитьНастройкиОИК();
	
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	
КонецПроцедуры // ЗаполнитьПоУмолчанию()	

// Функция для проверки настроек.
//
// Параметры:
//	ВидОтчета - Перечисления.ВидыРегламентированныхОтчетов - Вид регламентированного отчета.
//	СтруктураТаблиц - Структура - структура таблиц (из табличных частей спр. "НастройкиРегламентированныхОтчетов").
//
// Возвращаемое значение:
//	МассивСообщений - Массив - массив сообщений с описанием ошибок.
//
Функция ПолучитьДанныеПроверкиНастроек(ВидОтчета, СтруктураТаблиц) Экспорт 
	МассивСообщений = Новый Массив();	
	
	Если ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс Тогда 
		// 1. Список счетов учета.
		// 5. Настройки.
		// 6. Контроль заполнения всех счетов в настройках, за исключением временных.
		// 7. Контроль дублирования счетов за исключением активно-пассивных.
		// 8. Контроль заполнения счетов в строках заголовков и групп.
		Запрос = Новый Запрос;
		Запрос.Текст = 
			// 1. Список счетов учета. 
			"ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК СчетУчета
			|ПОМЕСТИТЬ ВременнаяТаблицаСписокСчетов
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
			|	И НЕ Хозрасчетный.Временный
			|	И НЕ Хозрасчетный.Забалансовый
			|	И НЕ Хозрасчетный.Ссылка В (&МассивИсключений)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НастройкиСтрок.КлючСвязи КАК КлючСвязи,
			|	НастройкиСтрок.СчетУчета КАК СчетУчета,
			|	НастройкиСтрок.НомерСтроки КАК НомерСтроки,
			|	НастройкиСтрок.Формула КАК Формула,
			|	НастройкиСтрок.КодСтроки КАК КодСтроки
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
			|ИЗ
			|	&НастройкиСтрок КАК НастройкиСтрок
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи,
			|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
			|	ВременнаяТаблицаНастройкиСтрок.НомерСтроки КАК НомерСтроки,
			|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
			|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
			|	Хозрасчетный.Вид КАК ВидСчета
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрокХозрасчетный
			|ИЗ
			|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|		ПО ВременнаяТаблицаНастройкиСтрок.СчетУчета = Хозрасчетный.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтрокиОтчета.КлючСвязи КАК КлючСвязи,
			|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
			|	СтрокиОтчета.Группа КАК Группа
			|ПОМЕСТИТЬ ВременнаяТаблицаСтрокиОтчета
			|ИЗ
			|	&СтрокиОтчета КАК СтрокиОтчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиСтрокХозрасчетный.СчетУчета КАК СчетУчета,
			|	ВременнаяТаблицаНастройкиСтрокХозрасчетный.НомерСтроки КАК НомерСтроки,
			|	ВременнаяТаблицаНастройкиСтрокХозрасчетный.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаНастройкиСтрокХозрасчетный.Формула КАК Формула,
			|	ВременнаяТаблицаНастройкиСтрокХозрасчетный.ВидСчета КАК ВидСчета,
			|	ВременнаяТаблицаСтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
			|	ВременнаяТаблицаСтрокиОтчета.Группа КАК Группа
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
			|ИЗ
			|	ВременнаяТаблицаСтрокиОтчета КАК ВременнаяТаблицаСтрокиОтчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиСтрокХозрасчетный КАК ВременнаяТаблицаНастройкиСтрокХозрасчетный
			|		ПО ВременнаяТаблицаСтрокиОтчета.КлючСвязи = ВременнаяТаблицаНастройкиСтрокХозрасчетный.КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаСписокСчетов.СчетУчета КАК СчетУчета
			|ИЗ
			|	ВременнаяТаблицаСписокСчетов КАК ВременнаяТаблицаСписокСчетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|		ПО ВременнаяТаблицаСписокСчетов.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
			|ГДЕ
			|	ВременнаяТаблицаНастройки.НомерСтроки ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиДубли.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаНастройкиДубли.СчетУчета КАК СчетУчета
			|ИЗ
			|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройкиДубли
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|		ПО ВременнаяТаблицаНастройкиДубли.НомерСтроки <> ВременнаяТаблицаНастройки.НомерСтроки
			|			И ВременнаяТаблицаНастройкиДубли.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
			|			И ВременнаяТаблицаНастройкиДубли.Формула = ВременнаяТаблицаНастройки.Формула
			|ГДЕ
			|	НЕ ВременнаяТаблицаНастройкиДубли.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
			|	И ВременнаяТаблицаНастройкиДубли.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	КодСтроки
			|ИТОГИ
			|	МАКСИМУМ(КодСтроки)
			|ПО
			|	СчетУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки
			|ИЗ
			|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|ГДЕ
			|	ВременнаяТаблицаНастройки.ЭтоЗаголовок";
		Запрос.УстановитьПараметр("СтрокиОтчета", СтруктураТаблиц.СтрокиОтчета);
		Запрос.УстановитьПараметр("НастройкиСтрок", СтруктураТаблиц.НастройкиСтрок);
		МассивИсключений = Новый Массив;
		МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.Вспомогательный); // 0000
		МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.СводДоходовИРасходов); // 5999
		Запрос.УстановитьПараметр("МассивИсключений", МассивИсключений);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Контроль заполнения всех счетов в настройках, за исключением временных.
		Если НЕ МассивРезультатов[5].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[5].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" не указан в настройках.'"), ВыборкаИзРезультатаЗапроса.СчетУчета));
			КонецЦикла;
		КонецЕсли;		
		
		// Контроль дублирования счетов за исключением активно-пассивных.
		Если НЕ МассивРезультатов[6].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ВыборкаДетальныеЗаписи = ВыборкаИзРезультатаЗапроса.Выбрать();
				
				КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
				Индекс = 1;
				СтрокаКодов = "";
				МассивКодов = Новый Массив();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
						Продолжить;	
					КонецЕсли;	
						
					Если СтрокаКодов = "" Тогда
						СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
						
					ИначеЕсли Индекс = КоличествоСтрок Тогда
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
						
					Иначе
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
					КонецЕсли;
					
					МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
					Индекс = Индекс + 1;	 
				КонецЦикла;
				
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" указывается повторно в строках с кодами %2.'"), 
					ВыборкаИзРезультатаЗапроса.СчетУчета, СтрокаКодов));
			КонецЦикла;
		КонецЕсли;
		
		// Контроль заполнения счетов в строках заголовков и групп.
		Если НЕ МассивРезультатов[7].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[7].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом %1 следует очистить настройки.'"), ВыборкаИзРезультатаЗапроса.КодСтроки));
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ Тогда	
		// 1. Список счетов учета.
		// 4. Настройки.
		// 5. Контроль заполнения всех счетов в настройках (только временные).
		// 6. Контроль дублирования счетов за исключением.
		// 7. Контроль заполнения счетов в строках заголовков и групп.
		Запрос = Новый Запрос;
		Запрос.Текст = 
			// 1. Список счетов учета. 
			"ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК СчетУчета
			|ПОМЕСТИТЬ ВременнаяТаблицаСписокСчетов
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках
			|	И Хозрасчетный.Временный
			|	И НЕ Хозрасчетный.Забалансовый
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 2. Настройки строк.
			|ВЫБРАТЬ
			|	НастройкиСтрок.КлючСвязи КАК КлючСвязи,
			|	НастройкиСтрок.СчетУчета КАК СчетУчета,
			|	НастройкиСтрок.НомерСтроки КАК НомерСтроки,
			|	НастройкиСтрок.Формула КАК Формула,
			|	НастройкиСтрок.КодСтроки КАК КодСтроки
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
			|ИЗ
			|	&НастройкиСтрок КАК НастройкиСтрок
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 3. Строки отчета.
			|ВЫБРАТЬ
			|	СтрокиОтчета.КлючСвязи КАК КлючСвязи,
			|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
			|	СтрокиОтчета.Группа КАК Группа
			|ПОМЕСТИТЬ ВременнаяТаблицаСтрокиОтчета
			|ИЗ
			|	&СтрокиОтчета КАК СтрокиОтчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 4. Настройки.
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
			|	ВременнаяТаблицаНастройкиСтрок.НомерСтроки КАК НомерСтроки,
			|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
			|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаСтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
			|	ВременнаяТаблицаСтрокиОтчета.Группа КАК Группа
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
			|ИЗ
			|	ВременнаяТаблицаСтрокиОтчета КАК ВременнаяТаблицаСтрокиОтчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
			|		ПО ВременнаяТаблицаСтрокиОтчета.КлючСвязи = ВременнаяТаблицаНастройкиСтрок.КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 5. Контроль заполнения всех счетов в настройках.
			|ВЫБРАТЬ
			|	ВременнаяТаблицаСписокСчетов.СчетУчета КАК СчетУчета
			|ИЗ
			|	ВременнаяТаблицаСписокСчетов КАК ВременнаяТаблицаСписокСчетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|		ПО ВременнаяТаблицаСписокСчетов.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
			|ГДЕ
			|	ВременнаяТаблицаНастройки.НомерСтроки ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 6. Контроль дублирования счетов.
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиДубли.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаНастройкиДубли.СчетУчета КАК СчетУчета
			|ИЗ
			|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройкиДубли
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|		ПО ВременнаяТаблицаНастройкиДубли.НомерСтроки <> ВременнаяТаблицаНастройки.НомерСтроки
			|			И ВременнаяТаблицаНастройкиДубли.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
			|			И ВременнаяТаблицаНастройкиДубли.Формула = ВременнаяТаблицаНастройки.Формула
			|ГДЕ
			|	ВременнаяТаблицаНастройкиДубли.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	КодСтроки
			|ИТОГИ
			|	МАКСИМУМ(КодСтроки)
			|ПО
			|	СчетУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// 7. Контроль заполнения счетов в строках заголовков и групп.
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки
			|ИЗ
			|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
			|ГДЕ
			|	ВременнаяТаблицаНастройки.ЭтоЗаголовок";
		Запрос.УстановитьПараметр("СтрокиОтчета", СтруктураТаблиц.СтрокиОтчета);
		Запрос.УстановитьПараметр("НастройкиСтрок", СтруктураТаблиц.НастройкиСтрок);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Контроль заполнения всех счетов в настройках.
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" не указан в настройках.'"), ВыборкаИзРезультатаЗапроса.СчетУчета));
			КонецЦикла;
		КонецЕсли;		
		
		// Контроль дублирования счетов.
		Если НЕ МассивРезультатов[5].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ВыборкаДетальныеЗаписи = ВыборкаИзРезультатаЗапроса.Выбрать();
				
				КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
				Индекс = 1;
				СтрокаКодов = "";
				МассивКодов = Новый Массив();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
						Продолжить;	
					КонецЕсли;	
						
					Если СтрокаКодов = "" Тогда
						СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
						
					ИначеЕсли Индекс = КоличествоСтрок Тогда
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
						
					Иначе
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
					КонецЕсли;
					
					МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
					Индекс = Индекс + 1;	 
				КонецЦикла;
				
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" указывается повторно в строках с кодами %2.'"), 
					ВыборкаИзРезультатаЗапроса.СчетУчета, СтрокаКодов));
			КонецЦикла;
		КонецЕсли;
		
		// Контроль заполнения счетов в строках заголовков и групп.
		Если НЕ МассивРезультатов[6].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом %1 следует очистить настройки.'"), ВыборкаИзРезультатаЗапроса.КодСтроки));
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС Тогда
		
		ИспользоватьСтатьиДвиженияДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств");
		
		Если ИспользоватьСтатьиДвиженияДенежныхСредств Тогда
			Запрос = Новый Запрос;    
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ТаблицаНастройкиОДДСПоСтатьям.СтатьяДвиженияДенежныхСредств,
				|	ТаблицаНастройкиОДДСПоСтатьям.НомерСтроки,
				|	ТаблицаНастройкиОДДСПоСтатьям.Формула,
				|   ТаблицаНастройкиОДДСПоСтатьям.КодСтроки
				|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиОДДСПоСтатьям
				|ИЗ
				|	&НастройкиОДДСПоСтатьям КАК ТаблицаНастройкиОДДСПоСтатьям
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СтатьиДвиженияДенежныхСредств.Ссылка.Наименование КАК Статья,
				|	ТаблицаНастройкиОДДСПоСтатьям.КодСтроки
				|ИЗ
				|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиОДДСПоСтатьям КАК ТаблицаНастройкиОДДСПоСтатьям
				|		ПО СтатьиДвиженияДенежныхСредств.Ссылка = ТаблицаНастройкиОДДСПоСтатьям.СтатьяДвиженияДенежныхСредств
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.КодСтроки КАК КодСтроки,
				|	ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
				|ИЗ
				|	ВременнаяТаблицаНастройкиОДДСПоСтатьям КАК ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиОДДСПоСтатьям КАК ВременнаяТаблицаНастройкиОДДСПоСтатьям
				|		ПО ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.НомерСтроки <> ВременнаяТаблицаНастройкиОДДСПоСтатьям.НомерСтроки
				|			И ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.СтатьяДвиженияДенежныхСредств = ВременнаяТаблицаНастройкиОДДСПоСтатьям.СтатьяДвиженияДенежныхСредств
				|			И ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.Формула = ВременнаяТаблицаНастройкиОДДСПоСтатьям.Формула
				|ГДЕ
				|	ВременнаяТаблицаНастройкиОДДСПоСтатьямДубли.СтатьяДвиженияДенежныхСредств <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
				|
				|УПОРЯДОЧИТЬ ПО
				|	КодСтроки
				|ИТОГИ
				|	МАКСИМУМ(КодСтроки)
				|ПО
				|	СтатьяДвиженияДенежныхСредств";
			Запрос.УстановитьПараметр("НастройкиОДДСПоСтатьям", СтруктураТаблиц.НастройкиОДДСПоСтатьям);		   	
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Если НЕ МассивРезультатов[1].Пустой() Тогда
				Выборка = МассивРезультатов[1].Выбрать();
				
				Пока Выборка.Следующий() Цикл
					Если ТипЗнч(Выборка.КодСтроки) = Тип("Null") Тогда
						МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для статья движения денежных средств %1 нет настройки.'"), 
																Выборка.Статья));	
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
				
			// Контроль дублирования статей.
			Если НЕ МассивРезультатов[2].Пустой() Тогда
				ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаИзРезультатаЗапроса.Выбрать();
					
					КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
					Индекс = 1;
					СтрокаКодов = "";
					МассивКодов = Новый Массив();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
							Продолжить;	
						КонецЕсли;	
							
						Если СтрокаКодов = "" Тогда
							СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
							
						ИначеЕсли Индекс = КоличествоСтрок Тогда
							 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
							
						Иначе
							 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
						КонецЕсли;
						
						МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
						Индекс = Индекс + 1;	 
					КонецЦикла;
					
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Статья ДДС ""%1"" указывается повторно в строках с кодами %2.'"), 
						ВыборкаИзРезультатаЗапроса.СтатьяДвиженияДенежныхСредств, СтрокаКодов));
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
				|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
				|ПОМЕСТИТЬ ВременнаяТаблицаСчета
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			,
				|			,
				|			СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе))
				|				ИЛИ СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
				|			,
				|			СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
				|			,
				|			) КАК ХозрасчетныйОборотыДтКт
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОборотыДтКт.СчетДт,
				|	ХозрасчетныйОборотыДтКт.СчетКт
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			,
				|			,
				|			СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
				|			,
				|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе))
				|				ИЛИ СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
				|			,
				|			) КАК ХозрасчетныйОборотыДтКт
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВременнаяТаблицаСчета.СчетДт КАК СчетДт,
				|	ВременнаяТаблицаСчета.СчетКт КАК СчетКт
				|ПОМЕСТИТЬ ВременнаяТаблицаСочетанияСчетов
				|ИЗ
				|	ВременнаяТаблицаСчета КАК ВременнаяТаблицаСчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаНастройкиОДДС.СчетДт КАК СчетДт,
				|	ТаблицаНастройкиОДДС.СчетКт КАК СчетКт,
				|	ТаблицаНастройкиОДДС.НомерСтроки КАК НомерСтроки,
				|	ТаблицаНастройкиОДДС.Формула КАК Формула,
				|	ТаблицаНастройкиОДДС.КодСтроки КАК КодСтроки
				|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиОДДС
				|ИЗ
				|	&НастройкиОДДС КАК ТаблицаНастройкиОДДС
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВременнаяТаблицаСочетанияСчетов.СчетДт КАК СчетДт,
				|	ВременнаяТаблицаСочетанияСчетов.СчетКт КАК СчетКт,
				|	ТаблицаНастройкиОДДС.КодСтроки КАК КодСтроки
				|ИЗ
				|	ВременнаяТаблицаСочетанияСчетов КАК ВременнаяТаблицаСочетанияСчетов
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиОДДС КАК ТаблицаНастройкиОДДС
				|		ПО ВременнаяТаблицаСочетанияСчетов.СчетДт = ТаблицаНастройкиОДДС.СчетДт
				|			И ВременнаяТаблицаСочетанияСчетов.СчетКт = ТаблицаНастройкиОДДС.СчетКт
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВременнаяТаблицаНастройкиОДДСДубли.КодСтроки КАК КодСтроки,
				|	ВременнаяТаблицаНастройкиОДДСДубли.СчетДт КАК СчетДт,
				|	ВременнаяТаблицаНастройкиОДДСДубли.СчетКт КАК СчетКт
				|ИЗ
				|	ВременнаяТаблицаНастройкиОДДС КАК ВременнаяТаблицаНастройкиОДДСДубли
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиОДДС КАК ВременнаяТаблицаНастройкиОДДС
				|		ПО ВременнаяТаблицаНастройкиОДДСДубли.НомерСтроки <> ВременнаяТаблицаНастройкиОДДС.НомерСтроки
				|			И ВременнаяТаблицаНастройкиОДДСДубли.СчетДт = ВременнаяТаблицаНастройкиОДДС.СчетДт
				|			И ВременнаяТаблицаНастройкиОДДСДубли.СчетКт = ВременнаяТаблицаНастройкиОДДС.СчетКт
				|			И ВременнаяТаблицаНастройкиОДДСДубли.Формула = ВременнаяТаблицаНастройкиОДДС.Формула
				|
				|УПОРЯДОЧИТЬ ПО
				|	КодСтроки
				|ИТОГИ
				|	МАКСИМУМ(КодСтроки),
				|	МАКСИМУМ(СчетКт)
				|ПО
				|	СчетДт";
			Запрос.УстановитьПараметр("НастройкиОДДС", СтруктураТаблиц.НастройкиОДДС);		   	
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Если НЕ МассивРезультатов[3].Пустой() Тогда
				Выборка = МассивРезультатов[3].Выбрать();
				
				Пока Выборка.Следующий() Цикл
					Если ТипЗнч(Выборка.КодСтроки) = Тип("Null") Тогда
						МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для счета Дт %1 и счета Кт %2 нет настройки.'"), 
																Выборка.СчетДт,
																Выборка.СчетКт));	
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	
				
			// Контроль дублирования статей.
			Если НЕ МассивРезультатов[4].Пустой() Тогда
				ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаИзРезультатаЗапроса.Выбрать();
					
					КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
					Индекс = 1;
					СтрокаКодов = "";
					МассивКодов = Новый Массив();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
							Продолжить;	
						КонецЕсли;	
							
						Если СтрокаКодов = "" Тогда
							СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
							
						ИначеЕсли Индекс = КоличествоСтрок Тогда
							 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
							
						Иначе
							 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
						КонецЕсли;
						
						МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
						Индекс = Индекс + 1;	 
					КонецЦикла;
					
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счета учета ""%1"" и ""%2"" указываются повторно в строках с кодами %3.'"), 
						ВыборкаИзРезультатаЗапроса.СчетДт, ВыборкаИзРезультатаЗапроса.СчетКт, СтрокаКодов));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК Тогда	
		
		Запрос = Новый Запрос;    
		Запрос.Текст =
			"ВЫБРАТЬ
			|	НастройкиОИК.СчетУчета КАК СчетУчета,
			|	НастройкиОИК.Формула КАК Формула,
			|	НастройкиОИК.НомерСтроки КАК НомерСтроки,
			|	НастройкиОИК.КодСтроки КАК КодСтроки,
			|	НастройкиОИК.СчетДт КАК СчетДт,
			|	НастройкиОИК.СчетКт КАК СчетКт
			|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиОИК
			|ИЗ
			|	&НастройкиОИК КАК НастройкиОИК
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиОИКДубли.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаНастройкиОИКДубли.СчетУчета КАК СчетУчета
			|ИЗ
			|	ВременнаяТаблицаНастройкиОИК КАК ВременнаяТаблицаНастройкиОИКДубли
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиОИК КАК ВременнаяТаблицаНастройкиОИК
			|		ПО ВременнаяТаблицаНастройкиОИКДубли.НомерСтроки <> ВременнаяТаблицаНастройкиОИК.НомерСтроки
			|			И ВременнаяТаблицаНастройкиОИКДубли.СчетУчета = ВременнаяТаблицаНастройкиОИК.СчетУчета
			|			И ВременнаяТаблицаНастройкиОИКДубли.Формула = ВременнаяТаблицаНастройкиОИК.Формула
			|ГДЕ
			|	ВременнаяТаблицаНастройкиОИКДубли.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	КодСтроки
			|ИТОГИ
			|	МАКСИМУМ(КодСтроки)
			|ПО
			|	СчетУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаНастройкиОИК.СчетУчета КАК СчетУчета,
			|	ВременнаяТаблицаНастройкиОИК.Формула КАК Формула,
			|	ВременнаяТаблицаНастройкиОИК.НомерСтроки КАК НомерСтроки,
			|	ВременнаяТаблицаНастройкиОИК.КодСтроки КАК КодСтроки,
			|	ВременнаяТаблицаНастройкиОИК.СчетДт КАК СчетДт,
			|	ВременнаяТаблицаНастройкиОИК.СчетКт КАК СчетКт
			|ИЗ
			|	ВременнаяТаблицаНастройкиОИК КАК ВременнаяТаблицаНастройкиОИК";
		Запрос.УстановитьПараметр("НастройкиОИК", СтруктураТаблиц.НастройкиОИК);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		Выборка = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
		// Контроль дублирования статей.
		Пока Выборка.Следующий() Цикл
			ВыборкаДетальныеЗаписи = Выборка.Выбрать();
			
			КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
			Индекс = 1;
			СтрокаКодов = "";
			МассивКодов = Новый Массив();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
					Продолжить;	
				КонецЕсли;	
				
				Если СтрокаКодов = "" Тогда
					СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
					
				ИначеЕсли Индекс = КоличествоСтрок Тогда
					СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
					
				Иначе
					СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
				КонецЕсли;
				
				МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
				Индекс = Индекс + 1;	 
			КонецЦикла;
			
			МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" указывается повторно в строках с кодами %2.'"), 
			Выборка.СчетУчета, СтрокаКодов));
		КонецЦикла;
		
		// Контроль заполненности
		ВыборкаДетальныеЗаписи = МассивРезультатов[2].Выбрать();
		КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Формула = Перечисления.Формулы.ОборотыДтКт Тогда
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетДт) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" не указан счет Дт.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетКт) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" не указан счет Кт.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетУчета) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" нельзя указывать счет учета.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетДт) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" нельзя указывать счет Дт.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетКт) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" нельзя указывать счет Кт.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СчетУчета) Тогда
					МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом ""%1"" не указан счет учета.'"), ВыборкаДетальныеЗаписи.КодСтроки));	
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивСообщений;
КонецФункции // ПолучитьДанныеПроверкиНастроек()

#КонецОбласти

#КонецЕсли