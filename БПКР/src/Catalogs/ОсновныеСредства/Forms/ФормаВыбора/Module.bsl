#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	УстановитьСписокПодобранных();
	
	// Проинициализируем форму для отбора
	Параметры.Отбор.Свойство("Организация", Организация);
	Параметры.Отбор.Свойство("Подразделение", Подразделение);
	Параметры.Отбор.Свойство("МОЛ", МОЛ);
	Параметры.Отбор.Свойство("ДатаПримененияОтбора",ДатаПримененияОтбора);
	Параметры.Отбор.Свойство("Склад",Склад);
	Параметры.Отбор.Свойство("Непринятые",Непринятые);
	Параметры.Отбор.Свойство("Состояние", Состояние);
	Если НЕ ЗначениеЗаполнено(Склад) Тогда 
		Параметры.Отбор.Свойство("Склад", Склад);
		Элементы.Склад.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда 
		Параметры.Отбор.Свойство("Организация", Организация);
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда 
		Параметры.Отбор.Свойство("Подразделение", Подразделение);
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(МОЛ) Тогда 
		Параметры.Отбор.Свойство("МОЛ", МОЛ);
		Элементы.МОЛ.Видимость   = Ложь;
	КонецЕсли;
	
	Если  ЗначениеЗаполнено(ДатаПримененияОтбора)  Тогда
		Параметры.Отбор.Свойство("ДатаПримененияОтбора",ДатаПримененияОтбора);
		ОтборНаДату = Истина;
	КонецЕсли;	
	
	Если Непринятые  Тогда
		Параметры.Отбор.Свойство("Непринятые",Непринятые);
		Элементы.Подразделение.Видимость = Ложь;
		Элементы.МОЛ.Видимость   = Ложь;
	КонецЕсли;	
	
	ПараметрыПолученияОСОрганизаций = Новый Структура("Организация, Подразделение");
	ПараметрыПолученияОСОрганизаций.Вставить("Организация", Организация);
	ПараметрыПолученияОСОрганизаций.Вставить("Подразделение", Подразделение);
	ПараметрыПолученияОСОрганизаций.Вставить("ДатаПримененияОтбора", ДатаПримененияОтбора);
	ПараметрыПолученияОСОрганизаций.Вставить("Использовать", Истина);
	ПараметрыПолученияОСОрганизаций.Вставить("ДоступныНепринятые", ДоступныНепринятые);
	ПараметрыПолученияОСОрганизаций.Вставить("Непринятые", Непринятые);	
	ПараметрыПолученияОСОрганизаций.Вставить("МОЛ", МОЛ);
	ПараметрыПолученияОСОрганизаций.Вставить("Склад",Склад);
	ПараметрыПолученияОСОрганизаций.Вставить("Состояние", ?(ЗначениеЗаполнено(Состояние), Состояние, Неопределено));
	// Если это выбор из особенного документа, например "ПоступлениеОС"
	// показываем все ОС 
	Если Параметры.Свойство("ДоступныНепринятые") Тогда 
		ДоступныНепринятые = Параметры.ДоступныНепринятые;
	Иначе 
		ДоступныНепринятые = Организация.Пустая() И НЕ Параметры.Отбор.Свойство("Организация");
	КонецЕсли;	
	
	Если ДоступныНепринятые Тогда
		ОтключитьОтборПоОрганизацииИПодразделению = Ложь;
		Параметры.Свойство("ТекущаяСтрока", ТекущееЗначение);		
		Параметры.Отбор.Очистить();
		Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
		Возврат;
	КонецЕсли;
	
	ОтключатьОтборПоПериодуИлиОрганизации = Истина;
	ТекстНадписиИнформацииОбОтбореПоПериодуИлиОрганизации = "";
	
	Если ЗначениеЗаполнено(ОтборНаДату) Тогда 
		Если Непринятые = Истина Тогда 
			НадписьПоступившиеПринятые = НСтр("ru = 'поступившие до '");
		Иначе 
			НадписьПоступившиеПринятые = НСтр("ru = 'принятые к учету до '")
		КонецЕсли;
		
		ТекстНадписьИнформацияОбОтбореНаДату =  НСтр("ru = 'В списке отображены основные средства, '") +  НадписьПоступившиеПринятые +
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'"), 
		Формат(ДатаПримененияОтбора, "ДФ='дд ММММ гггг ""г.""'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"НадписьИнформацияОбОтбореНаДату",
		"Заголовок",
		ТекстНадписьИнформацияОбОтбореНаДату);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"НадписьИнформацияОбОтбореНаДату",
		"Видимость",
		Истина);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КартинкаИнформация2",
		"Видимость",
		Истина);
		
	КонецЕсли;
	
	УстановитьЭлементОтбора(Список, ПараметрыПолученияОСОрганизаций);
	
	Если ОтключатьОтборПоПериодуИлиОрганизации Тогда
		
		ТекстНадписиИнформацииОбОтбореПоПериодуИлиОрганизации = ТекстНадписиИнформацииОбОтбореПоПериодуИлиОрганизации
		+ " " + НСтр("ru = 'Чтобы увидеть полный список основных средств установите флажок ""Показывать все ОС"".'");
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НадписьИнформацияОбОтбореПоПериодуИлиОрганизации",
		"Заголовок",
		ТекстНадписиИнформацииОбОтбореПоПериодуИлиОрганизации);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаИнфонадписиОтбораПоОрганизации",
		"Видимость",
		Истина);
		
	КонецЕсли; 
	
	Если Параметры.МножественныйВыбор = Истина Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Список",
		"МножественныйВыбор",
		Истина);
		
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		АдресСпискаПодобранныхОС = "";
		Если Параметры.Свойство("АдресСпискаПодобранныхОС", АдресСпискаПодобранныхОС) Тогда
			Если НЕ ПустаяСтрока(АдресСпискаПодобранныхОС) Тогда
				СписокПодобранных.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(АдресСпискаПодобранныхОС));
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	
	УстановитьСписокПодобранных();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ОтключитьОтборПоПериодуИлиОрганизации.
//
&НаКлиенте
Процедура ОтключитьОтборПоПериодуИлиОрганизацииПриИзменении(Элемент)
	ЭлементыОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.Отбор, "Ссылка");
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		ЭлементОтбора.Использование = НЕ ОтключитьОтборПоОрганизацииИПодразделению;
		Если ЭлементОтбора.Использование = Ложь Тогда
			Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
			Элементы.ГруппаОтборСписка.Видимость = Ложь;
		Иначе 
			Элементы.Список.Отображение = ОтображениеТаблицы.Список;
			Элементы.ГруппаОтборСписка.Видимость = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьОповещениеОВыборе(Элемент, Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устанавливает отбор в динамическом списке
//
// Параметры:
//  Список  						- ДинамическийСписок - список, в котором устанавливается отбор
//  ПараметрыПолученияСотрудников 	- Структура - структура для отбора с полями 
// 										НачалоПериода  	- Дата - период для отбора
// 										КонецПериода  	- Дата - период для отбора
// 										Организация  	- СправочникСсылка.Организации - организация для отбора
//  									Подразделение  	- СправочникСсылка.ПодразделенияОрганизаций - подразделение для отбора
//
&НаСервереБезКонтекста
Процедура УстановитьЭлементОтбора(Список, ПараметрыПолученияОС)
	
	УчетДвиженияОСПоМОЛ 			= Константы.ФункциональнаяОпцияУчетДвиженияОСПоМОЛ.Получить();
	УчетДвиженияОСПоПодразделениям 	= Константы.ФункциональнаяОпцияУчетДвиженияОСПоПодразделениям.Получить();
	
	Запрос = Новый Запрос;
	
	Если (УчетДвиженияОСПоМОЛ ИЛИ УчетДвиженияОСПоПодразделениям) 
		И (ЗначениеЗаполнено(ПараметрыПолученияОС.Подразделение)
		ИЛИ ЗначениеЗаполнено(ПараметрыПолученияОС.МОЛ)) Тогда
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СостоянияОССрезПоследних.ОсновноеСредство
			|ПОМЕСТИТЬ ВременнаяТаблицаСостояниеОС
			|ИЗ
			|	РегистрСведений.СостоянияОС.СрезПоследних(&Период, ) КАК СостоянияОССрезПоследних
			|ГДЕ
			|	СостоянияОССрезПоследних.Состояние = &Состояние
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МестонахождениеОССрезПоследних.ОсновноеСредство
			|ПОМЕСТИТЬ ВременнаяТаблицаМестонахождениеОС
			|ИЗ
			|	РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
			|ГДЕ
			|	МестонахождениеОССрезПоследних.Подразделение = &Подразделение
			|	И МестонахождениеОССрезПоследних.Организация = &Организация
			|	И МестонахождениеОССрезПоследних.МОЛ = &МОЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблицаСостояниеОС.ОсновноеСредство
			|ИЗ
			|	ВременнаяТаблицаМестонахождениеОС КАК ВременнаяТаблицаМестонахождениеОС
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСостояниеОС КАК ВременнаяТаблицаСостояниеОС
			|		ПО ВременнаяТаблицаМестонахождениеОС.ОсновноеСредство = ВременнаяТаблицаСостояниеОС.ОсновноеСредство";
		
		Если УчетДвиженияОСПоПодразделениям Тогда 
			Запрос.УстановитьПараметр("Подразделение", ПараметрыПолученияОС.Подразделение);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "МестонахождениеОССрезПоследних.Подразделение = &Подразделение", "истина");	
		КонецЕсли;	
		
		Если УчетДвиженияОСПоМОЛ Тогда 
			Запрос.УстановитьПараметр("МОЛ", ПараметрыПолученияОС.МОЛ);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "МестонахождениеОССрезПоследних.МОЛ = &МОЛ", "истина");	
		КонецЕсли;
		
	Иначе
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СостоянияОССрезПоследних.ОсновноеСредство
			|ИЗ
			|	РегистрСведений.СостоянияОС.СрезПоследних(&Период, ) КАК СостоянияОССрезПоследних
			|ГДЕ
			|	СостоянияОССрезПоследних.Состояние = &Состояние";
	КонецЕсли;	
		
		
	Если НЕ ПараметрыПолученияОС.ДатаПримененияОтбора = '00010101' Тогда
		Запрос.УстановитьПараметр("Период", ПараметрыПолученияОС.ДатаПримененияОтбора);
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Период", " ");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыПолученияОС.Состояние) Тогда 
		Запрос.УстановитьПараметр("Состояние", ПараметрыПолученияОС.Состояние);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СостоянияОССрезПоследних.Состояние = &Состояние", "истина");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыПолученияОС.Организация) Тогда 
		Запрос.УстановитьПараметр("Организация", ПараметрыПолученияОС.Организация);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "МестонахождениеОССрезПоследних.Организация = &Организация", "истина");
	КонецЕсли;	
	
	Запрос.Текст = ТекстЗапроса;
	МассивОС = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", МассивОС, ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры // Отбор()

&НаКлиенте
Процедура ОбработатьОповещениеОВыборе(Элемент, Значение)
	
	Если Элемент.РежимВыбора И НЕ ЗакрыватьПриВыборе Тогда
		ОбновитьСписокПодобранных(Значение);
	КонецЕсли;
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПодобранных(Значение)
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		
		Для каждого ВыбранноеЗначение Из Значение Цикл
			СписокПодобранных.Добавить(ВыбранноеЗначение);
		КонецЦикла;
		
	Иначе
		СписокПодобранных.Добавить(Значение);
	КонецЕсли;
	
	УстановитьСписокПодобранных();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокПодобранных()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
	Список,
	"СписокПодобранных",
	СписокПодобранных.ВыгрузитьЗначения());
	
КонецПроцедуры

// Процедура настройки условного оформления форм и динамических списков .
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// Таблица СписокОС.
	Элемент = УсловноеОформление.Элементы.Добавить();
	// Поля.	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, "Список");
	// Условие.	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор, "Список.Подобран", ВидСравненияКомпоновкиДанных.Равно, Истина);
	// Оформление.
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	
КонецПроцедуры

#КонецОбласти