#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить по умолчанию
// Выполняет первоночальное заполнение
Процедура ЗаполнитьПоУмолчанию() Экспорт 
	СправочникМенеджер = Справочники.НастройкиНалоговойДекларации;
	
	// Настроки строк.
	НаименованиеСправочника = НСтр("ru = 'Настройка строк (по умолчанию)'");
	СправочникСсылка = СправочникМенеджер.НайтиПоНаименованию(НаименованиеСправочника, Истина);
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = НаименованиеСправочника;
	Иначе
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		СправочникОбъект.СтрокиОтчета.Очистить();
		СправочникОбъект.НастройкиСтрок.Очистить();
	КонецЕсли;	
	
	СправочникОбъект.ЗаполнитьНастройки();
	
	БухгалтерскийУчетСервер.ЗаписатьСправочникОбъект(СправочникОбъект);
	
КонецПроцедуры // ЗаполнитьПоУмолчанию()	

// Функция для проверки настроек.
//
// Параметры:
//	СтруктураТаблиц - Структура - структура таблиц (из табличных частей спр. "НастройкиНалоговойДекларации").
//
// Возвращаемое значение:
//	МассивСообщений - Массив - массив сообщений с описанием ошибок.
//
Функция ПолучитьДанныеПроверкиНастроек(СтруктураТаблиц) Экспорт 
	МассивСообщений = Новый Массив();	
	
	// 1. Список счетов учета.
	// 2. Настройки строк.
	// 3. Строки отчета.
	// 4. Объединение настроек.
	
	// 5. Контроль заполнения всех счетов в настройках (только временные).
	// 6. Контроль дублирования счетов за исключением.
	// 7. Контроль заполнения счетов в строках заголовков и групп.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		// 1. Список счетов учета. 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет КАК СчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаСписокСчетов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , Счет.Временный, , , , ) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 2. Настройки строк.
		|ВЫБРАТЬ
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи,
		|	НастройкиСтрок.СчетУчета КАК СчетУчета,
		|	НастройкиСтрок.НомерСтроки КАК НомерСтроки,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрок КАК НастройкиСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 3. Строки отчета.
		|ВЫБРАТЬ
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа
		|ПОМЕСТИТЬ ВременнаяТаблицаСтрокиОтчета
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 4. Настройки.
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаСтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаСтрокиОтчета.Группа КАК Группа
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройки
		|ИЗ
		|	ВременнаяТаблицаСтрокиОтчета КАК ВременнаяТаблицаСтрокиОтчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ПО ВременнаяТаблицаСтрокиОтчета.КлючСвязи = ВременнаяТаблицаНастройкиСтрок.КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 5. Контроль заполнения всех счетов в настройках.
		|ВЫБРАТЬ
		|	ВременнаяТаблицаСписокСчетов.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВременнаяТаблицаСписокСчетов КАК ВременнаяТаблицаСписокСчетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ПО ВременнаяТаблицаСписокСчетов.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
		|ГДЕ
		|	ВременнаяТаблицаНастройки.НомерСтроки ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 6. Контроль дублирования счетов.
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройкиДубли.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиДубли.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройкиДубли
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|		ПО ВременнаяТаблицаНастройкиДубли.НомерСтроки <> ВременнаяТаблицаНастройки.НомерСтроки
		|			И ВременнаяТаблицаНастройкиДубли.СчетУчета = ВременнаяТаблицаНастройки.СчетУчета
		|			И ВременнаяТаблицаНастройкиДубли.Формула = ВременнаяТаблицаНастройки.Формула
		|ГДЕ
		|	ВременнаяТаблицаНастройкиДубли.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки
		|ИТОГИ
		|	МАКСИМУМ(КодСтроки)
		|ПО
		|	СчетУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 7. Контроль заполнения счетов в строках заголовков и групп.
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНастройки.КодСтроки КАК КодСтроки
		|ИЗ
		|	ВременнаяТаблицаНастройки КАК ВременнаяТаблицаНастройки
		|ГДЕ
		|	ВременнаяТаблицаНастройки.ЭтоЗаголовок";
	Запрос.УстановитьПараметр("СтрокиОтчета", СтруктураТаблиц.СтрокиОтчета);
	Запрос.УстановитьПараметр("НастройкиСтрок", СтруктураТаблиц.НастройкиСтрок);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Контроль заполнения всех счетов в настройках.
	Если НЕ МассивРезультатов[4].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" не указан в настройках.'"), ВыборкаИзРезультатаЗапроса.СчетУчета));
		КонецЦикла;
	КонецЕсли;		
	
	// Контроль дублирования счетов.
	Если НЕ МассивРезультатов[5].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ВыборкаДетальныеЗаписи = ВыборкаИзРезультатаЗапроса.Выбрать();
				
				КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
				Индекс = 1;
				СтрокаКодов = "";
				МассивКодов = Новый Массив();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если МассивКодов.Найти(ВыборкаДетальныеЗаписи.КодСтроки) <> Неопределено Тогда
						Продолжить;	
					КонецЕсли;	
						
					Если СтрокаКодов = "" Тогда
						СтрокаКодов = ВыборкаДетальныеЗаписи.КодСтроки + ",";	
						
					ИначеЕсли Индекс = КоличествоСтрок Тогда
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки;
						
					Иначе
						 СтрокаКодов = СтрокаКодов + " " + ВыборкаДетальныеЗаписи.КодСтроки + ",";
					КонецЕсли;
					
					МассивКодов.Добавить(ВыборкаДетальныеЗаписи.КодСтроки);
					Индекс = Индекс + 1;	 
				КонецЦикла;
				
				МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Счет учета ""%1"" указывается повторно в строках с кодами %2.'"), 
					ВыборкаИзРезультатаЗапроса.СчетУчета, СтрокаКодов));
			КонецЦикла;
		КонецЕсли;
	
	// Контроль заполнения счетов в строках заголовков и групп.
	Если НЕ МассивРезультатов[6].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			МассивСообщений.Добавить(СтрШаблон(НСтр("ru = 'Для строки с кодом %1 следует очистить настройки.'"), ВыборкаИзРезультатаЗапроса.КодСтроки));
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивСообщений;
КонецФункции // ПолучитьДанныеПроверкиНастроек()

#КонецОбласти

#КонецЕсли
