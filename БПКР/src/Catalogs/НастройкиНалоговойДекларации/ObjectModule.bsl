#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьНастройки() Экспорт
	
	СправочникМенеджер = Справочники.НастройкиНалоговойДекларации;
	
	КлассификаторXML = СправочникМенеджер.ПолучитьМакет("МакетЗаполнения").ПолучитьТекст();
	КлассификаторТаблица  = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	// Заполнение НастройкиСтрок.
	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		СчетУчета = СокрЛП(СтрокаТаблицыЗначений.СчетУчета);
		Формула = СокрЛП(СтрокаТаблицыЗначений.Формула);
		Знак = СокрЛП(СтрокаТаблицыЗначений.Знак);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		// Пропуск не настраеваемых строк.
		Если ВРег(ЭтоЗаголовок) = "ИСТИНА"
			Или Формула = "" Тогда 
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = НастройкиСтрок.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчета);
		СтрокаТабличнойЧасти.Формула = ?(ЗначениеЗаполнено(Формула), Перечисления.Формулы[Формула], Перечисления.Формулы.ПустаяСсылка());
		СтрокаТабличнойЧасти.Знак = ?(ЗначениеЗаполнено(Знак), Перечисления.ПлюсМинус[Знак], Перечисления.ПлюсМинус.ПустаяСсылка());
	КонецЦикла;
	
	// Заполнение СтрокиОтчета.
	КлассификаторТаблица.Свернуть("КодСтроки, Группа, НаименованиеСтроки, ЭтоЗаголовок, Неотрицательное");

	Для Каждого СтрокаТаблицыЗначений Из КлассификаторТаблица Цикл 
		КодСтроки = СокрЛП(СтрокаТаблицыЗначений.КодСтроки);
		Группа = СокрЛП(СтрокаТаблицыЗначений.Группа);
		НаименованиеСтроки = СокрЛП(СтрокаТаблицыЗначений.НаименованиеСтроки);
		Неотрицательное = СокрЛП(СтрокаТаблицыЗначений.Неотрицательное);
		ЭтоЗаголовок = СокрЛП(СтрокаТаблицыЗначений.ЭтоЗаголовок);
		
		СтрокаТабличнойЧасти = СтрокиОтчета.Добавить();
		СтрокаТабличнойЧасти.КодСтроки = КодСтроки;
		СтрокаТабличнойЧасти.Группа = Группа;
		СтрокаТабличнойЧасти.НаименованиеСтроки = НаименованиеСтроки;
		СтрокаТабличнойЧасти.Неотрицательное = ?(ВРег(Неотрицательное) = "ИСТИНА", Истина, Ложь);
		СтрокаТабличнойЧасти.ЭтоЗаголовок = ?(ВРег(ЭтоЗаголовок) = "ИСТИНА", Истина, Ложь);
	КонецЦикла;
	
	ЗаполнитьКлючиСвязи("НастройкиСтрок");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого СтрокаТабличнойЧасти Из НастройкиСтрок Цикл 
		Если СтрокаТабличнойЧасти.Формула = Перечисления.Формулы.ОсобаяФормула Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчета) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Счет учета'"), 
				СтрокаТабличнойЧасти.НомерСтроки, НСтр("ru = 'Настройки строк'"));
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"НастройкиСтрок",
				СтрокаТабличнойЧасти.НомерСтроки,
				"СчетУчета",
				Отказ);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьКлючиСвязи(ИмяПодчиненнойТабличнойЧасти)

	// Формирование ключа связи.
	КлючСвязи = 1;
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОтчета Цикл 
		СтрокаТабличнойЧасти.КлючСвязи = КлючСвязи;
		НайденныеСтроки = ЭтотОбъект[ИмяПодчиненнойТабличнойЧасти].НайтиСтроки(Новый Структура("КодСтроки", СтрокаТабличнойЧасти.КодСтроки));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			НайденнаяСтрока.КлючСвязи = КлючСвязи;
		КонецЦикла;	
		
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьКлючСвязи()

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли