#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокСкладов();
	
	// Установить видимость и доступность элементов формы.
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	
	ОбновитьПодразделениеВСкладах();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокСкладов()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.Код КАК Код,
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.ПодразделениеОрганизации = &Подразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад";
	СписокСкладов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры 

&НаСервере
Процедура ОбновитьПодразделениеВСкладах()

	СписокСкладовДляОбновления = СписокСкладов.Выгрузить().ВыгрузитьКолонку("Склад");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущееПодразделение", Объект.Ссылка);
	Запрос.УстановитьПараметр("СписокСкладовДляОбновления", СписокСкладовДляОбновления);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склады.Ссылка КАК СкладСсылка,
		|	ВЫБОР
		|		КОГДА НЕ Склады.ПодразделениеОрганизации = &ТекущееПодразделение
		|			ТОГДА &ТекущееПодразделение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	(Склады.Ссылка В (&СписокСкладовДляОбновления)
		|				И НЕ Склады.ПодразделениеОрганизации = &ТекущееПодразделение
		|			ИЛИ НЕ Склады.Ссылка В (&СписокСкладовДляОбновления)
		|				И Склады.ПодразделениеОрганизации = &ТекущееПодразделение)
		|	И НЕ Склады.ЭтоГруппа";
	НачатьТранзакцию();
	
	СкладСсылка = Справочники.Склады.ПустаяСсылка();
	
	Попытка
		
		ТаблицаСкладов = Запрос.Выполнить().Выбрать();
		Пока ТаблицаСкладов.Следующий() Цикл
			
			СкладСсылка = ТаблицаСкладов.СкладСсылка;
			
			СкладОбъект = СкладСсылка.ПолучитьОбъект();
			СкладОбъект.ПодразделениеОрганизации = ТаблицаСкладов.ПодразделениеОрганизации;
			СкладОбъект.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ШаблонСообщения = НСтр("ru = 'Не удалось обновить элемент справочника.
                                |%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Установка подразделения'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.Склады,
			СкладСсылка, 
			ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;

КонецПроцедуры

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Элементы.Владелец.Доступность = Истина;		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец",	"Видимость", Справочники.Организации.ИспользуетсяНесколькоОрганизаций());
	
КонецПроцедуры

#КонецОбласти
