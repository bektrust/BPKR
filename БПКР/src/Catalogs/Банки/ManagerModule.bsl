#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция получает таблицу ссылок на банки по Коду или корреспондетскому счету.
//
// Параметры:
//	Поле - Строка - Имя поля (Код или КоррСчет)
//	Значение - Строка - Значение Код или Корреспондентского счета
//
// Возвращаемое значение:
//	ТаблицаЗначений - Найденые банки
//
Функция ПолучитьТаблицуБанковПоРеквизитам(Поле, Значение) Экспорт
	
	ТаблицаБанков = Новый ТаблицаЗначений;
	Колонки = ТаблицаБанков.Колонки;
	Колонки.Добавить("Ссылка");
	Колонки.Добавить("Код");
	Колонки.Добавить("КоррСчет");
	
	ЭтоКод = Ложь;
	ЭтоКоррСчет = Ложь;
	Если Найти(Поле, "Код") <> 0 Тогда
		ЭтоКод = Истина;
	ИначеЕсли Найти(Поле, "КоррСчет") <> 0 Тогда
		ЭтоКоррСчет = Истина;
	КонецЕсли;
	
	Если ЭтоКод И СтрДлина(Значение) = 9
	 ИЛИ ЭтоКоррСчет И СтрДлина(Значение) = 20
	Тогда
		
		Если ЭтоКод Тогда
			СтруктураОтбора = Новый Структура("Код", Значение);
			
		ИначеЕсли ЭтоКоррСчет Тогда
			СтруктураОтбора = Новый Структура("КоррСчет", Значение);
			
		КонецЕсли;
		
		Выборка = Справочники.Банки.Выбрать( , , СтруктураОтбора, "Код Возр");
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаБанков.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Если ТаблицаБанков.Количество() = 0 Тогда
			ДобавитьБанкиИзКлассификатора(
				?(ЭтоКод, Значение, ""), // Код
				?(ЭтоКоррСчет, Значение, ""), // КоррСчет
				ТаблицаБанков);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаБанков;
	
КонецФункции // ПолучитьТаблицуБанковПоРеквизитам()

// Функция получает реквизиты банка.
//
// Параметры:
//  Банк - СправочникСсылка.Банки - Ссылка на банк
//
// Возвращаемое значение:
//	Структура - Реквизиты банка
//
Функция ПолучитьРеквизитыБанка(Банк) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Банки.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Банки КАК Банки
		|ГДЕ
		|	Банки.Ссылка = &Банк");
	Запрос.УстановитьПараметр("Банк", Банк);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Адрес = Выборка.Адрес;
	Иначе
		Адрес = "";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Адрес",
		Адрес);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыБанка()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет новый банк из классификатора
// по значению Код или корреспондентскому счету.
//
// Параметры:
//	Код - Строка (9) - Код банка
//	КоррСчет - Строка (20) - Корреспондентский счет банка
//	ТаблицаБанков - ТаблицаЗначений - Таблица банков
//
Процедура ДобавитьБанкиИзКлассификатора(Код, КоррСчет, ТаблицаБанков)
	
	// Переделать на использование сервиса.
	Возврат;
	
	//УстановитьПривилегированныйРежим(Истина);

	//РезультатЗапроса	= ПолучитьРезультатЗапросаПоКлассификатору(Код, КоррСчет, "", "");
	//
	//МассивБанков		= Новый Массив;
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	МассивБанков.Добавить(Выборка.Ссылка);
	//КонецЦикла;
	//	
	//Для каждого Строка Из МассивБанков Цикл
	//	
	//	НайденныйБанк = Справочники.Банки.НайтиПоКоду(Строка.Код);
	//	Если НайденныйБанк <> Неопределено Тогда
	//		НоваяСтрока = ТаблицаБанков.Добавить();
	//		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныйБанк);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
КонецПроцедуры // ДобавитьБанкиИзКлассификатора()

#КонецОбласти

#КонецЕсли
