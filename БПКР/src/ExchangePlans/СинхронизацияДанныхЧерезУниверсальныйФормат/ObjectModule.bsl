#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	// Проверка значения свойства ОбменДанными.Загрузка отсутствует по причине того, что в расположенным ниже коде,
	// реализована логика, которая должна выполняться в том числе при установке этого свойства равным Истина
	// (на стороне кода, который выполняет попытку записи в данный план обмена).
	
	Если ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
		
		ИспользоватьОтборПоОрганизациям = Ложь;
		РежимВыгрузкиСправочников       = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		РежимВыгрузкиПриНеобходимости   = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		
	Иначе
		
		РежимВыгрузкиПриНеобходимости    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		
		Если ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" Тогда
			РежимВыгрузкиСправочников    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		Иначе
			РежимВыгрузкиСправочников    = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
	ИначеЕсли ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
	Иначе
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("УчетПоНесколькимОрганизациям") Тогда
		Организации.Очистить();
		Организации.Добавить().Организация = Справочники.Организации.ОрганизацияПоУмолчанию();				
	ИначеЕсли Не ИспользоватьОтборПоОрганизациям И Организации.Количество() <> 0 Тогда
		Организации.Очистить();
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов <> "АвтоматическаяСинхронизация" Тогда
		ДатаНачалаВыгрузкиДокументов = Дата(1,1,1,0,0,0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВерсияФорматаОбмена) Тогда
		ВерсияФорматаОбмена = "1.7";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСКассой()
		ИЛИ ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСМобильнойКассой() Тогда
		
		//ПроверяемыеРеквизиты.Добавить("ВидыЦенНоменклатуры");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьОбъект(ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОбъект(ДанныеЗаполнения)
	
	Если Не ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПравилаЗагрузкиПодразделений = "НеЗагружать";
	РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	
	ИспользоватьОтборПоОрганизациям = Ложь;
	
	ДатаНачалаВыгрузкиДокументов = НачалоГода(ТекущаяДата());
	
	ВерсияФорматаОбмена = "1.7";
	
	ПравилаОтправкиСправочников = "АвтоматическаяСинхронизация";
	ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	
	Если ЗначениеЗаполнено(ВариантНастройки) Тогда
		НастроитьОтборыПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьОтборыПоУмолчанию()
	
	Если ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСКассой()
		ИЛИ ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСМобильнойКассой() Тогда
		ВерсияФорматаОбмена = "1.7";
	КонецЕсли;
	
	Если ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСКассой()
		Или ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСМобильнойКассой() Тогда
		
		ИспользоватьОтборПоСкладам = Истина;
		
		ВидЦенНоменклатурыПоУмолчанию = Справочники.ТипыЦенНоменклатуры.ТипЦенРозничная();
		ВидыЦенНоменклатуры.Добавить().ВидЦенНоменклатуры = ВидЦенНоменклатурыПоУмолчанию;
		
	КонецЕсли;
	
	Если ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСКассой()
		ИЛИ ВариантНастройки = ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИдентификаторОбменаСМобильнойКассой() Тогда
		
		ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости";
		ПравилаОтправкиДокументов = "СинхронизироватьПоНеобходимости";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
