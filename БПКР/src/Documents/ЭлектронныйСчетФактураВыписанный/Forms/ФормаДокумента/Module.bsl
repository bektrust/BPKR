#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка реквизитов формы.
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	
	ДатаДокумента = Объект.Дата;
		
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
	
	УстановитьФункциональныеОпцииФормы();
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	Если ПолучитьФункциональнуюОпцию("УказыватьТочностьЦены") Тогда 
		ЗаполнитьСписокВыбораТочностьЦены();	
	КонецЕсли;	

	// СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПодвалФормы();	

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

// Процедура - обработчик события ОбработкаОповещения.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПодборДокументовЭСФ" 
		И ЗначениеЗаполнено(Параметр) 
		// Проверка на владельца формы
		И Источник <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")
		И Источник = УникальныйИдентификатор Тогда
		
		ЗаполнитьТабличнуюЧасть(Параметр.МассивСсылок);
		
		//Если Параметр.МассивСсылок.Количество() > 0 Тогда
		//	Объект.ДополнительнаяИнформация = КомментарийДокумента(Параметр.МассивСсылок.Получить(Параметр.МассивСсылок.Количество() - 1));
		//КонецЕсли;	
		
		ОбновитьПодвалФормы();	
	КонецЕсли;
	                                                              
	// КопированиеСтрокТабличныхЧастей
	Если ИмяСобытия = "БуферОбменаТабличнаяЧастьКопированиеСтрок" Тогда
		КопированиеТабличнойЧастиКлиент.ОбработкаОповещения(Элементы, "Товары");
	КонецЕсли;
	// Конец КопированиеСтрокТабличныхЧастей
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	
	// РаботаСФормами
	РаботаСФормамиСервер.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СписокДокументов = Новый Массив;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл 
		СписокДокументов.Добавить(СтрокаТабличнойЧасти.ДокументОснование);
	КонецЦикла;	
	Оповестить("ЭлектронныйСчетФактураВыписанныйПослеЗаписи", СписокДокументов);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
		
		УстановитьФункциональныеОпцииФормы();
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
	УстановитьФункциональныеОпцииФормы();
	
	Объект.БанковскийСчет = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьОсновнойБанковскийСчетОрганизации(Объект.Организация);
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Контрагент.
//
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	СтруктураДанные = ПолучитьДанныеКонтрагентПриИзменении(Объект.Контрагент, Объект.Организация);	
	Объект.ДоговорКонтрагента 		= СтруктураДанные.ДоговорКонтрагента;
	Объект.БанковскийСчетКонтрагента = СтруктураДанные.ОсновнойБанковскийСчет;
	
	ОбработатьИзменениеДоговора();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Договор контрагента.
//
&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	ОбработатьИзменениеДоговора();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура КорректировочнаяСчетФактураПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВидКорректировкиПриИзменении(Элемент)
	Объект.ДокументКорректировочныйЭСФ = Неопределено;
	Объект.СерияКорректируемогоСФ = "";
	Объект.НомерКорректируемогоЭСФ = "";
	Объект.ДатаКорректируемогоЭСФ = "";
	
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДокументКорректировочныйЭСФПриИзменении(Элемент)
	СтруктураДанные = ПолучитьДанныеДокументКорректировочныйЭСФПриИзменении(Объект.ДокументКорректировочныйЭСФ);
	Объект.СерияКорректируемогоСФ = "";
	Объект.НомерКорректируемогоЭСФ = СтруктураДанные.НомерЭСФ;
	Объект.ДатаКорректируемогоЭСФ = СтруктураДанные.ДатаПоставки;
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("УстановитьПиктограммуКомментария", 0.1, Истина);
КонецПроцедуры

// Процедура - обработчик события НачалоВыбора поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля выбора Точность цены.
//
&НаКлиенте
Процедура ТочностьЦеныПриИзменении(Элемент)
	
	УстановитьФорматЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияСДоначислениемНДСПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура СохранитьВЭлектроннойФорме(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
		Или Модифицированность Тогда 
		ТекстСообщения = НСтр("ru='Для сохранения в электронной форме необходимо записать документ.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Объект.Ссылка);
	
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для сохранения документа в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		Ответ = Ждать ВопросАсинх(ТекстВопроса, Кнопки); 
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект, Новый Структура("МассивСсылок", МассивСсылок));
			МодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтернетПоддержкаПользователейКлиент");
			МодульИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
		КонецЕсли;
	Иначе
		ПродолжитьСохранение(МассивСсылок);	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Организация'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Организация",, Отказ);		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'ВидОперации'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.ВидОперации",, Отказ);		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Контрагент'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Контрагент",, Отказ);		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Договор контрагента'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.ДоговорКонтрагента",, Отказ);		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.КодПоставкиНДС) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Код поставки НДС'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.КодПоставкиНДС",, Отказ);		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ФормаОплаты) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Форма оплаты'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.ФормаОплаты",, Отказ);		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.Курс) И ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, НСтр("ru = 'Курс обмена'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Объект.Курс",, Отказ);		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ЭтоВозврат", Объект.ЭтоКорректировочныйСФ);
		ПараметрыФормы.Вставить("ЭтоУслуги", Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЭСФ.АктОбОказанииУслуг"));
		ПараметрыФормы.Вставить("Организация", Объект.Организация);
		ПараметрыФормы.Вставить("НачалоПериода", Объект.НачалоПериода);
		ПараметрыФормы.Вставить("КонецПериода", Объект.КонецПериода);
		ПараметрыФормы.Вставить("Контрагент", Объект.Контрагент);
		ПараметрыФормы.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
		ПараметрыФормы.Вставить("КодПоставкиНДС", Объект.КодПоставкиНДС);
		ПараметрыФормы.Вставить("Курс", Объект.Курс);
		ПараметрыФормы.Вставить("ФормаОплаты", Объект.ФормаОплаты);
		ПараметрыФормы.Вставить("КодПричиныКорректировки", Объект.КодПричиныКорректировки);
		ПараметрыФормы.Вставить("УникальныйИдентификаторФормыВладельца", УникальныйИдентификатор);
		ПараметрыФормы.Вставить("РеализацияСДоначислениемНДС", Объект.РеализацияСДоначислениемНДС);
		ПараметрыФормы.Вставить("ПоступлениеОтНерезидента", Объект.ПоступлениеОтНерезидента);

		ОткрытьФорму("Документ.ЭлектронныйСчетФактураВыписанный.Форма.ФормаПодбораДокументов", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
					
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОткрытьПроводник(ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ДополнительныеПараметры.ПолноеИмяФайла) Тогда 
		ФайловаяСистемаКлиент.ОткрытьПроводник(ДополнительныеПараметры.ПолноеИмяФайла);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Элементы.СтраницаТоварыИУслуги.Заголовок = ?(Объект.ВидОперации = Перечисления.ВидыОперацийЭСФ.АктОбОказанииУслуг,
													НСтр("ru = 'Услуги'"), НСтр("ru = 'Товары'"));
													
	Элементы.ВидКорректировки.Видимость = Объект.ЭтоКорректировочныйСФ;
	Элементы.ДокументКорректировочныйЭСФ.Видимость = Объект.ЭтоКорректировочныйСФ И Объект.ВидКорректировки = 0;
	Элементы.НомерКорректируемогоЭСФ.Видимость = Объект.ЭтоКорректировочныйСФ;
	Элементы.СерияКорректируемогоСФ.Видимость = Объект.ЭтоКорректировочныйСФ И Объект.ВидКорректировки = 1;
	Элементы.ДатаКорректируемогоЭСФ.Видимость = Объект.ЭтоКорректировочныйСФ;
	Элементы.КодПричиныКорректировки.Видимость = Объект.ЭтоКорректировочныйСФ;
	
	Если Объект.ВидКорректировки = 0 Тогда 
		Элементы.НомерКорректируемогоЭСФ.ТолькоПросмотр = Истина;
		Элементы.ДатаКорректируемогоЭСФ.ТолькоПросмотр = Истина;
		
	ИначеЕсли Объект.ВидКорректировки = 1 Тогда 
		Элементы.СерияКорректируемогоСФ.ТолькоПросмотр = Ложь;
		Элементы.НомерКорректируемогоЭСФ.ТолькоПросмотр = Ложь;
		Элементы.ДатаКорректируемогоЭСФ.ТолькоПросмотр = Ложь;		
	Иначе
		Элементы.НомерКорректируемогоЭСФ.ТолькоПросмотр = Ложь;
		Элементы.ДатаКорректируемогоЭСФ.ТолькоПросмотр = Ложь;	
	КонецЕсли;	
	
	// Видимость валютных сумм.
	Если Объект.ВалютаДокумента = ВалютаРегламентированногоУчета Тогда 
		Элементы.Курс.Видимость = Ложь;
		Элементы.ТоварыСуммаНДСВВалютеРеглУчета.Видимость = Ложь;
		Элементы.ТоварыСуммаНСПВВалютеРеглУчета.Видимость = Ложь;
		Элементы.ТоварыВсегоВВалютеРеглУчета.Видимость = Ложь;
	Иначе
		Элементы.Курс.Видимость = Истина;
		Элементы.ТоварыСуммаНДСВВалютеРеглУчета.Видимость = Истина;
		Элементы.ТоварыСуммаНСПВВалютеРеглУчета.Видимость = Истина;
		Элементы.ТоварыВсегоВВалютеРеглУчета.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.РеализацияСДоначислениемНДС Тогда 
		Элементы.ТоварыРыночнаяСтоимость.Видимость = Истина;
		Элементы.ТоварыСуммаДоначисленияНДС.Видимость = Истина;
	Иначе 
		Элементы.ТоварыРыночнаяСтоимость.Видимость = Ложь;
		Элементы.ТоварыСуммаДоначисленияНДС.Видимость = Ложь;
	КонецЕсли;	
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийЭСФ.АктОбОказанииУслуг
		И (Объект.Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС
		ИЛИ Объект.Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт) Тогда
		Элементы.ПоступлениеОтНерезидента.Видимость = Истина;
	Иначе
		Элементы.ПоступлениеОтНерезидента.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры	

// Процедура устанавливает функциональные опции формы документа.
//
&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма, Объект.Организация, ДатаДокумента);
КонецПроцедуры

// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением)
	РазностьДат = БухгалтерскийУчетСервер.ПроверитьНомерДокумента(Объект.Ссылка, ДатаДокумента, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("РазностьДат",	РазностьДат);
	
	Возврат СтруктураДанные;
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть(МассивСсылок)

	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументОснование,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РеализацияТоваровУслугТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	РеализацияТоваровУслугТовары.Номенклатура.КодГКЭД КАК КодГКЭД,
		|	РеализацияТоваровУслугТовары.Количество КАК Количество,
		|	РеализацияТоваровУслугТовары.Всего КАК Всего,
		|	РеализацияТоваровУслугТовары.СуммаСкидки КАК СуммаСкидки,
		|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
		|	РеализацияТоваровУслугТовары.СтавкаНСП КАК СтавкаНСП,
		|	РеализацияТоваровУслугТовары.СуммаНСП КАК СуммаНСП,
		|	РеализацияТоваровУслугТовары.Всего / РеализацияТоваровУслугТовары.Количество КАК Цена,
		|	РеализацияТоваровУслугТовары.Всего - РеализацияТоваровУслугТовары.СуммаНДС - РеализацияТоваровУслугТовары.СуммаНСП КАК Сумма,
		|	РеализацияТоваровУслугТовары.СуммаНДСВВалютеРеглУчета КАК СуммаНДСВВалютеРеглУчета,
		|	РеализацияТоваровУслугТовары.СуммаНСПВВалютеРеглУчета КАК СуммаНСПВВалютеРеглУчета,
		|	РеализацияТоваровУслугТовары.ВсегоВВалютеРеглУчета КАК ВсегоВВалютеРеглУчета,
		|	РеализацияТоваровУслугТовары.РыночнаяСтоимость КАК РыночнаяСтоимость,
		|	РеализацияТоваровУслугТовары.СуммаДоначисления КАК СуммаДоначисления,
		|	РеализацияТоваровУслугТовары.СуммаДоначисленияНДС КАК СуммаДоначисленияНДС,
		|	РеализацияТоваровУслугТовары.СуммаДоначисленияВВалютеРеглУчета КАК СуммаДоначисленияВВалютеРеглУчета,
		|	РеализацияТоваровУслугТовары.СуммаДоначисленияНДСВВалютеРеглУчета КАК СуммаДоначисленияНДСВВалютеРеглУчета
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугОС.Ссылка,
		|	РеализацияТоваровУслугОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	РеализацияТоваровУслугОС.Всего,
		|	РеализацияТоваровУслугОС.СуммаСкидки,
		|	РеализацияТоваровУслугОС.СуммаНДС,
		|	РеализацияТоваровУслугОС.СтавкаНСП,
		|	РеализацияТоваровУслугОС.СуммаНСП,
		|	РеализацияТоваровУслугОС.Всего,
		|	РеализацияТоваровУслугОС.Всего - РеализацияТоваровУслугОС.СуммаНДС - РеализацияТоваровУслугОС.СуммаНСП,
		|	РеализацияТоваровУслугОС.СуммаНДСВВалютеРеглУчета,
		|	РеализацияТоваровУслугОС.СуммаНСПВВалютеРеглУчета,
		|	РеализацияТоваровУслугОС.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ОС КАК РеализацияТоваровУслугОС
		|ГДЕ
		|	РеализацияТоваровУслугОС.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка,
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
		|	РеализацияТоваровУслугУслуги.Номенклатура.КодТНВЭД,
		|	РеализацияТоваровУслугУслуги.Номенклатура.КодГКЭД,
		|	РеализацияТоваровУслугУслуги.Количество,
		|	РеализацияТоваровУслугУслуги.Всего,
		|	РеализацияТоваровУслугУслуги.СуммаСкидки,
		|	РеализацияТоваровУслугУслуги.СуммаНДС,
		|	РеализацияТоваровУслугУслуги.СтавкаНСП,
		|	РеализацияТоваровУслугУслуги.СуммаНСП,
		|	РеализацияТоваровУслугУслуги.Всего / РеализацияТоваровУслугУслуги.Количество,
		|	РеализацияТоваровУслугУслуги.Всего - РеализацияТоваровУслугУслуги.СуммаНДС - РеализацияТоваровУслугУслуги.СуммаНСП,
		|	РеализацияТоваровУслугУслуги.СуммаНДСВВалютеРеглУчета,
		|	РеализацияТоваровУслугУслуги.СуммаНСПВВалютеРеглУчета,
		|	РеализацияТоваровУслугУслуги.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.ЕдиницаИзмерения,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.КодТНВЭД,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.КодГКЭД,
		|	ВозвратТоваровОтПокупателяТовары.Количество,
		|	ВозвратТоваровОтПокупателяТовары.Всего,
		|	ВозвратТоваровОтПокупателяТовары.СуммаСкидки,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
		|	ВозвратТоваровОтПокупателяТовары.СтавкаНСП,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНСП,
		|	ВозвратТоваровОтПокупателяТовары.Всего / ВозвратТоваровОтПокупателяТовары.Количество,
		|	ВозвратТоваровОтПокупателяТовары.Всего - ВозвратТоваровОтПокупателяТовары.СуммаНДС - ВозвратТоваровОтПокупателяТовары.СуммаНСП,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНДСВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяТовары.СуммаНСПВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяТовары.ВсегоВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяТовары.РыночнаяСтоимость,
		|	ВозвратТоваровОтПокупателяТовары.СуммаДоначисления,
		|	ВозвратТоваровОтПокупателяТовары.СуммаДоначисленияНДС,
		|	ВозвратТоваровОтПокупателяТовары.СуммаДоначисленияВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяТовары.СуммаДоначисленияНДСВВалютеРеглУчета
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|ГДЕ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяОС.Ссылка,
		|	ВозвратТоваровОтПокупателяОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	ВозвратТоваровОтПокупателяОС.Всего,
		|	ВозвратТоваровОтПокупателяОС.СуммаСкидки,
		|	ВозвратТоваровОтПокупателяОС.СуммаНДС,
		|	ВозвратТоваровОтПокупателяОС.СтавкаНСП,
		|	ВозвратТоваровОтПокупателяОС.СуммаНСП,
		|	ВозвратТоваровОтПокупателяОС.Всего,
		|	ВозвратТоваровОтПокупателяОС.Всего - ВозвратТоваровОтПокупателяОС.СуммаНДС - ВозвратТоваровОтПокупателяОС.СуммаНСП,
		|	ВозвратТоваровОтПокупателяОС.СуммаНДСВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.СуммаНСПВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяОС.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.ОС КАК ВозвратТоваровОтПокупателяОС
		|ГДЕ
		|	ВозвратТоваровОтПокупателяОС.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяУслуги.Ссылка,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура.ЕдиницаИзмерения,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура.КодТНВЭД,
		|	ВозвратТоваровОтПокупателяУслуги.Номенклатура.КодГКЭД,
		|	ВозвратТоваровОтПокупателяУслуги.Количество,
		|	ВозвратТоваровОтПокупателяУслуги.Всего,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаСкидки,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНДС,
		|	ВозвратТоваровОтПокупателяУслуги.СтавкаНСП,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНСП,
		|	ВозвратТоваровОтПокупателяУслуги.Всего / ВозвратТоваровОтПокупателяУслуги.Количество,
		|	ВозвратТоваровОтПокупателяУслуги.Всего - ВозвратТоваровОтПокупателяУслуги.СуммаНДС - ВозвратТоваровОтПокупателяУслуги.СуммаНСП,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНДСВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.СуммаНСПВВалютеРеглУчета,
		|	ВозвратТоваровОтПокупателяУслуги.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК ВозвратТоваровОтПокупателяУслуги
		|ГДЕ
		|	ВозвратТоваровОтПокупателяУслуги.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаСтоимостиРеализацииТовары.Ссылка,
		|	КорректировкаСтоимостиРеализацииТовары.Номенклатура,
		|	КорректировкаСтоимостиРеализацииТовары.Номенклатура.ЕдиницаИзмерения,
		|	КорректировкаСтоимостиРеализацииТовары.Номенклатура.КодТНВЭД,
		|	КорректировкаСтоимостиРеализацииТовары.Номенклатура.КодГКЭД,
		|	КорректировкаСтоимостиРеализацииТовары.Количество,
		|	КорректировкаСтоимостиРеализацииТовары.Всего,
		|	0,
		|	КорректировкаСтоимостиРеализацииТовары.СуммаНДС,
		|	КорректировкаСтоимостиРеализацииТовары.СтавкаНСП,
		|	КорректировкаСтоимостиРеализацииТовары.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииТовары.Всего / КорректировкаСтоимостиРеализацииТовары.Количество,
		|	КорректировкаСтоимостиРеализацииТовары.Всего - КорректировкаСтоимостиРеализацииТовары.СуммаНДС - КорректировкаСтоимостиРеализацииТовары.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииТовары.СуммаНДСВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииТовары.СуммаНСПВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииТовары.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.КорректировкаСтоимостиРеализации.Товары КАК КорректировкаСтоимостиРеализацииТовары
		|ГДЕ
		|	КорректировкаСтоимостиРеализацииТовары.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаСтоимостиРеализацииОС.Ссылка,
		|	КорректировкаСтоимостиРеализацииОС.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	КорректировкаСтоимостиРеализацииОС.Всего,
		|	0,
		|	КорректировкаСтоимостиРеализацииОС.СуммаНДС,
		|	КорректировкаСтоимостиРеализацииОС.СтавкаНСП,
		|	КорректировкаСтоимостиРеализацииОС.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииОС.Всего,
		|	КорректировкаСтоимостиРеализацииОС.Всего - КорректировкаСтоимостиРеализацииОС.СуммаНДС - КорректировкаСтоимостиРеализацииОС.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииОС.СуммаНДСВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииОС.СуммаНСПВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииОС.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.КорректировкаСтоимостиРеализации.ОС КАК КорректировкаСтоимостиРеализацииОС
		|ГДЕ
		|	КорректировкаСтоимостиРеализацииОС.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаСтоимостиРеализацииУслуги.Ссылка,
		|	КорректировкаСтоимостиРеализацииУслуги.Номенклатура,
		|	КорректировкаСтоимостиРеализацииУслуги.Номенклатура.ЕдиницаИзмерения,
		|	КорректировкаСтоимостиРеализацииУслуги.Номенклатура.КодТНВЭД,
		|	КорректировкаСтоимостиРеализацииУслуги.Номенклатура.КодГКЭД,
		|	КорректировкаСтоимостиРеализацииУслуги.Количество,
		|	КорректировкаСтоимостиРеализацииУслуги.Всего,
		|	0,
		|	КорректировкаСтоимостиРеализацииУслуги.СуммаНДС,
		|	КорректировкаСтоимостиРеализацииУслуги.СтавкаНСП,
		|	КорректировкаСтоимостиРеализацииУслуги.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииУслуги.Всего / КорректировкаСтоимостиРеализацииУслуги.Количество,
		|	КорректировкаСтоимостиРеализацииУслуги.Всего - КорректировкаСтоимостиРеализацииУслуги.СуммаНДС - КорректировкаСтоимостиРеализацииУслуги.СуммаНСП,
		|	КорректировкаСтоимостиРеализацииУслуги.СуммаНДСВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииУслуги.СуммаНСПВВалютеРеглУчета,
		|	КорректировкаСтоимостиРеализацииУслуги.ВсегоВВалютеРеглУчета,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.КорректировкаСтоимостиРеализации.Услуги КАК КорректировкаСтоимостиРеализацииУслуги
		|ГДЕ
		|	КорректировкаСтоимостиРеализацииУслуги.Ссылка В(&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура.КодТНВЭД,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура.КодГКЭД,
		|	ПоступлениеТоваровУслугУслуги.Количество,
		|	ПоступлениеТоваровУслугУслуги.Всего,
		|	0,
		|	ПоступлениеТоваровУслугУслуги.СуммаНДС / ПоступлениеТоваровУслугУслуги.Ссылка.Курс * ПоступлениеТоваровУслугУслуги.Ссылка.Кратность,
		|	НЕОПРЕДЕЛЕНО,
		|	ПоступлениеТоваровУслугУслуги.СуммаНСП / ПоступлениеТоваровУслугУслуги.Ссылка.Курс * ПоступлениеТоваровУслугУслуги.Ссылка.Кратность,
		|	ПоступлениеТоваровУслугУслуги.Всего / ПоступлениеТоваровУслугУслуги.Количество,
		|	0,
		|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
		|	ПоступлениеТоваровУслугУслуги.СуммаНСП,
		|	ПоступлениеТоваровУслугУслуги.БазаНДС,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	ПоступлениеТоваровУслугУслуги.Ссылка В(&МассивСсылок)";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТабличнойЧасти = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	КонецЦикла;	
КонецПроцедуры

//&НаСервереБезКонтекста
//Функция КомментарийДокумента(Ссылка)

//	Возврат Ссылка.Комментарий;	

//КонецФункции // КомментарийДокумента()

// Процедура - Установить пиктограмму комментария.
//
&НаКлиенте
Процедура УстановитьПиктограммуКомментария()
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
КонецПроцедуры

// Получает набор данных с сервера для процедуры КонтрагентПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеКонтрагентПриИзменении(Контрагент, Организация)
	
	ДоговорПоУмолчанию = ПолучитьДоговорПоУмолчанию(Объект.Ссылка, Контрагент, Организация);
	
	СтруктураДанные = Новый Структура;
	
	СтруктураДанные.Вставить(
		"ДоговорКонтрагента",
		ДоговорПоУмолчанию);
		
	СтруктураДанные.Вставить(
		"ОсновнойБанковскийСчет",
		Объект.Контрагент.ОсновнойБанковскийСчет);	
		
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеКонтрагентПриИзменении()

// Получает договор по умолчанию
//
&НаСервереБезКонтекста
Функция ПолучитьДоговорПоУмолчанию(Документ, Контрагент, Организация)
	
	МенеджерСправочника = Справочники.ДоговорыКонтрагентов;
	
	СписокВидовДоговоров = МенеджерСправочника.ВидыДоговораДляДокумента(Документ);
	ДоговорПоУмолчанию = МенеджерСправочника.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(Контрагент, Организация, СписокВидовДоговоров);
	
	Возврат ДоговорПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИзменениеДоговора(МодифицированДоговор = Ложь)
	
	СтруктураДанные = ПолучитьДанныеДоговорПриИзменении(Объект.ДоговорКонтрагента);
	
	Объект.ВалютаДокумента 	= СтруктураДанные.ВалютаРасчетов;
	Объект.СтавкаНДС 		= СтруктураДанные.СтавкаНДС;
	
	Если Объект.ВалютаДокумента = ВалютаРегламентированногоУчета Тогда
		Объект.Курс = 1;
	КонецЕсли;	
		
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

// Получает набор данных с сервера для процедуры ДоговорПриИзменении.
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеДоговорПриИзменении(ДоговорКонтрагента)
	
	СтруктураДанные = Новый Структура;
	
	СтруктураДанные.Вставить(
		"ВалютаРасчетов",
		ДоговорКонтрагента.ВалютаРасчетов);
		
	СтруктураДанные.Вставить(
		"СтавкаНДС",
		ДоговорКонтрагента.СтавкаНДС);	
		
	//СтруктураДанные.Вставить(
	//	"КодКодаПоставкиНДС",
	//	ДоговорКонтрагента.КодПоставкиНДС.Код);
	//	
	//СтруктураДанные.Вставить(
	//	"КодВидаПоставкиНДС",
	//	ДоговорКонтрагента.КодПоставкиНДС.Владелец.Код);
	//	
	//СтруктураДанные.Вставить(
	//	"НомерДоговора",
	//	ДоговорКонтрагента.НомерДоговора);
	//	
	//СтруктураДанные.Вставить(
	//	"ДатаДоговора",
	//	ДоговорКонтрагента.ДатаДоговора);	
		
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДоговорПриИзменении()

// Получает набор данных с сервера для процедуры ДоговорПриИзменении.
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеДокументКорректировочныйЭСФПриИзменении(ДокументКорректировочныйЭСФ)
	
	СтруктураДанные = Новый Структура;
	
	СтруктураДанные.Вставить(
		"НомерЭСФ",
		ДокументКорректировочныйЭСФ.НомерЭСФ);
		
	СтруктураДанные.Вставить(
		"ДатаПоставки",
		ДокументКорректировочныйЭСФ.ДатаПоставки);
		
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДоговорПриИзменении()

&НаСервере
Функция ТребуетсяНастройкаАвторизацияИнтернетПоддержки()
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
		Возврат Не МодульИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	Если Не (ТипЗнч(Результат) = Тип("Структура")
		И ЗначениеЗаполнено(Результат.Логин)) Тогда
		Возврат;
	КонецЕсли;
	
	ПродолжитьСохранение(ДополнительныеПараметры.МассивСсылок);	
КонецПроцедуры

// Процедура заполняет список выбора Точность цены
//
&НаСервере
Процедура ЗаполнитьСписокВыбораТочностьЦены()

	Элементы.ТочностьЦены.СписокВыбора.Очистить();

	ЗначенияТочностиЦены = Ценообразование.ЗначенияТочностиЦены();
	Для Каждого ЗначениеТочностиЦены Из ЗначенияТочностиЦены Цикл 
		Элементы.ТочностьЦены.СписокВыбора.Добавить(ЗначениеТочностиЦены.Значение, ЗначениеТочностиЦены.Представление);
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьСписокВыбораТочностьЦены()

// Процедура устанавливает формат и формат редактирования элементов "Цена" в ТЧ "Товары" и "Услуги"
//
&НаКлиенте
Процедура УстановитьФорматЦены()

	ФорматЦены = ЦенообразованиеКлиент.ФорматЦены(Объект.ТочностьЦены);
	
	Элементы.ТоварыЦена.ФорматРедактирования = ФорматЦены;
	Элементы.ТоварыЦена.Формат = ФорматЦены;

	Элементы.Товары.Обновить();
	
КонецПроцедуры

// Процедура рассчитывает итоги для подвала формы.
//
&НаКлиенте
Процедура ОбновитьПодвалФормы()
	
	ИтогВсего = Объект.Товары.Итог("Всего");
	ИтогСуммаНДС = Объект.Товары.Итог("СуммаНДС");
	ИтогСуммаНСП = Объект.Товары.Итог("СуммаНСП");
	
КонецПроцедуры // ОбновитьПодвалФормы()

#КонецОбласти

#Область ФормированиеДокументаВЭлектронномФормате

&НаКлиенте
Процедура ПродолжитьСохранение(МассивСсылок)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Укажите путь для сохранения файла'");
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ДиалогОткрытияФайлаЗавершение", ЭтотОбъект, Новый Структура("МассивСсылок", МассивСсылок));
	ДиалогОткрытияФайла.Показать(Оповещение);

КонецПроцедуры // ПродолжитьСохранение()

&НаКлиенте
Процедура ДиалогОткрытияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		Попытка
			ПараметрыФайлаXML = Новый Структура();
			ПараметрыФайлаXML.Вставить("МассивСсылок", ДополнительныеПараметры.МассивСсылок);
			ПараметрыФайлаXML.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
			
			СтруктураДанных = ДанныеФайлаXML(ПараметрыФайлаXML);
			
			Если СтруктураДанных = Неопределено Тогда
				Возврат;	
			КонецЕсли;	
			
		Исключение
			ТекстСообщения = НСтр("ru='Не удалось завершить формирование файла.
				|Техническая информация об ошибке: %1'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));	
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;	
		
		// Формирование имени файла.
		КаталогФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ВыбранныеФайлы[0]);
		ИмяФайла = СтруктураДанных.ИмяФайла;
		ПолноеИмяФайла = КаталогФайла + ИмяФайла;
		
		// Сохранение файла.
		Двоичное = ПолучитьИзВременногоХранилища(СтруктураДанных.АдресВременногоХранилища);
		Двоичное.Записать(ПолноеИмяФайла);	
		
		ТекстОповещения = НСтр("ru = 'Файл сформирован'");
		ТекстПояснения = ИмяФайла;
		ПоказатьОповещениеПользователя(
			ТекстОповещения, 
			Новый ОписаниеОповещения("ОткрытьПроводник", ЭтотОбъект, Новый Структура("ПолноеИмяФайла", ПолноеИмяФайла)), 
			ТекстПояснения, 
			БиблиотекаКартинок.Информация32);
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеФайлаXML(ПараметрыФайлаXML)
	Возврат Документы.ЭлектронныйСчетФактураВыписанный.ФормированиеФайлаXML(ПараметрыФайлаXML);		
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.РаботаСФайлами

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)

	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
    РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
    РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,
		ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
    РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,
		ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти
