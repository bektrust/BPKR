#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.ПлановаяСтоимость КАК Цена,
		|	&Валюта КАК Валюта,
		|	&СпособЗаполненияЦены КАК СпособЗаполненияЦены,
		|	&ЦенаВключаетНалоги КАК ЦенаВключаетНалоги
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Продукция КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ)	
	
	ТекстыЗапроса = Новый Массив;

	// Таблица Поступление.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	&СодержаниеПроводкиВыпускОтходов КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Продукция"" КАК ИмяСписка,
		|	&СинонимПродукция КАК СинонимСписка,
		|	ВременнаяТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаПродукция.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаПродукция.СуммаПлановая КАК СуммаПлановая,
		|	ВременнаяТаблицаПродукция.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВременнаяТаблицаШапка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Таблица Выпуск.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	""Продукция"" КАК ИмяСписка,
		|	&СинонимПродукция КАК СинонимСписка,
		|	ВременнаяТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаПродукция.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВременнаяТаблицаШапка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
		|	ВременнаяТаблицаПродукция.Спецификация КАК Спецификация,
		|	ВременнаяТаблицаПродукция.СчетУчета КАК СчетСписания,
		|	ВЫБОР
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания1,
		|	ВЫБОР
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания2,
		|	ВЫБОР
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ВременнаяТаблицаПродукция.Номенклатура
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
		|			ТОГДА ВременнаяТаблицаШапка.Склад
		|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
		|				И &ВедетсяУчетПоПартиям
		|			ТОГДА ВременнаяТаблицаШапка.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоСписания3,
		|	ВременнаяТаблицаПродукция.Количество КАК Количество,
		|	ВременнаяТаблицаПродукция.СуммаПлановая КАК ПлановаяСтоимость
		|ИЗ
		|	ВременнаяТаблицаПродукция КАК ВременнаяТаблицаПродукция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто1
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто1.Ссылка
		|			И (ВидыСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто2
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто2.Ссылка
		|			И (ВидыСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто3
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = ВидыСубконто3.Ссылка
		|			И (ВидыСубконто3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|		ПО ВременнаяТаблицаПродукция.СчетУчета = Хозрасчетный.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаПродукция.НомерСтроки";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Таблица Отходы.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	""ВозвратныеОтходы"" КАК ИмяСписка,
		|	&СинонимВозвратныеОтходы КАК СинонимСписка,
		|	ВременнаяТаблицаВозвратныеОтходы.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаВозвратныеОтходы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ВременнаяТаблицаШапка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
		|	ВременнаяТаблицаВозвратныеОтходы.Продукция КАК Продукция,
		|	ВременнаяТаблицаВозвратныеОтходы.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВременнаяТаблицаВозвратныеОтходы.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаВозвратныеОтходы.Количество КАК Количество,
		|	ВременнаяТаблицаВозвратныеОтходы.Сумма КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаВозвратныеОтходы КАК ВременнаяТаблицаВозвратныеОтходы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаВозвратныеОтходы.НомерСтроки";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Таблица Списание материалов.
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	&СодержаниеПроводкиСписаниеМатериалов КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Материалы"" КАК ИмяСписка,
		|	&СинонимМатериалы КАК СинонимСписка,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаМатериалы.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаМатериалы.Номенклатура КАК Номенклатура,
		|	Неопределено КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
		|	0 КАК Себестоимость,
		|	ВременнаяТаблицаМатериалы.Количество КАК Количество,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК КорСчетСписания,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК КорСубконто1,
		|	ВременнаяТаблицаШапка.НоменклатурнаяГруппа КАК КорСубконто2,
		|	ВременнаяТаблицаМатериалы.СтатьяЗатрат КАК КорСубконто3
		|ИЗ
		|	ВременнаяТаблицаМатериалы КАК ВременнаяТаблицаМатериалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.УстановитьПараметр("СодержаниеПроводкиСписаниеМатериалов", НСтр("ru = 'Списание материалов в производство'")); 
	Запрос.УстановитьПараметр("СодержаниеПроводкиВыпускОтходов", НСтр("ru = 'Оприходование возвратных отходов'")); 
	
	Запрос.УстановитьПараметр("СинонимПродукция", НСтр("ru = 'Продукция'"));
	Запрос.УстановитьПараметр("СинонимМатериалы", НСтр("ru = 'Материалы'"));
	Запрос.УстановитьПараметр("СинонимВозвратныеОтходы", НСтр("ru = 'Возвратные отходы'"));
	
	ВедетсяУчетПоПартиям = СтруктураДополнительныеСвойства.УчетнаяПолитика.СпособОценкиТМЗ <> Перечисления.СпособыОценки.ПоСредней;
	Запрос.УстановитьПараметр("ВедетсяУчетПоПартиям", ВедетсяУчетПоПартиям);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаПродукция = МассивРезультатов[1].Выгрузить();
	ТаблицаВыпуск = МассивРезультатов[2].Выгрузить();
	ТаблицаОтходы = МассивРезультатов[3].Выгрузить();
	
	ТаблицаРеквизитыМатериалы = МассивРезультатов[4].Выгрузить();
	ТаблицаМатериалы = МассивРезультатов[5].Выгрузить();
	
	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ТаблицаМатериалы, ТаблицаРеквизитыМатериалы, Отказ);
	
	ДобавитьКолонкуСодержание(ТаблицаПродукция);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПродукция", ТаблицаПродукция);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыпуск", ТаблицаВыпуск);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОтходы", ТаблицаОтходы);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизитыМатериалы", ТаблицаРеквизитыМатериалы);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеМатериалы", ТаблицаСписанныеМатериалы);
	
	// Подготовка данных
	// 1. Услуги
	// 2. НДС услуги
	
	ТекстыЗапроса = Новый Массив;
	
	// Услуги.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетЗатрат КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетРасчетов КАК СчетКт,
		|	ВременнаяТаблицаШапка.ПодразделениеЗатрат КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.НоменклатурнаяГруппа КАК СубконтоДт2,
		|	ВременнаяТаблицаУслуги.СтатьяЗатрат КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.Контрагент КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,	
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВЫРАЗИТЬ((ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП) * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15,2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|	КОНЕЦ КАК Сумма,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ИЛИ ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаДт,
		|	ВременнаяТаблицаШапка.ВалютаДокумента КАК ВалютаКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|			ИЛИ ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаУслуги.Сумма + ВременнаяТаблицаУслуги.СуммаНСП
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Всего
		|	КОНЕЦ КАК ВалютнаяСуммаКт,
		|	&СодержаниеУслуги КАК Содержание,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоДт,
		|	ВременнаяТаблицаУслуги.Количество КАК КоличествоКт,
		|	НЕОПРЕДЕЛЕНО КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаУслуги.Сумма = 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// НДС услуги.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	2 КАК Порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.СчетЗатрат
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.ПодразделениеЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.СтатьяЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	СУММА(ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаУслуги.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность КАК ЧИСЛО(15,2))
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаНДС
		|	КОНЕЦ) КАК Сумма,	
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаШапка.ВалютаДокумента
		|		ИНАЧЕ &ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК ВалютаДт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаДт,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаШапка.ВалютаДокумента
		|		ИНАЧЕ &ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК ВалютаКт,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК ВалютнаяСуммаКт,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС
		|				И ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|			ТОГДА &СодержаниеНДСВСебестоимость
		|		ИНАЧЕ &СодержаниеНДС
		|	КОНЕЦ КАК Содержание,
		|	0 КАК КоличествоДт,
		|	0 КАК КоличествоКт,
		|	ВременнаяТаблицаУслуги.ЗачетНДС КАК ЗачетНДС
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|					И &ПлательщикНДС
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ &ПлательщикНДС
		|		КОНЕЦ
		|	И НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаУслуги.ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.СчетЗатрат
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС_ПодлежащийВозмещению)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.СчетРасчетовГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.СчетРасчетов
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.ПодразделениеЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаШапка.НоменклатурнаяГруппа
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаУслуги.ЗачетНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.Себестоимость)
		|				И &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.СтатьяЗатрат
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.КонтрагентГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.Контрагент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ВременнаяТаблицаШапка.ДоговорКонтрагентаГНС
		|		ИНАЧЕ ВременнаяТаблицаШапка.ДоговорКонтрагента
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаШапка.ВалютаДокумента
		|		ИНАЧЕ &ВалютаРегламентированногоУчета
		|	КОНЕЦ";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС);

	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", СтруктураДополнительныеСвойства.ДляПроведения.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	Запрос.УстановитьПараметр("СодержаниеУслуги", НСтр("ru = 'Поступление услуг'")); 
	Запрос.УстановитьПараметр("СодержаниеНДС", НСтр("ru = 'НДС'"));
	Запрос.УстановитьПараметр("СодержаниеНДСВСебестоимость", НСтр("ru = 'НДС в себестоимость'"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений)
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Выпуск %1", 
			БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета));
	КонецЦикла;
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПоступлениеТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК Договор,
		|	ВременнаяТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ВременнаяТаблицаШапка.Склад КАК Склад,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаУслуги.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаУслуги.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаУслуги.Сумма КАК Сумма,
		|	ВременнаяТаблицаУслуги.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаУслуги.Количество КАК Количество
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПоступлениеТоваров", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОПоступлении(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Ссылка КАК ДокументСсылка,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ЭтоПоступлениеБезНДС
		|			ТОГДА ВременнаяТаблицаШапка.НомерБланкаСФ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерБланкаСФ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ЭтоПоступлениеБезНДС
		|			ТОГДА ВременнаяТаблицаШапка.Дата
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ДатаСФ,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаПоставки,
		|	ВременнаяТаблицаШапка.ПоступлениеОтНерезидента КАК ПоступлениеОтНерезидента,
		|	ВЫБОР
		|		КОГДА &УказыватьПризнакЗачетаНДС
		|			ТОГДА ВременнаяТаблицаУслуги.ЗачетНДС
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗачетаНДС.ПустаяСсылка)
		|	КОНЕЦ КАК ЗачетНДС,
		
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			И НЕ ВременнаяТаблицаШапка.ПоступлениеОтНерезидента
		|			ТОГДА 0
		|		ИНАЧЕ ВременнаяТаблицаУслуги.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			И НЕ ВременнаяТаблицаШапка.ПоступлениеОтНерезидента
		|			ТОГДА 0
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			И НЕ ВременнаяТаблицаШапка.ПоступлениеОтНерезидента
		|			ТОГДА 0
		|		ИНАЧЕ ВременнаяТаблицаУслуги.СуммаНСП
		|	КОНЕЦ КАК СуммаНСП		
		//|	ВременнаяТаблицаУслуги.Сумма КАК Сумма,
		//|	ВременнаяТаблицаУслуги.СуммаНДС КАК СуммаНДС,
		//|	ВременнаяТаблицаУслуги.СуммаНСП КАК СуммаНСП
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(НЕ ВременнаяТаблицаУслуги.Сумма = 0
		|			ИЛИ НЕ ВременнаяТаблицаУслуги.СуммаНДС = 0
		|			ИЛИ НЕ ВременнаяТаблицаУслуги.СуммаНСП = 0)";
	Запрос.УстановитьПараметр("УказыватьПризнакЗачетаНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.УказыватьПризнакЗачетаНДСПриПоступлении);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОПоступлении", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗначенияСтавокНалогов(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗначенияСтавокНалогов", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУслуги.ЗачетНДС КАК ЗачетНДС,
		|	СУММА(ВременнаяТаблицаУслуги.Сумма) КАК Сумма,
		|	СУММА(ВременнаяТаблицаУслуги.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеТабличныхЧастейГруппировка
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаУслуги.ЗачетНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаДанныеТабличныхЧастейГруппировка.ЗачетНДС КАК ЗачетНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаДанныеТабличныхЧастейГруппировка.СуммаНДС * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность
		|		ИНАЧЕ ВременнаяТаблицаДанныеТабличныхЧастейГруппировка.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА ВременнаяТаблицаДанныеТабличныхЧастейГруппировка.Сумма * ВременнаяТаблицаШапка.Курс / ВременнаяТаблицаШапка.Кратность
		|		ИНАЧЕ ВременнаяТаблицаДанныеТабличныхЧастейГруппировка.Сумма
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеТабличныхЧастейГруппировка КАК ВременнаяТаблицаДанныеТабличныхЧастейГруппировка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	&ПлательщикНДС
		|	И ((ВременнаяТаблицаШапка.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			И НЕ ВременнаяТаблицаШапка.КонтрагентСЭЗ)
		|		ИЛИ ВременнаяТаблицаШапка.ПоступлениеОтНерезидента)";
	Запрос.УстановитьПараметр("ПлательщикНДС", СтруктураДополнительныеСвойства.УчетнаяПолитика.ПлательщикНДС);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрПриобретенныхМатериальныхРесурсов", РезультатЗапроса.Выгрузить());		
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРеестрЗакупок(ДокументСсылка, СтруктураДополнительныеСвойства) 
	                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаШапка.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ВременнаяТаблицаУслуги.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ВременнаяТаблицаШапка.ЭтоПоступлениеБезНДС КАК БезНДС,
		|	ВременнаяТаблицаУслуги.Сумма КАК Сумма,
		|	ВременнаяТаблицаУслуги.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаУслуги.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаУслуги.Количество КАК Количество
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеестрЗакупок", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.БезналичныйРасчет КАК БезналичныйРасчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ТаблицаДокумента.Склад КАК Склад,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Контрагент.ПризнакСтраны КАК ПризнакСтраны,
		|	ТаблицаДокумента.Контрагент.СЭЗ КАК КонтрагентСЭЗ,
		|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТаблицаДокумента.СчетРасчетов КАК СчетРасчетов,
		|	ТаблицаДокумента.Курс КАК Курс,
		|	ТаблицаДокумента.Кратность КАК Кратность,
		|	&КонтрагентГНС КАК КонтрагентГНС,
		|	&ДоговорКонтрагентаГНС КАК ДоговорКонтрагентаГНС,
		|	&СчетРасчетовГНС КАК СчетРасчетовГНС,
		|	ТаблицаДокумента.НомерБланкаСФ КАК НомерБланкаСФ,
		|	ТаблицаДокумента.ЗначениеСтавкиНДС КАК ЗначениеСтавкиНДС,
		|	ТаблицаДокумента.ЭтоПоступлениеБезНДС КАК ЭтоПоступлениеБезНДС,
		|	ТаблицаДокумента.ПоступлениеОтНерезидента КАК ПоступлениеОтНерезидента
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ПоступлениеИзПереработки КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.СуммаПлановая КАК СуммаПлановая,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.Спецификация КАК Спецификация
		|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Продукция КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
		|	ТаблицаДокумента.СуммаНСП КАК СуммаНСП,
		|	ТаблицаДокумента.Всего КАК Всего,
		|	ТаблицаДокумента.ЗачетНДС КАК ЗачетНДС,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаУслуги
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.Сумма КАК Сумма,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ТаблицаДокумента.Продукция КАК Продукция
		|ПОМЕСТИТЬ ВременнаяТаблицаВозвратныеОтходы
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.ВозвратныеОтходы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаМатериалы
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Материалы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	// Параметры для отражения НДС.
	КонтрагентГНС = СтруктураДополнительныеСвойства.ДляПроведения.Организация.КонтрагентГНС;
	
	СписокВидовДоговора = Новый СписокЗначений;
	СписокВидовДоговора.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
	ДоговорКонтрагентаГНС = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(КонтрагентГНС, 
		СтруктураДополнительныеСвойства.ДляПроведения.Организация, СписокВидовДоговора);
		
	СчетаУчета = БухгалтерскийУчетСервер.ПолучитьСчетаРасчетовСКонтрагентом(СтруктураДополнительныеСвойства.ДляПроведения.Организация, 
		КонтрагентГНС, ДоговорКонтрагентаГНС);
		
	Запрос.УстановитьПараметр("КонтрагентГНС", КонтрагентГНС);
	Запрос.УстановитьПараметр("ДоговорКонтрагентаГНС", ДоговорКонтрагентаГНС);
	Запрос.УстановитьПараметр("СчетРасчетовГНС", СчетаУчета.СчетРасчетовПоставщика);
	
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ);
	СформироватьТаблицаПоступлениеТоваров(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСведенияОПоступлении(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗначенияСтавокНалогов(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРеестрПриобретенныхМатериальныхРесурсов(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРеестрЗакупок(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПечатьНакладная
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьТребованиеНакладная(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПоступлениеИзПереработки_ТребованиеНакладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеИзПереработки.ПФ_MXL_ТребованиеНакладная");

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеИзПереработки.Ссылка,
		|	ПоступлениеИзПереработки.Номер,
		|	ПоступлениеИзПереработки.Дата,
		|	ПоступлениеИзПереработки.Организация,
		|	ПоступлениеИзПереработки.Склад,
		|	ПоступлениеИзПереработки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.Склад) КАК СкладПредставление,
		|	ПоступлениеИзПереработки.Материалы.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Номенклатура.Код КАК НоменклатураКод,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.Материалы.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество
		|	)
		|ИЗ
		|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
		|ГДЕ
		|	ПоступлениеИзПереработки.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
		
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Требование-накладная'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);

		ТаблицаМатериалы = Шапка.Материалы.Выгрузить();
				
		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		МассивОбластейМакета.Добавить("Подписи");

		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаМатериалы Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьНакладная
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладнаяНаПередачу(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПоступлениеИзПереработки_НакладнаяНаПередачу";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеИзПереработки.ПФ_MXL_НакладнаяНаПередачу");

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеИзПереработки.Ссылка КАК Ссылка,
		|	ПоступлениеИзПереработки.Номер КАК Номер,
		|	ПоступлениеИзПереработки.Дата КАК ДатаДокумента,
		|	ПоступлениеИзПереработки.Организация КАК Организация,
		|	ПоступлениеИзПереработки.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ПоступлениеИзПереработки.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
		|	ПоступлениеИзПереработки.Организация.КодГКЭД КАК ОрганизацияКодПоГКЭД,
		|	ПоступлениеИзПереработки.Продукция.(
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		Номенклатура.Код КАК НоменклатураКод,
		|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
		|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|		Количество КАК Количество,
		|		ПлановаяСтоимость КАК Цена,
		|		СуммаПлановая КАК Сумма
		|	) КАК Продукция
		|ИЗ
		|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
		|ГДЕ
		|	ПоступлениеИзПереработки.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
		
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = Новый Структура;	
		ДанныеПечати.Вставить("НомерДокумента",		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер));
		ДанныеПечати.Вставить("ИтогоКоличество",	0);
		ДанныеПечати.Вставить("ИтогоСумма", 		0);
		ДанныеПечати.Вставить("КоличествоПрописью",	"");
		ДанныеПечати.Вставить("СуммаПрописью", 		"");
		ДанныеПечати.Вставить("НоменклатураКод",	"");
	
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
		ОбластьИтого 	= Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал 	= Макет.ПолучитьОбласть("Подвал");
		
		МассивОбластейПроверки = Новый Массив;

		ВыборкаПродукция = Шапка.Продукция.Выбрать();
		КоличествоСтрок = ВыборкаПродукция.Количество();
		НомерСтроки = 1;
		
		Пока ВыборкаПродукция.Следующий() Цикл
			
			ДанныеПечати.НоменклатураКод = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПродукция.НоменклатураКод);
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПродукция);
			ОбластьСтрока.Параметры.Заполнить(ДанныеПечати);
			МассивОбластейПроверки.Добавить(ОбластьСтрока);
			
			ДанныеПечати.ИтогоКоличество = ДанныеПечати.ИтогоКоличество + ВыборкаПродукция.Количество;
			ДанныеПечати.ИтогоСумма 	 = ДанныеПечати.ИтогоСумма + ВыборкаПродукция.Сумма;
			
			Если КоличествоСтрок = НомерСтроки Тогда
				ДанныеПечати.КоличествоПрописью	= БухгалтерскийУчетСервер.КоличествоПрописью(ДанныеПечати.ИтогоКоличество);
				ДанныеПечати.СуммаПрописью 		= БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.ИтогоСумма);
				
				ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
				ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
				
				МассивОбластейПроверки.Добавить(ОбластьСтрока);
				МассивОбластейПроверки.Добавить(ОбластьИтого);
				МассивОбластейПроверки.Добавить(ОбластьПодвал);
			КонецЕсли;
			
			Если ТабличныйДокумент.ПроверитьВывод(МассивОбластейПроверки) Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапка);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;	
			
			МассивОбластейПроверки.Удалить(0);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;	
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции
  
// Функция формирует табличный документ с печатной формой ПечатьНакладной
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеИзПереработки.Ссылка КАК Ссылка,
		|	ПоступлениеИзПереработки.Номер КАК Номер,
		|	ПоступлениеИзПереработки.Дата КАК Дата,
		|	ПоступлениеИзПереработки.Организация КАК Организация,
		|	ПоступлениеИзПереработки.Склад КАК Склад,
		|	ПоступлениеИзПереработки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ПоступлениеИзПереработки.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
		|	ПоступлениеИзПереработки.Контрагент.ПризнакСтраны КАК КонтрагентПризнакСтраны,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.Склад) КАК СкладПредставление,
		|	ПоступлениеИзПереработки.Курс КАК Курс,
		|	ПоступлениеИзПереработки.Кратность КАК Кратность,
		|	ПоступлениеИзПереработки.ВалютаДокумента КАК ВалютаДокумента,
		|	ПоступлениеИзПереработки.Услуги.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.Услуги.Номенклатура.КодГКЭД) КАК КодПоКлассификатору,
		|		ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.Услуги.Номенклатура.ЕдиницаИзмерения) КАК ЕИ,
		|		Количество КАК Количество,
		|		ВЫРАЗИТЬ(ПоступлениеИзПереработки.Услуги.Всего / ПоступлениеИзПереработки.Услуги.Количество * ПоступлениеИзПереработки.Услуги.Ссылка.Курс / ПоступлениеИзПереработки.Услуги.Ссылка.Кратность КАК ЧИСЛО(15, 2)) КАК Цена,
		|		ВЫБОР
		|			КОГДА НЕ ПоступлениеИзПереработки.Услуги.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|					И ПоступлениеИзПереработки.Услуги.Ссылка.Контрагент.ПризнакСтраны = &ПризнакСтраныКР
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеИзПереработки.Услуги.СуммаНДС * ПоступлениеИзПереработки.Услуги.Ссылка.Курс / ПоступлениеИзПереработки.Услуги.Ссылка.Кратность КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ПоступлениеИзПереработки.Услуги.СуммаНДС
		|		КОНЕЦ КАК СуммаНДС,
		|		ВЫБОР
		|			КОГДА НЕ ПоступлениеИзПереработки.Услуги.Ссылка.ВалютаДокумента = &ВалютаРегламентированногоУчета
		|					И ПоступлениеИзПереработки.Услуги.Ссылка.Контрагент.ПризнакСтраны = &ПризнакСтраныКР
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеИзПереработки.Услуги.СуммаНСП * ПоступлениеИзПереработки.Услуги.Ссылка.Курс / ПоступлениеИзПереработки.Услуги.Ссылка.Кратность КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ПоступлениеИзПереработки.Услуги.СуммаНСП
		|		КОНЕЦ КАК СуммаНСП,
		|		ВЫРАЗИТЬ(ПоступлениеИзПереработки.Услуги.Всего * ПоступлениеИзПереработки.Услуги.Ссылка.Курс / ПоступлениеИзПереработки.Услуги.Ссылка.Кратность КАК ЧИСЛО(15, 2)) КАК Всего
		|	) КАК Услуги
		|ИЗ
		|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
		|ГДЕ
		|	ПоступлениеИзПереработки.Ссылка В(&СписокДокументов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПризнакСтраныКР", Перечисления.ПризнакиСтраны.КР);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПоступлениеИзПереработки_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеИзПереработки.ПФ_MXL_Накладная");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных.
		ДанныеПечати = Новый Структура;
		
		ТекстЗаголовка = СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Накладная на поступление'"));
		ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("СкладПредставление", Шапка.СкладПредставление);
		ДанныеПечати.Вставить("КонтрагентНаименованиеПолное", Шапка.КонтрагентНаименованиеПолное);

		ТаблицаУслуги = Шапка.Услуги.Выгрузить();
		ДанныеПечати.Вставить("НаименованиеКлассификатора", НСтр("ru = 'Код ГКЭД'"));	
		
		
		Всего = ТаблицаУслуги.Итог("Всего");
		
		ВсегоНДС = ТаблицаУслуги.Итог("СуммаНДС");
		ВсегоНСП = ТаблицаУслуги.Итог("СуммаНСП");
		
		КоличествоНаименований = ТаблицаУслуги.Количество();		
		
		Если Шапка.КонтрагентПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда 
			ДанныеПечати.Вставить("НадписьНДС", НСтр("ru = 'НДС на импорт:'"));
		Иначе 
			ДанныеПечати.Вставить("НадписьНДС", НСтр("ru = 'в том числе НДС:'"));
		КонецЕсли;	
		
		ДанныеПечати.Вставить("Всего", Всего);
		ДанныеПечати.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеПечати.Вставить("ВсегоНСП", ВсегоНСП);
		ДанныеПечати.Вставить("ИтоговаяСтрока", 
			СтрШаблон(НСтр("ru = 'Всего наименований %1, на сумму %2'"), 
			Формат(КоличествоНаименований, "ЧН=0; ЧГ=0"), Формат(ДанныеПечати.Всего, "ЧЦ=15; ЧДЦ=2")));
		ДанныеПечати.Вставить("СуммаПрописью", 
								БухгалтерскийУчетСервер.СформироватьСуммуПрописью(
									ДанныеПечати.Всего, ВалютаРегламентированногоУчета));

		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		 
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");		
		
		МассивОбластейМакета.Добавить("Подвал");		
		МассивОбластейМакета.Добавить("Итоги");
		Если Шапка.КонтрагентПризнакСтраны = Перечисления.ПризнакиСтраны.КР
			Или Шапка.КонтрагентПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда 
			МассивОбластейМакета.Добавить("ИтогиНДС");
		КонецЕсли;
		Если Шапка.КонтрагентПризнакСтраны = Перечисления.ПризнакиСтраны.КР Тогда 
			МассивОбластейМакета.Добавить("ИтогиНСП");
		КонецЕсли;	
		МассивОбластейМакета.Добавить("СуммаПрописью");
		МассивОбластейМакета.Добавить("Подписи");
	
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Если ИмяОбласти = "Строка" ИЛИ ИмяОбласти = "СтрокаДопЕдиницы" Тогда
				
				НомерСтроки = 1;
				
				Для Каждого СтрокаТаблицы Из ТаблицаУслуги Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьМакета);
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;
					
			Иначе
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;	
		КонецЦикла;
		
		БухгалтерскиеОтчеты.ВыводПодписиРуководителей(ТабличныйДокумент, Шапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТребованиеНакладная") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТребованиеНакладная", НСтр("ru = 'Требование-накладная'"), 
		ПечатьТребованиеНакладная(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПоступлениеИзПереработки.ПФ_MXL_ТребованиеНакладная");
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПередачу") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"НакладнаяНаПередачу", НСтр("ru = 'Накладная на передачу'"), 
		ПечатьНакладнаяНаПередачу(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПоступлениеИзПереработки.ПФ_MXL_НакладнаяНаПередачу");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Накладная", НСтр("ru = 'Накладная'"), 
		ПечатьНакладная(МассивОбъектов, ОбъектыПечати),,
		"Документ.ПоступлениеИзПереработки.ПФ_MXL_Накладная");
	КонецЕсли;
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТребованиеНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПередачу";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрПоступлениеИзПереработки";     
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Отчет производства за смену""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "")
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции

#КонецОбласти

#КонецЕсли
