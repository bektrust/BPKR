#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СверкаПоСоцФонду Тогда  
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");		
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДаннымБухгалтерскогоУчета() Экспорт
	
	ТекстыЗапроса = Новый Массив;

	// Остаток.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&НачалоПериода,
		|			Счет В (&СчетаРасчетовСКонтрагентами),
		|			,
		|			Организация = &Организация
		|				И Валюта = &Валюта
		|				И Субконто1 В (&Контрагенты)
		|				И Субконто2 = &Договор) КАК ХозрасчетныйОстатки";
	Если ВалютаСверки.Пустая() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Валюта = &Валюта", "Истина");
	КонецЕсли;
	Если ДоговорКонтрагента.Пустая() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Субконто2 = &Договор", "Истина");
	КонецЕсли;
	Если СверкаПоСоцФонду Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Субконто1 В (&Контрагенты)", "Истина");
	КонецЕсли;	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Сверка по соц.фонду.
	Если СверкаПоСоцФонду Тогда 
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументСверки,
			|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетУчета,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаДт,
			|	0 КАК СуммаКт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, СчетДт В (&СчетаРасчетовСКонтрагентами), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.Регистратор,
			|	ХозрасчетныйОборотыДтКт.СчетКт,
			|	0,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, , , СчетКт В (&СчетаРасчетовСКонтрагентами), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЕсли;	
	
	Если Не СверкаПоСоцФонду Тогда 
		// По контрагентам.
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.ПериодСекунда КАК Дата,
			|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументСверки,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК ДоговорКонтрагента,
			|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетУчета,
			|	ЕСТЬNULL(СведенияОбЭСФ.НомерЭСФ, 0) КАК НомерЭСФ,
			|	СУММА(ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотДт) КАК СуммаДт,
			|	СУММА(0) КАК СуммаКт
			|ПОМЕСТИТЬ ВременнаяТаблицаИтоговыеДанные
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			Авто,
			|			СчетДт В (&СчетаРасчетовСКонтрагентами),
			|			,
			|			,
			|			,
			|			Организация = &Организация
			|				И ВалютаДт = &Валюта
			|				И СубконтоДт1 В (&Контрагенты)
			|				И СубконтоДт2 = &Договор) КАК ХозрасчетныйОборотыДтКт
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
			|		ПО (ХозрасчетныйОборотыДтКт.Регистратор = СведенияОбЭСФ.ДокументОснование
			|				И &ВыводитьНомерЭСФ)
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &УчитыватьВзаимозачеты
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ НЕ(ХозрасчетныйОборотыДтКт.СчетДт В (&СчетаРасчетовСКонтрагентами)
			|						И ХозрасчетныйОборотыДтКт.СчетКт В (&СчетаРасчетовСКонтрагентами)
			|						И ХозрасчетныйОборотыДтКт.СубконтоДт1 = ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоКт1, НЕОПРЕДЕЛЕНО)
			|						И ХозрасчетныйОборотыДтКт.СубконтоДт2 = ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоКт2, НЕОПРЕДЕЛЕНО))
			|		КОНЕЦ
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОборотыДтКт.Регистратор,
			|	ХозрасчетныйОборотыДтКт.ПериодСекунда,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
			|	ХозрасчетныйОборотыДтКт.СчетДт,
			|	ЕСТЬNULL(СведенияОбЭСФ.НомерЭСФ, 0)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.ПериодСекунда,
			|	ХозрасчетныйОборотыДтКт.Регистратор,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
			|	ХозрасчетныйОборотыДтКт.СчетКт,
			|	ЕСТЬNULL(СведенияОбЭСФ.НомерЭСФ, 0),
			|	СУММА(ВЫБОР
			|			КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВозвратПроданныхТоваровИСкидки)
			|				ТОГДА -ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	СУММА(ВЫБОР
			|			КОГДА ХозрасчетныйОборотыДтКт.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВозвратПроданныхТоваровИСкидки)
			|				ТОГДА 0
			|			ИНАЧЕ ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт
			|		КОНЕЦ)
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			Авто,
			|			,
			|			,
			|			СчетКт В (&СчетаРасчетовСКонтрагентами),
			|			,
			|			Организация = &Организация
			|				И ВалютаКт = &Валюта
			|				И СубконтоКт1 В (&Контрагенты)
			|				И СубконтоКт2 = &Договор) КАК ХозрасчетныйОборотыДтКт
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбЭСФ КАК СведенияОбЭСФ
			|		ПО (ХозрасчетныйОборотыДтКт.Регистратор = СведенияОбЭСФ.ДокументОснование
			|				И &ВыводитьНомерЭСФ)
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &УчитыватьВзаимозачеты
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ НЕ(ХозрасчетныйОборотыДтКт.СчетДт В (&СчетаРасчетовСКонтрагентами)
			|						И ХозрасчетныйОборотыДтКт.СчетКт В (&СчетаРасчетовСКонтрагентами)
			|						И ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоДт1, НЕОПРЕДЕЛЕНО) = ХозрасчетныйОборотыДтКт.СубконтоКт1
			|						И ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО) = ХозрасчетныйОборотыДтКт.СубконтоКт2)
			|		КОНЕЦ
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОборотыДтКт.ПериодСекунда,
			|	ХозрасчетныйОборотыДтКт.Регистратор,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
			|	ХозрасчетныйОборотыДтКт.СчетКт,
			|	ЕСТЬNULL(СведенияОбЭСФ.НомерЭСФ, 0)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтоговыеДанные.Дата КАК Дата,
			|	ИтоговыеДанные.ДокументСверки КАК ДокументСверки,
			|	ИтоговыеДанные.ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	ИтоговыеДанные.СчетУчета КАК СчетУчета,
			|	ИтоговыеДанные.НомерЭСФ КАК НомерЭСФ,
			|	СУММА(ИтоговыеДанные.СуммаДт) КАК СуммаДт,
			|	СУММА(ИтоговыеДанные.СуммаКт) КАК СуммаКт
			|ИЗ
			|	ВременнаяТаблицаИтоговыеДанные КАК ИтоговыеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ИтоговыеДанные.Дата,
			|	ИтоговыеДанные.СчетУчета,
			|	ИтоговыеДанные.ДоговорКонтрагента,
			|	ИтоговыеДанные.ДокументСверки,
			|	ИтоговыеДанные.НомерЭСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата";
		Если ВалютаСверки.Пустая() Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВалютаДт = &Валюта", "Истина");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВалютаКт = &Валюта", "Истина");		
		КонецЕсли;	
		Если ДоговорКонтрагента.Пустая() Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СубконтоДт2 = &Договор", "Истина");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СубконтоКт2 = &Договор", "Истина");
		КонецЕсли;
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	// Счета расчетов.
	Если СверкаПоСоцФонду Тогда 
		ДанныеУчетнойПолитики = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Дата, Организация);
		
		СчетаРасчетовСКонтрагентами = Новый Массив;
		СчетаРасчетовСКонтрагентами.Добавить(ДанныеУчетнойПолитики.СчетУчетаРасчетовГНПФР);
		СчетаРасчетовСКонтрагентами.Добавить(ДанныеУчетнойПолитики.СчетУчетаРасчетовМСФ);
		СчетаРасчетовСКонтрагентами.Добавить(ДанныеУчетнойПолитики.СчетУчетаРасчетовФОТФ);
		СчетаРасчетовСКонтрагентами.Добавить(ДанныеУчетнойПолитики.СчетУчетаРасчетовПФФ);
	Иначе
		ИсключенныеСчета = Новый Массив;
		ИсключенныеСчета.Добавить(ПланыСчетов.Хозрасчетный.НДСНаАвансы); // 1549
		СчетаРасчетовСКонтрагентами = БухгалтерскийУчетСервер.СчетаРасчетовСКонтрагентами();
	КонецЕсли;	
	
	// Список контрагентов.
	Контрагенты = Новый Массив;
	Контрагенты.Добавить(Контрагент);
	Если ВключаяФилиалы Тогда
		ПодчиненныеКонтрагенты = Справочники.Контрагенты.ПодчиненныеКонтрагенты(Контрагент);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Контрагенты, ПодчиненныеКонтрагенты); 
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СверкаПоСоцФонду", СверкаПоСоцФонду);
	Запрос.УстановитьПараметр("СчетаРасчетовСКонтрагентами", СчетаРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("Контрагенты", Контрагенты);
	Запрос.УстановитьПараметр("Валюта", ВалютаСверки);
	Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("УчитыватьВзаимозачеты", УчитыватьВзаимозачеты);
	Запрос.УстановитьПараметр("ВыводитьНомерЭСФ", ВыводитьНомерЭСФ);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Остаток.
	ТаблицаОстатки = МассивРезультатов[0].Выгрузить();
	Если ВалютаСверки.Пустая() Тогда 
		ОстатокНаНачало = ТаблицаОстатки.Итог("СуммаОстаток");
	Иначе 
		ОстатокНаНачало = ТаблицаОстатки.Итог("ВалютнаяСуммаОстаток");
	КонецЕсли;	
	
	Отказ = Ложь;
	
	Если СверкаПоСоцФонду 
		И МассивРезультатов[1].Пустой() Тогда 
		ТекстСообщения = НСтр("ru = 'Для введенных данных за указанный период нет никаких операций.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	ИначеЕсли НЕ СверкаПоСоцФонду
		И МассивРезультатов[2].Пустой() Тогда 
		ТекстСообщения = НСтр("ru = 'Проверьте правильность заполнения контрагента и договора, для введенных данных за указанный период нет никаких операций.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;		
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
	
	// По данным организации.
	Если СверкаПоСоцФонду Тогда
		Выборка = МассивРезультатов[1].Выбрать();
	Иначе 
		Выборка = МассивРезультатов[2].Выбрать();
	КонецЕсли;	
	
	Пока Выборка.Следующий() Цикл
		СтрокаТабличнойЧасти = ПоДаннымОрганизации.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);		
		Если СтрокаТабличнойЧасти.СуммаДт < 0 Тогда
			СтрокаТабличнойЧасти.СуммаКт = -СтрокаТабличнойЧасти.СуммаДт;
			СтрокаТабличнойЧасти.СуммаДт = 0;
			
		ИначеЕсли СтрокаТабличнойЧасти.СуммаКт < 0 Тогда
			СтрокаТабличнойЧасти.СуммаДт = -СтрокаТабличнойЧасти.СуммаКт;
			СтрокаТабличнойЧасти.СуммаКт = 0;
		КонецЕсли;	
	КонецЦикла;	
	
	Выборка.Сбросить();
	
	// Список счетов.
	СписокСчетов.Загрузить(ТаблицаОстатки);
	
	Пока Выборка.Следующий() Цикл 
		СтрокаТабличнойЧасти = СписокСчетов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	КонецЦикла;	
	
	СписокСчетов.Свернуть("СчетУчета, ДоговорКонтрагента");
	СписокСчетов.Сортировать("СчетУчета, ДоговорКонтрагента");
	 
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли