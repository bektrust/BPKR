#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Организации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт = СведенияОбОрганизации.Город;
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
	+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	ЭлПочта = СведенияОбОрганизации.Email;
	
	Структура = Новый Структура();
	Структура.Вставить("Индекс", Индекс);
	Структура.Вставить("ЭлПочта", ЭлПочта);
	Структура.Вставить("Телефон", Телефон);
	Структура.Вставить("АдрОбластьГород", АдрОбластьГород);
	Структура.Вставить("АдресОрганизации", АдресОрганизации);
	
	Возврат Структура;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти
	
#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ПН
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПоПН(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетыПоПодоходномуНалогу.Ссылка КАК Ссылка,
		|	ОтчетыПоПодоходномуНалогу.Дата КАК Дата,
		|	ОтчетыПоПодоходномуНалогу.Организация КАК Организация,
		|	ОтчетыПоПодоходномуНалогу.ВидСубъекта КАК ВидСубъекта,
		|	ОтчетыПоПодоходномуНалогу.ВидОтчета КАК ВидОтчета,
		|	ОтчетыПоПодоходномуНалогу.ПодоходныйНалог.(
		|		НомерСтрокиОтчета КАК НомерСтрокиОтчета,
		|		СУММА(Количество) КАК Количество,
		|		СУММА(СуммаНачислено) КАК Начислено,
		|		СУММА(СуммаНеоблагаемая) КАК Необлагаемая,
		|		СУММА(Вычеты) КАК Вычеты,
		|		СУММА(СуммаОблагаемая) КАК Облагаемая,
		|		СУММА(СуммаПНсСотрудника) КАК ПодоходныйСотрудника,
		|		СУММА(СуммаПНсМРД) КАК СМРД,
		|		СУММА(СальдоК) КАК ПодоходныйКОплате,
		|		СУММА(СуммаПН) КАК ВсегоПодоходный,
		|		СУММА(СуммаВыплачено) КАК Выплачено
		|	) КАК ПодоходныйНалог
		|ИЗ
		|	Документ.ОтчетыПоПодоходномуНалогу КАК ОтчетыПоПодоходномуНалогу
		|ГДЕ
		|	ОтчетыПоПодоходномуНалогу.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтчетыПоПодоходномуНалогу.ПодоходныйНалог.(НомерСтрокиОтчета)";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Пока Шапка.Следующий() Цикл             	
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Дата = Шапка.Дата;
		ВидСубъекта = Шапка.ВидСубъекта;
		Организация = Шапка.Организация;
		
		НачалоПериода = НачалоКвартала(Дата);
		КонецПериода  = КонецКвартала(Дата);

		Если ВидСубъекта = 0 Тогда 
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоПодоходномуНалогу.ПФ_MXL_ПодоходныйНалогМалогоПредпринимательства");
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоПодоходномуНалогу_ПодоходныйНалогМалогоПредпринимательства";
		ИначеЕсли ВидСубъекта = 1 Тогда	
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоПодоходномуНалогу.ПФ_MXL_ПодоходныйНалогСреднегоПредпринимательства");
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоПодоходномуНалогу_ПодоходныйНалогСреднегоПредпринимательства";	
		ИначеЕсли ВидСубъекта = 2 Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоПодоходномуНалогу.ПФ_MXL_ПодоходныйНалогКрупногоПредпринимательства");
			НачалоПериода = НачалоМесяца(Дата);
			КонецПериода  = КонецМесяца(Дата);
			ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоПодоходномуНалогу_ПодоходныйНалогКрупногоПредпринимательства";
		КонецЕсли;	 
		
		Если Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Первоначальный Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПервоначальный");
		ИначеЕсли Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Уточненный Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокУточненный");
		ИначеЕсли Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Ликвидационный Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЛиквидационный");
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
		
		ИНН = Организация.ИНН;
		ОбластьМакета.Параметры.ИНН1 	= Сред(ИНН,1,1);
		ОбластьМакета.Параметры.ИНН2 	= Сред(ИНН,2,1);
		ОбластьМакета.Параметры.ИНН3 	= Сред(ИНН,3,1);
		ОбластьМакета.Параметры.ИНН4 	= Сред(ИНН,4,1);
		ОбластьМакета.Параметры.ИНН5 	= Сред(ИНН,5,1);
		ОбластьМакета.Параметры.ИНН6 	= Сред(ИНН,6,1);
		ОбластьМакета.Параметры.ИНН7 	= Сред(ИНН,7,1);
		ОбластьМакета.Параметры.ИНН8 	= Сред(ИНН,8,1);
		ОбластьМакета.Параметры.ИНН9 	= Сред(ИНН,9,1);
		ОбластьМакета.Параметры.ИНН10	= Сред(ИНН,10,1);
		ОбластьМакета.Параметры.ИНН11 	= Сред(ИНН,11,1);
		ОбластьМакета.Параметры.ИНН12 	= Сред(ИНН,12,1);
		ОбластьМакета.Параметры.ИНН13 	= Сред(ИНН,13,1);
		ОбластьМакета.Параметры.ИНН14 	= Сред(ИНН,14,1);
		
		ОКПО = Организация.КодПоОКПО;
		ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);

		ГНС = Организация.ГНС.Код;
		ОбластьМакета.Параметры.ГНИ1 = Сред(ГНС,1,1);
		ОбластьМакета.Параметры.ГНИ2 = Сред(ГНС,2,1);
		ОбластьМакета.Параметры.ГНИ3 = Сред(ГНС,3,1);
		ОбластьМакета.Параметры.Налоговая = Организация.ГНС;

		СтрокаДатаН = Формат(НачалоПериода,"ДЛФ=D");
		СтрокаДатаК = Формат(КонецПериода,"ДЛФ=D");
		
		ОбластьМакета.Параметры.ДатаН1 = Сред(СтрокаДатаН,1,1);
		ОбластьМакета.Параметры.ДатаН2 = Сред(СтрокаДатаН,2,1);
		ОбластьМакета.Параметры.ДатаН3 = Сред(СтрокаДатаН,4,1);
		ОбластьМакета.Параметры.ДатаН4 = Сред(СтрокаДатаН,5,1);
		ОбластьМакета.Параметры.ДатаН5 = Сред(СтрокаДатаН,7,1);
		ОбластьМакета.Параметры.ДатаН6 = Сред(СтрокаДатаН,8,1);
		ОбластьМакета.Параметры.ДатаН7 = Сред(СтрокаДатаН,9,1);
		ОбластьМакета.Параметры.ДатаН8 = Сред(СтрокаДатаН,10,1);
		
		ОбластьМакета.Параметры.ДатаК1 = Сред(СтрокаДатаК,1,1);
		ОбластьМакета.Параметры.ДатаК2 = Сред(СтрокаДатаК,2,1);
		ОбластьМакета.Параметры.ДатаК3 = Сред(СтрокаДатаК,4,1);
		ОбластьМакета.Параметры.ДатаК4 = Сред(СтрокаДатаК,5,1);
		ОбластьМакета.Параметры.ДатаК5 = Сред(СтрокаДатаК,7,1);
		ОбластьМакета.Параметры.ДатаК6 = Сред(СтрокаДатаК,8,1);
		ОбластьМакета.Параметры.ДатаК7 = Сред(СтрокаДатаК,9,1);
		ОбластьМакета.Параметры.ДатаК8 = Сред(СтрокаДатаК,10,1);

		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
		
		Индекс          	 = КонтактныеДанные.Индекс;
		АдрОбластьГород 	 = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	        	 = КонтактныеДанные.АдресОрганизации; 
		Телефон		     	 = КонтактныеДанные.Телефон;
		ЭлПочта				 = КонтактныеДанные.ЭлПочта;
		НаименованиеПолное	 = Организация.НаименованиеПолное;
		
		ДанныеПечати = Новый Структура; 
		ДанныеПечати.Вставить("Организация", НаименованиеПолное);
		ДанныеПечати.Вставить("Тел", Телефон);
		ДанныеПечати.Вставить("ЭлПочта", ЭлПочта);
		
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ДанныеПечати.Вставить("Область", АдрОбластьГород);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ДанныеПечати.Вставить("Адрес", ЮрАдрес);
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьМакета.Параметры.Индекс1 = Сред(Индекс,1,1);
			ОбластьМакета.Параметры.Индекс2 = Сред(Индекс,2,1);
			ОбластьМакета.Параметры.Индекс3 = Сред(Индекс,3,1);
			ОбластьМакета.Параметры.Индекс4 = Сред(Индекс,4,1);
			ОбластьМакета.Параметры.Индекс5 = Сред(Индекс,5,1);
			ОбластьМакета.Параметры.Индекс6 = Сред(Индекс,6,1);
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьМакета);	
		
		ОбластьМакета	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ТаблицаПодоходныйНалог = Шапка.ПодоходныйНалог.Выгрузить();
			
		ДанныеПечатиИтоги = Новый Структура; 
		ДанныеПечатиИтоги.Вставить("Количество", ТаблицаПодоходныйНалог.Итог("Количество"));
		ДанныеПечатиИтоги.Вставить("Начислено", ТаблицаПодоходныйНалог.Итог("Начислено"));
		ДанныеПечатиИтоги.Вставить("Необлагаемая", ТаблицаПодоходныйНалог.Итог("Необлагаемая"));
		ДанныеПечатиИтоги.Вставить("Вычеты", ТаблицаПодоходныйНалог.Итог("Вычеты"));
		ДанныеПечатиИтоги.Вставить("Облагаемая", ТаблицаПодоходныйНалог.Итог("Облагаемая"));
		ДанныеПечатиИтоги.Вставить("ПодоходныйСотрудника", ТаблицаПодоходныйНалог.Итог("ПодоходныйСотрудника"));
		ДанныеПечатиИтоги.Вставить("СМРД", ТаблицаПодоходныйНалог.Итог("СМРД"));
		ДанныеПечатиИтоги.Вставить("ВсегоПодоходный", ТаблицаПодоходныйНалог.Итог("ВсегоПодоходный"));
		ДанныеПечатиИтоги.Вставить("Выплачено", ТаблицаПодоходныйНалог.Итог("Выплачено"));
		ДанныеПечатиИтоги.Вставить("ПодоходныйКОплате", ТаблицаПодоходныйНалог.Итог("ПодоходныйКОплате"));
		
		Для СтрокаМакета = 1 По 4 Цикл
			// заполняем строки отчета
			Если СтрокаМакета = 1  Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ИначеЕсли СтрокаМакета = 2 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка2");			
			ИначеЕсли СтрокаМакета = 3 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
			ИначеЕсли СтрокаМакета = 4 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка4");
			КонецЕсли;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("НомерСтрокиОтчета", СтрокаМакета);
			НайденныеСтроки = ТаблицаПодоходныйНалог.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда 
				НайденнаяСтрока = НайденныеСтроки[0];
				ОбластьМакета.Параметры.Заполнить(НайденнаяСтрока);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		// итоги подвал	
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОтчета");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПриложениеКОтчетуПН
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриложенияКОтчетуПН(МассивОбъектов, ОбъектыПечати)	
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
		"ВЫБРАТЬ
		|	ОтчетыПоПодоходномуНалогу.Ссылка КАК Ссылка,
		|	ОтчетыПоПодоходномуНалогу.Дата КАК Дата,
		|	ОтчетыПоПодоходномуНалогу.Организация КАК Организация,
		|	ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.(
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.Количество, 0) КАК Количество,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаНачислено, 0) КАК Начислено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаНеоблагаемая, 0) КАК Необлагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.Вычеты, 0) КАК Вычеты,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаНачислено, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаНеоблагаемая, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.Вычеты, 0) КАК Облагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаПНсМРД, 0) КАК СМРД,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СальдоК, 0) КАК ПодоходныйКОплате,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаПН, 0) КАК ВсегоПодоходный,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.СуммаВыплачено, 0) КАК Выплачено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогПервыйМесяцКвартала.НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
		|	) КАК ПодоходныйНалогПервыйМесяцКвартала,
		|	ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.(
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.Количество, 0) КАК Количество,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаНачислено, 0) КАК Начислено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаНеоблагаемая, 0) КАК Необлагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.Вычеты, 0) КАК Вычеты,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаНачислено, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаНеоблагаемая, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.Вычеты, 0) КАК Облагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаПНсМРД, 0) КАК СМРД,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СальдоК, 0) КАК ПодоходныйКОплате,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаПН, 0) КАК ВсегоПодоходный,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.СуммаВыплачено, 0) КАК Выплачено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогВторойМесяцКвартала.НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
		|	) КАК ПодоходныйНалогВторойМесяцКвартала,
		|	ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.(
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.Количество, 0) КАК Количество,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаНачислено, 0) КАК Начислено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаНеоблагаемая, 0) КАК Необлагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.Вычеты, 0) КАК Вычеты,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаНачислено, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаНеоблагаемая, 0) - ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.Вычеты, 0) КАК Облагаемая,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаПНсСотрудника, 0) КАК ПодоходныйСотрудника,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаПНсМРД, 0) КАК СМРД,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СальдоК, 0) КАК ПодоходныйКОплате,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаПН, 0) КАК ВсегоПодоходный,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.СуммаВыплачено, 0) КАК Выплачено,
		|		ЕСТЬNULL(ОтчетыПоПодоходномуНалогу.ПодоходныйНалогТретийМесяцКвартала.НомерСтрокиОтчета, 0) КАК НомерСтрокиОтчета
		|	) КАК ПодоходныйНалогТретийМесяцКвартала
		|ИЗ
		|	Документ.ОтчетыПоПодоходномуНалогу КАК ОтчетыПоПодоходномуНалогу
		|ГДЕ
		|	ОтчетыПоПодоходномуНалогу.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоПодоходномуНалогу_ПриложениеКОтчетуПН";
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоПодоходномуНалогу.ПФ_MXL_ПриложениеКОтчетуПН");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Организация = Шапка.Организация;
		Дата = Шапка.Дата;
				
		ОбластьМакета 			  	   = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДанныеНалогоплательщика");
		
		ИНН = Организация.ИНН;
		ОбластьМакета.Параметры.ИНН1 	= Сред(ИНН,1,1);
		ОбластьМакета.Параметры.ИНН2 	= Сред(ИНН,2,1);
		ОбластьМакета.Параметры.ИНН3 	= Сред(ИНН,3,1);
		ОбластьМакета.Параметры.ИНН4 	= Сред(ИНН,4,1);
		ОбластьМакета.Параметры.ИНН5 	= Сред(ИНН,5,1);
		ОбластьМакета.Параметры.ИНН6 	= Сред(ИНН,6,1);
		ОбластьМакета.Параметры.ИНН7 	= Сред(ИНН,7,1);
		ОбластьМакета.Параметры.ИНН8 	= Сред(ИНН,8,1);
		ОбластьМакета.Параметры.ИНН9 	= Сред(ИНН,9,1);
		ОбластьМакета.Параметры.ИНН10	= Сред(ИНН,10,1);
		ОбластьМакета.Параметры.ИНН11 	= Сред(ИНН,11,1);
		ОбластьМакета.Параметры.ИНН12 	= Сред(ИНН,12,1);
		ОбластьМакета.Параметры.ИНН13 	= Сред(ИНН,13,1);
		ОбластьМакета.Параметры.ИНН14 	= Сред(ИНН,14,1);
		
		ОбластьМакета.Параметры.Организация = Организация.НаименованиеПолное;
		
		ОКПО = Организация.КодПоОКПО;
		ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
		ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
		ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
		ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
		ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
		ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
		ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
		ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);

		ГНС = Организация.ГНС.Код;
		ОбластьМакета.Параметры.ГНИ1 = Сред(ГНС,1,1);
		ОбластьМакета.Параметры.ГНИ2 = Сред(ГНС,2,1);
		ОбластьМакета.Параметры.ГНИ3 = Сред(ГНС,3,1);
		ОбластьМакета.Параметры.Налоговая = Организация.ГНС;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьТаблицаПН = Макет.ПолучитьОбласть("ТаблицаПН");			
		
		// Вывод по месяцам квартала
		Для Сч = 1 По 3 Цикл   
			
			ДанныеПечатиИтоги = Новый Структура; 
			ДанныеПечатиИтоги.Вставить("Количество",0);
			ДанныеПечатиИтоги.Вставить("Начислено",0);
			ДанныеПечатиИтоги.Вставить("Необлагаемая",0);
			ДанныеПечатиИтоги.Вставить("Вычеты",0);
			ДанныеПечатиИтоги.Вставить("Облагаемая",0);
			ДанныеПечатиИтоги.Вставить("ПодоходныйСотрудника",0);
			ДанныеПечатиИтоги.Вставить("СМРД",0);
			ДанныеПечатиИтоги.Вставить("ВсегоПодоходный",0);
			ДанныеПечатиИтоги.Вставить("Выплачено",0);
			ДанныеПечатиИтоги.Вставить("ПодоходныйКОплате",0);
			
			// Определим даты с 1го месяца квартала
			Если  Сч = 1 Тогда 
				НачалоПериода = НачалоКвартала(Дата);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогПервыйМесяцКвартала.Выбрать();
			ИначеЕсли Сч = 2 Тогда 
				НачалоПериода = ДобавитьМесяц(НачалоКвартала(Дата),1);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогВторойМесяцКвартала.Выбрать();
			ИначеЕсли Сч = 3 Тогда  
				НачалоПериода = ДобавитьМесяц(НачалоКвартала(Дата),2);
				ВыборкаТабличнойЧасти = Шапка.ПодоходныйНалогТретийМесяцКвартала.Выбрать();
			КонецЕсли;
			
			ОбластьТаблицаПН.Параметры.Месяц = "" + Формат(НачалоПериода,"ДФ=MMMM") +" "+ Год(НачалоПериода);
			ТабличныйДокумент.Вывести(ОбластьТаблицаПН);		
									
			Для СтрокаМакета = 1 По 4 Цикл
				
				ЗаполнитьСтроку = Ложь;
				ВыборкаТабличнойЧасти.Сбросить();
				Пока ВыборкаТабличнойЧасти.НайтиСледующий(Новый Структура("НомерСтрокиОтчета", СтрокаМакета)) Цикл
					ЗаполнитьСтроку = Истина;	
				КонецЦикла;
					
				// заполняем строки отчета
				Если СтрокаМакета = 1  Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("Строка" + Сч + "_1");
				ИначеЕсли СтрокаМакета = 2 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка" + Сч + "_2");
				ИначеЕсли СтрокаМакета = 3 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка" + Сч + "_3");
				ИначеЕсли СтрокаМакета = 4 Тогда 
					ОбластьМакета = Макет.ПолучитьОбласть("Строка" + Сч + "_4");
				КонецЕсли;
				
				Если ЗаполнитьСтроку Тогда
					ОбластьМакета.Параметры.Заполнить(ВыборкаТабличнойЧасти);
					
					// собираем итоговые суммы
					ДанныеПечатиИтоги.Количество 	 	 	 = ДанныеПечатиИтоги.Количество   			+ ВыборкаТабличнойЧасти.Количество;
					ДанныеПечатиИтоги.Начислено 		 	 = ДанныеПечатиИтоги.Начислено 	 	   	 	+ ВыборкаТабличнойЧасти.Начислено;
					ДанныеПечатиИтоги.Необлагаемая 	 		 = ДанныеПечатиИтоги.Необлагаемая 			+ ВыборкаТабличнойЧасти.Необлагаемая;
					ДанныеПечатиИтоги.Вычеты			 	 = ДанныеПечатиИтоги.Вычеты 		 	    + ВыборкаТабличнойЧасти.Вычеты;
					ДанныеПечатиИтоги.Облагаемая      		 = ДанныеПечатиИтоги.Облагаемая   			+ ВыборкаТабличнойЧасти.Облагаемая;
					ДанныеПечатиИтоги.ПодоходныйСотрудника	 = ДанныеПечатиИтоги.ПодоходныйСотрудника 	+ ВыборкаТабличнойЧасти.ПодоходныйСотрудника;
					ДанныеПечатиИтоги.СМРД					 = ДанныеПечатиИтоги.СМРД  			    	+ ВыборкаТабличнойЧасти.СМРД;
					ДанныеПечатиИтоги.ВсегоПодоходный     	 = ДанныеПечатиИтоги.ВсегоПодоходный 	    + ВыборкаТабличнойЧасти.ПодоходныйКОплате;
					ДанныеПечатиИтоги.Выплачено           	 = ДанныеПечатиИтоги.Выплачено           	+ ВыборкаТабличнойЧасти.Выплачено;
					ДанныеПечатиИтоги.ПодоходныйКОплате   	 = ДанныеПечатиИтоги.ПодоходныйКОплате		+ ВыборкаТабличнойЧасти.ПодоходныйКОплате;
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;

			// итоги подвал	
			ОбластьМакета = Макет.ПолучитьОбласть("Итого" + Сч);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоги);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;

		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОтчета");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПодоходныйНалог") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПодоходныйНалог", НСтр("ru = 'Печать отчета по подоходному налогу'"), ПечатьПоПН(МассивОбъектов, ОбъектыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриложениеКОтчетуПН") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПриложениеКОтчетуПН", НСтр("ru = 'Печать приложения к отчету по подоходному налогу'"), ПечатьПриложенияКОтчетуПН(МассивОбъектов, ОбъектыПечати),,
		"Документ.ОтчетыПоПодоходномуНалогу.ПФ_MXL_ПриложениеКОтчетуПН");
		
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПодоходныйНалог";
	КомандаПечати.Представление = НСтр("ru = 'Печать отчета по подоходному налогу'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриложениеКОтчетуПН";
	КомандаПечати.Представление = НСтр("ru = 'Печать приложения к отчету по подоходному налогу'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидСубъекта", 1);

КонецПроцедуры

#КонецОбласти

#КонецЕсли