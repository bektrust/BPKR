#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(ДатаДокумента, Объект.Организация);

	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
	
	ЗаполнитьДеревоПодоходныйНалог();	

	// РаботаСФормами
	РаботаСФормамиСервер.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
		
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	
	// РаботаСФормами
	РаботаСФормамиСервер.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписи.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Дата.
// В процедуре определяется ситуация, когда при изменении своей даты документ 
// оказывается в другом периоде нумерации документов, и в этом случае
// присваивает документу новый уникальный номер.
// Переопределяет соответствующий параметр формы.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
	
	БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(ДатаДокумента, Объект.Организация);
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(ДатаДокумента, Объект.Организация);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("УстановитьПиктограммуКомментария", 0.1, Истина);
КонецПроцедуры

// Процедура - обработчик события НачалоВыбора поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ВидСубъектаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.ПодоходныйНалог.Количество() > 0 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросЗаполнить", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличные части документа будут очищены. Продолжить выполнение операции?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ЗаполнитьПодоходныйНалогНаСервере();
		Если Объект.ВидСубъекта = 1
			И КонецМесяца(Объект.Дата) = КонецКвартала(Объект.Дата) Тогда 
			ЗаполнитьПодоходныйНалогПриложениеНаСервере();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВЭлектроннойФорме(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
		Или Модифицированность Тогда 
		ТекстСообщения = НСтр("ru='Для формирования отчета по подоходному налогу в электронной форме необходимо записать документ.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		ТекстВопроса = НСтр("ru='Для формирования отчета по подоходному налогу в электронной форме
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодключенииИнтернетПоддержки", ЭтотОбъект, Новый Структура("НаправлениеВыгрузки", "СохранитьВЭлектроннойФорме"));
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Подключиться'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
	Иначе
		ПродолжитьСохранение("СохранитьВЭлектроннойФорме");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросЗаполнить(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ПодоходныйНалог.Очистить();
		Объект.ПодоходныйНалогПервыйМесяцКвартала.Очистить();
		Объект.ПодоходныйНалогВторойМесяцКвартала.Очистить();
		Объект.ПодоходныйНалогТретийМесяцКвартала.Очистить();
		
		ДеревоПодоходныйНалог.ПолучитьЭлементы().Очистить();
		
		ЗаполнитьПодоходныйНалогНаСервере();
		Если Объект.ВидСубъекта = 1
			И КонецМесяца(Объект.Дата) = КонецКвартала(Объект.Дата) Тогда 
			ЗаполнитьПодоходныйНалогПриложениеНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьПроводник(ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ДополнительныеПараметры.ПолноеИмяФайла) Тогда 
		ФайловаяСистемаКлиент.ОткрытьПроводник(ДополнительныеПараметры.ПолноеИмяФайла);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	 
	Элементы.СтраницаПодоходныйНалогПриложение.Видимость = Объект.ВидСубъекта = 1;
	
КонецПроцедуры 

// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
&НаСервере
Функция ПолучитьДанныеДатаПриИзменении(ДатаПередИзменением)
	РазностьДат = БухгалтерскийУчетСервер.ПроверитьНомерДокумента(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("РазностьДат",	РазностьДат);
	
	Возврат СтруктураДанные;
КонецФункции // ПолучитьДанныеДатаПриИзменении()

// Процедура - Установить пиктограмму комментария.
//
&НаКлиенте
Процедура УстановитьПиктограммуКомментария()
	БухгалтерскийУчетКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаДополнительно, Объект.Комментарий);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодоходныйНалогНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьПодоходныйНалог(ДанныеУчетнойПолитики);
	ЗначениеВРеквизитФормы(Документ, "Объект");
	ЗаполнитьДеревоПодоходныйНалог();	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодоходныйНалогПриложениеНаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьПодоходныйНалогПриложение(ДанныеУчетнойПолитики);
	ЗначениеВРеквизитФормы(Документ, "Объект");
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПодоходныйНалог()
	
	// Заполнение тогов по Номерам строк.
	ТаблицаПодоходныйНалог = Объект.ПодоходныйНалог.Выгрузить();
	ТаблицаПодоходныйНалог.Свернуть("НомерСтрокиОтчета", "Количество, СуммаНачислено, СуммаНеоблагаемая, Вычеты, СуммаОблагаемая, СуммаПНсСотрудника, СуммаПНсМРД, СуммаПН, СуммаВыплачено, СальдоК");
	
	Для Каждого СтрокаТаблицы Из ТаблицаПодоходныйНалог Цикл 
		СтрокаДереваИтог = ДеревоПодоходныйНалог.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДереваИтог, СтрокаТаблицы); 
		// Для группы в поле ФизЛицо выводится описание строки.
		СтрокаДереваИтог.ФизЛицо = НаименованиеПоНомеруСтроки(СтрокаДереваИтог.НомерСтрокиОтчета);
		СтрокаДереваИтог.ЭтоГруппа = Истина;
		
		// Заполнение по Сотрудникам.
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НомерСтрокиОтчета", СтрокаТаблицы.НомерСтрокиОтчета);
		НайденныеСтроки = Объект.ПодоходныйНалог.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			СтрокаДереваСотрудник = СтрокаДереваИтог.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДереваСотрудник, НайденнаяСтрока); 
			СтрокаДереваСотрудник.ЭтоГруппа = Ложь;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДеревоПодоходныйНалог()

&НаСервере
Функция НаименованиеПоНомеруСтроки(НомерСтроки) Экспорт 

	Наименование = "";

	Если НомерСтроки = "1" Тогда 
		Наименование = НСтр("ru = 'ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ НЕ МЕНЕЕ 15 ДНЕЙ В ТЕЧЕНИЕ МЕСЯЦА'");
	ИначеЕсли НомерСтроки = "2" Тогда	
		Наименование = НСтр("ru = 'ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ МЕНЕЕ 15 ДНЕЙ В ТЕЧЕНИЕ МЕСЯЦА'");
	ИначеЕсли НомерСтроки = "3" Тогда	
		Наименование = НСтр("ru = 'ФИЗИЧЕСКИЕ ЛИЦА - НЕРЕЗИДЕНТЫ, НЕ ЯВЛЯЮЩИЕСЯ ГРАЖДАНАМИ КЫРГЫЗСКОЙ РЕСПУБЛИКИ'");
	ИначеЕсли НомерСтроки = "4" Тогда	
		Наименование = НСтр("ru = 'ПРОЧИЕ'");
	КонецЕсли;	
	
	Возврат Наименование;
	
КонецФункции // НаименованиеПоНомеруСтроки()

&НаСервере
Функция ТребуетсяНастройкаАвторизацияИнтернетПоддержки()
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
		Возврат Не МодульИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПриПодключенииИнтернетПоддержки(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект, ДополнительныеПараметры);
		МодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтернетПоддержкаПользователейКлиент");
		МодульИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	Если Не (ТипЗнч(Результат) = Тип("Структура")
		И ЗначениеЗаполнено(Результат.Логин)) Тогда
		Возврат;
	КонецЕсли;
	
	ПродолжитьСохранение("СохранитьВЭлектроннойФорме");	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеЗаявленияВЭлектронномФормате

&НаКлиенте
Процедура ПродолжитьСохранение(НаправлениеВыгрузки)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Укажите путь для сохранения файла'");
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ВидДиалога", НаправлениеВыгрузки);
	
	Оповещение = Новый ОписаниеОповещения("ДиалогОткрытияФайлаЗавершение", ЭтотОбъект, СтруктураПараметров);
	ДиалогОткрытияФайла.Показать(Оповещение);

КонецПроцедуры // ПродолжитьСохранение()

&НаКлиенте
Процедура ДиалогОткрытияФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		Попытка
			Ошибки = Неопределено;
			
			СтруктураДанных = ФормированиеФайлаXML(ДополнительныеПараметры, Ошибки);
			
			Если СтруктураДанных = Неопределено Тогда
				Возврат;	
			КонецЕсли;	
			
		Исключение
			ТекстСообщения = НСтр("ru='Не удалось завершить формирование файла.
				|Техническая информация об ошибке: %1'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));	
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
		Если НЕ Ошибки = Неопределено Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);	
			Возврат;
		КонецЕсли;		
		
		// Формирование имени файла.
		КаталогФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ВыбранныеФайлы[0]);
		ИмяФайла = СтруктураДанных.ИмяФайла;
		ПолноеИмяФайла = КаталогФайла + ИмяФайла;
		
		// Сохранение файла.
		Двоичное = ПолучитьИзВременногоХранилища(СтруктураДанных.АдресВременногоХранилища);
		Двоичное.Записать(ПолноеИмяФайла);	
		
		ТекстОповещения = НСтр("ru = 'Файл успешно сформирован'");
		ТекстПояснения = ИмяФайла;
		ПоказатьОповещениеПользователя(
			ТекстОповещения, 
			Новый ОписаниеОповещения("ОткрытьПроводник", ЭтотОбъект, Новый Структура("ПолноеИмяФайла", ПолноеИмяФайла)), 
			ТекстПояснения, 
			БиблиотекаКартинок.Информация32);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция СоздатьОбъектXDTO(ТипОбъекта)
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.sample-package2.org", ТипОбъекта));
	
КонецФункции // СоздатьОбъектXDTO()

// Процедура создания XML файла
//
&НаСервере
Функция ФормированиеФайлаXML(ДополнительныеПараметры, Ошибки)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ИмяФайла", "");
	СтруктураДанных.Вставить("АдресВременногоХранилища", "");
			
	Дата = Формат(Объект.Дата, "ДФ=yyyy-MM-dd");

	Если Объект.ВидСубъекта = 0 Тогда
		IDFORM = "132";
	ИначеЕсли Объект.ВидСубъекта = 1 Тогда
		IDFORM = "133";
	Иначе
		IDFORM = "134";
	КонецЕсли;	
	
	ШаблонИмениФайла = СтрШаблон(НСтр("ru = 'Form%1_%2.'"), IDFORM, Дата);
	ИмяФайла = ШаблонИмениФайла + ".xml";
	
	// Массив для описания ошибок и если ошибки есть то отмена создания XML файла.
	МассивОшибок = Новый Массив();
	
	// FORM
	ОбъектXDTO = СоздатьОбъектXDTO("FORM");

	ОбъектXDTO.IDFORM = IDFORM;
	ОбъектXDTO.NOMDOC = "1";
	ОбъектXDTO.VERSFORM = "1.01";
	ОбъектXDTO.DATEREPORT = Формат(ТекущаяДатаСеанса(), "ДЛФ=D");
	
	// PART1 - НАЧАЛО
	ОбъектXDTOPART1 = СоздатьОбъектXDTO("PART1");
	
	Если Объект.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Первоначальный Тогда 
		FTYPE = 0;
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Уточненный Тогда 
		FTYPE = 1;
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Ликвидационный Тогда 
		FTYPE = 3;
	Иначе
		FTYPE = 0;
		МассивОшибок.Добавить(НСтр("ru = 'Не указан вид отчета.'"));
	КонецЕсли;
	
	ОбъектXDTOFTYPE = СоздатьОбъектXDTO("FTYPE");
	ОбъектXDTOFTYPE.Text = FTYPE;
	
	Если Объект.ВидСубъекта = 0
		Или Объект.ВидСубъекта = 2 Тогда
		STARTDATE 	= Формат(НачалоКвартала(Объект.Дата), "ДЛФ=D");
		ENDDATE 	= Формат(КонецКвартала(Объект.Дата), "ДЛФ=D");
	Иначе
		STARTDATE 	= Формат(НачалоМесяца(Объект.Дата), "ДЛФ=D");
		ENDDATE 	= Формат(КонецМесяца(Объект.Дата), "ДЛФ=D");
	КонецЕсли;	
	
	ОбъектXDTOSTARTDATE = СоздатьОбъектXDTO("STARTDATE");
	ОбъектXDTOSTARTDATE.Text = STARTDATE;
	
	ОбъектXDTOENDDATE = СоздатьОбъектXDTO("ENDDATE");
	ОбъектXDTOENDDATE.Text = ENDDATE;
	
	ОбъектXDTOPART1.FTYPE.Добавить(ОбъектXDTOFTYPE);
	ОбъектXDTOPART1.STARTDATE.Добавить(ОбъектXDTOSTARTDATE);
	ОбъектXDTOPART1.ENDDATE.Добавить(ОбъектXDTOENDDATE);
	
	ОбъектXDTO.PART1.Добавить(ОбъектXDTOPART1);
	// PART1 - КОНЕЦ 
	
	// PART2 - НАЧАЛО
	ОбъектXDTOPART2 = СоздатьОбъектXDTO("PART2");
	
	Если Объект.ВидСубъекта = 0 Тогда
		ОбъектXDTOENTERPRETYPE = СоздатьОбъектXDTO("ENTERPRETYPE");
		ОбъектXDTOENTERPRETYPE.Text = "1";
		ОбъектXDTOPART2.ENTERPRETYPE.Добавить(ОбъектXDTOENTERPRETYPE);
	КонецЕсли;	
	
	ТаблицаПодоходныйНалог = Объект.ПодоходныйНалог.Выгрузить();
		
	ТаблицаПодоходныйНалог.Свернуть("НомерСтрокиОтчета",
		"Количество,СуммаНачислено,СуммаНеоблагаемая,Вычеты,СуммаПНсСотрудника,СуммаПНсМРД,СальдоК,СуммаПН,СуммаВыплачено");
	
	// MORE15 - ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ НЕ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалог.Найти(1, "НомерСтрокиОтчета");
	
	ОбъектXDTOMORE15ACCOUNT = СоздатьОбъектXDTO("MORE15ACCOUNT");
	ОбъектXDTOMORE15ACCOUNT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOMORE15ACCRUEDINCOME = СоздатьОбъектXDTO("MORE15ACCRUEDINCOME");
	ОбъектXDTOMORE15ACCRUEDINCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOMORE15EXEMPT = СоздатьОбъектXDTO("MORE15EXEMPT");
	ОбъектXDTOMORE15EXEMPT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOMORE15DEDUCTION = СоздатьОбъектXDTO("MORE15DEDUCTION");
	ОбъектXDTOMORE15DEDUCTION.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOMORE15TAXSUBJECT = СоздатьОбъектXDTO("MORE15TAXSUBJECT");
	ОбъектXDTOMORE15TAXSUBJECT.Text = ?(СтрокаТаблицы = Неопределено, 0, 
						СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOMORE15TAXCCRUEDEMPLOYEE = СоздатьОбъектXDTO("MORE15TAXCCRUEDEMPLOYEE");
	ОбъектXDTOMORE15TAXCCRUEDEMPLOYEE.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOMORE15TAXCCRUEDMININCOME = СоздатьОбъектXDTO("MORE15TAXCCRUEDMININCOME");
	ОбъектXDTOMORE15TAXCCRUEDMININCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOMORE15ACCRUEDTAX = СоздатьОбъектXDTO("MORE15ACCRUEDTAX");
	ОбъектXDTOMORE15ACCRUEDTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOMORE15PAIDINCOME = СоздатьОбъектXDTO("MORE15PAIDINCOME");
	ОбъектXDTOMORE15PAIDINCOME.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
										?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOMORE15TAX = СоздатьОбъектXDTO("MORE15TAX");
	ОбъектXDTOMORE15TAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOPART2.MORE15ACCOUNT.Добавить(ОбъектXDTOMORE15ACCOUNT);
	ОбъектXDTOPART2.MORE15ACCRUEDINCOME.Добавить(ОбъектXDTOMORE15ACCRUEDINCOME);
	ОбъектXDTOPART2.MORE15EXEMPT.Добавить(ОбъектXDTOMORE15EXEMPT);
	ОбъектXDTOPART2.MORE15DEDUCTION.Добавить(ОбъектXDTOMORE15DEDUCTION);
	ОбъектXDTOPART2.MORE15TAXSUBJECT.Добавить(ОбъектXDTOMORE15TAXSUBJECT);
	ОбъектXDTOPART2.MORE15TAXCCRUEDEMPLOYEE.Добавить(ОбъектXDTOMORE15TAXCCRUEDEMPLOYEE);
	ОбъектXDTOPART2.MORE15TAXCCRUEDMININCOME.Добавить(ОбъектXDTOMORE15TAXCCRUEDMININCOME);
	ОбъектXDTOPART2.MORE15ACCRUEDTAX.Добавить(ОбъектXDTOMORE15ACCRUEDTAX);
	ОбъектXDTOPART2.MORE15PAIDINCOME.Добавить(ОбъектXDTOMORE15PAIDINCOME);
	ОбъектXDTOPART2.MORE15TAX.Добавить(ОбъектXDTOMORE15TAX);
	// КОНЕЦ MORE15
	
	// LESS15 - ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалог.Найти(2, "НомерСтрокиОтчета");
	
	ОбъектXDTOLESS15ACCOUNT = СоздатьОбъектXDTO("LESS15ACCOUNT");
	ОбъектXDTOLESS15ACCOUNT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOLESS15ACCRUEDINCOME = СоздатьОбъектXDTO("LESS15ACCRUEDINCOME");
	ОбъектXDTOLESS15ACCRUEDINCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOLESS15EXEMPT = СоздатьОбъектXDTO("LESS15EXEMPT");
	ОбъектXDTOLESS15EXEMPT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOLESS15DEDUCTION = СоздатьОбъектXDTO("LESS15DEDUCTION");
	ОбъектXDTOLESS15DEDUCTION.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOLESS15TAXSUBJECT = СоздатьОбъектXDTO("LESS15TAXSUBJECT");
	ОбъектXDTOLESS15TAXSUBJECT.Text = ?(СтрокаТаблицы = Неопределено, 0, 
						СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOLESS15TAXCCRUEDEMPLOYEE = СоздатьОбъектXDTO("LESS15TAXCCRUEDEMPLOYEE");
	ОбъектXDTOLESS15TAXCCRUEDEMPLOYEE.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOLESS15TAXCCRUEDMININCOME = СоздатьОбъектXDTO("LESS15TAXCCRUEDMININCOME");
	ОбъектXDTOLESS15TAXCCRUEDMININCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOLESS15ACCRUEDTAX = СоздатьОбъектXDTO("LESS15ACCRUEDTAX");
	ОбъектXDTOLESS15ACCRUEDTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOLESS15PAIDINCOME = СоздатьОбъектXDTO("LESS15PAIDINCOME");
	ОбъектXDTOLESS15PAIDINCOME.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
										?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOLESS15TAX = СоздатьОбъектXDTO("LESS15TAX");
	ОбъектXDTOLESS15TAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOPART2.LESS15ACCOUNT.Добавить(ОбъектXDTOLESS15ACCOUNT);
	ОбъектXDTOPART2.LESS15ACCRUEDINCOME.Добавить(ОбъектXDTOLESS15ACCRUEDINCOME);
	ОбъектXDTOPART2.LESS15EXEMPT.Добавить(ОбъектXDTOLESS15EXEMPT);
	ОбъектXDTOPART2.LESS15DEDUCTION.Добавить(ОбъектXDTOLESS15DEDUCTION);
	ОбъектXDTOPART2.LESS15TAXSUBJECT.Добавить(ОбъектXDTOLESS15TAXSUBJECT);
	ОбъектXDTOPART2.LESS15TAXCCRUEDEMPLOYEE.Добавить(ОбъектXDTOLESS15TAXCCRUEDEMPLOYEE);
	ОбъектXDTOPART2.LESS15TAXCCRUEDMININCOME.Добавить(ОбъектXDTOLESS15TAXCCRUEDMININCOME);
	ОбъектXDTOPART2.LESS15ACCRUEDTAX.Добавить(ОбъектXDTOLESS15ACCRUEDTAX);
	ОбъектXDTOPART2.LESS15PAIDINCOME.Добавить(ОбъектXDTOLESS15PAIDINCOME);
	ОбъектXDTOPART2.LESS15TAX.Добавить(ОбъектXDTOLESS15TAX);
	// КОНЕЦ LESS15
	
	// NONRESIDENT - ФИЗИЧЕСКИЕ ЛИЦА - НЕРЕЗИДЕНТЫ, НЕ ЯВЛЯЮЩИЕСЯ ГРАЖДАНАМИ КЫРГЫЗСКОЙ РЕСПУБЛИКИ
	СтрокаТаблицы = ТаблицаПодоходныйНалог.Найти(3, "НомерСтрокиОтчета");
	
	ОбъектXDTONONRESIDENTACCOUNT = СоздатьОбъектXDTO("NONRESIDENTACCOUNT");
	ОбъектXDTONONRESIDENTACCOUNT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTONONRESIDENTACCRUEDINCOME = СоздатьОбъектXDTO("NONRESIDENTACCRUEDINCOME");
	ОбъектXDTONONRESIDENTACCRUEDINCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTONONRESIDENTEXEMPT = СоздатьОбъектXDTO("NONRESIDENTEXEMPT");
	ОбъектXDTONONRESIDENTEXEMPT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTONONRESIDENTDEDUCTION = СоздатьОбъектXDTO("NONRESIDENTDEDUCTION");
	ОбъектXDTONONRESIDENTDEDUCTION.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTONONRESIDENTTAXSUBJECT = СоздатьОбъектXDTO("NONRESIDENTTAXSUBJECT");
	ОбъектXDTONONRESIDENTTAXSUBJECT.Text = ?(СтрокаТаблицы = Неопределено, 0,
						СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTONONRESIDENTTAXCCRUEDEMPLOYEE = СоздатьОбъектXDTO("NONRESIDENTTAXCCRUEDEMPLOYEE");
	ОбъектXDTONONRESIDENTTAXCCRUEDEMPLOYEE.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTONONRESIDENTTAXCCRUEDMININCOME = СоздатьОбъектXDTO("NONRESIDENTTAXCCRUEDMININCOME");
	ОбъектXDTONONRESIDENTTAXCCRUEDMININCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTONONRESIDENTACCRUEDTAX = СоздатьОбъектXDTO("NONRESIDENTACCRUEDTAX");
	ОбъектXDTONONRESIDENTACCRUEDTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTONONRESIDENTPAIDINCOME = СоздатьОбъектXDTO("NONRESIDENTPAIDINCOME");
	ОбъектXDTONONRESIDENTPAIDINCOME.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
											?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTONONRESIDENTTAX = СоздатьОбъектXDTO("NONRESIDENTTAX");
	ОбъектXDTONONRESIDENTTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOPART2.NONRESIDENTACCOUNT.Добавить(ОбъектXDTONONRESIDENTACCOUNT);
	ОбъектXDTOPART2.NONRESIDENTACCRUEDINCOME.Добавить(ОбъектXDTONONRESIDENTACCRUEDINCOME);
	ОбъектXDTOPART2.NONRESIDENTEXEMPT.Добавить(ОбъектXDTONONRESIDENTEXEMPT);
	ОбъектXDTOPART2.NONRESIDENTDEDUCTION.Добавить(ОбъектXDTONONRESIDENTDEDUCTION);
	ОбъектXDTOPART2.NONRESIDENTTAXSUBJECT.Добавить(ОбъектXDTONONRESIDENTTAXSUBJECT);
	ОбъектXDTOPART2.NONRESIDENTTAXCCRUEDEMPLOYEE.Добавить(ОбъектXDTONONRESIDENTTAXCCRUEDEMPLOYEE);
	ОбъектXDTOPART2.NONRESIDENTTAXCCRUEDMININCOME.Добавить(ОбъектXDTONONRESIDENTTAXCCRUEDMININCOME);
	ОбъектXDTOPART2.NONRESIDENTACCRUEDTAX.Добавить(ОбъектXDTONONRESIDENTACCRUEDTAX);
	ОбъектXDTOPART2.NONRESIDENTPAIDINCOME.Добавить(ОбъектXDTONONRESIDENTPAIDINCOME);
	ОбъектXDTOPART2.NONRESIDENTTAX.Добавить(ОбъектXDTONONRESIDENTTAX);
	// КОНЕЦ NONRESIDENT
	
	// OTHER - ПРОЧИЕ
	СтрокаТаблицы = ТаблицаПодоходныйНалог.Найти(4, "НомерСтрокиОтчета");
	ОбъектXDTOOTHERACCOUNT = СоздатьОбъектXDTO("OTHERACCOUNT");
	ОбъектXDTOOTHERACCOUNT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOOTHERACCRUEDINCOME = СоздатьОбъектXDTO("OTHERACCRUEDINCOME");
	ОбъектXDTOOTHERACCRUEDINCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOOTHEREXEMPT = СоздатьОбъектXDTO("OTHEREXEMPT");
	ОбъектXDTOOTHEREXEMPT.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOOTHERDEDUCTION = СоздатьОбъектXDTO("OTHERDEDUCTION");
	ОбъектXDTOOTHERDEDUCTION.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOOTHERTAXSUBJECT = СоздатьОбъектXDTO("OTHERTAXSUBJECT");
	ОбъектXDTOOTHERTAXSUBJECT.Text = ?(СтрокаТаблицы = Неопределено, 0, 
						СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOOTHERTAXCCRUEDEMPLOYEE = СоздатьОбъектXDTO("OTHERTAXCCRUEDEMPLOYEE");
	ОбъектXDTOOTHERTAXCCRUEDEMPLOYEE.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOOTHERTAXCCRUEDMININCOME = СоздатьОбъектXDTO("OTHERTAXCCRUEDMININCOME");
	ОбъектXDTOOTHERTAXCCRUEDMININCOME.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOOTHERACCRUEDTAX = СоздатьОбъектXDTO("OTHERACCRUEDTAX");
	ОбъектXDTOOTHERACCRUEDTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOOTHERPAIDINCOME = СоздатьОбъектXDTO("OTHERPAIDINCOME");
	ОбъектXDTOOTHERPAIDINCOME.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
										?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOOTHERTAX = СоздатьОбъектXDTO("OTHERTAX");
	ОбъектXDTOOTHERTAX.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOPART2.OTHERACCOUNT.Добавить(ОбъектXDTOOTHERACCOUNT);
	ОбъектXDTOPART2.OTHERACCRUEDINCOME.Добавить(ОбъектXDTOOTHERACCRUEDINCOME);
	ОбъектXDTOPART2.OTHEREXEMPT.Добавить(ОбъектXDTOOTHEREXEMPT);
	ОбъектXDTOPART2.OTHERDEDUCTION.Добавить(ОбъектXDTOOTHERDEDUCTION);
	ОбъектXDTOPART2.OTHERTAXSUBJECT.Добавить(ОбъектXDTOOTHERTAXSUBJECT);
	ОбъектXDTOPART2.OTHERTAXCCRUEDEMPLOYEE.Добавить(ОбъектXDTOOTHERTAXCCRUEDEMPLOYEE);
	ОбъектXDTOPART2.OTHERTAXCCRUEDMININCOME.Добавить(ОбъектXDTOOTHERTAXCCRUEDMININCOME);
	ОбъектXDTOPART2.OTHERACCRUEDTAX.Добавить(ОбъектXDTOOTHERACCRUEDTAX);
	ОбъектXDTOPART2.OTHERPAIDINCOME.Добавить(ОбъектXDTOOTHERPAIDINCOME);
	ОбъектXDTOPART2.OTHERTAX.Добавить(ОбъектXDTOOTHERTAX);
	// КОНЕЦ OTHER
	
	// TOTAL - ИТОГО                  
	ОбъектXDTOTOTALACCOUNT = СоздатьОбъектXDTO("TOTALACCOUNT");
	ОбъектXDTOTOTALACCOUNT.Text =  Объект.ПодоходныйНалог.Итог("Количество");
	
	ОбъектXDTOTOTALACCRUEDINCOME = СоздатьОбъектXDTO("TOTALACCRUEDINCOME");
	ОбъектXDTOTOTALACCRUEDINCOME.Text = Объект.ПодоходныйНалог.Итог("СуммаНачислено");
	
	ОбъектXDTOTOTALEXEMPT = СоздатьОбъектXDTO("TOTALEXEMPT");
	ОбъектXDTOTOTALEXEMPT.Text = Объект.ПодоходныйНалог.Итог("СуммаНеоблагаемая");
	
	ОбъектXDTOTOTALDEDUCTION = СоздатьОбъектXDTO("TOTALDEDUCTION");
	ОбъектXDTOTOTALDEDUCTION.Text = Объект.ПодоходныйНалог.Итог("Вычеты");
	
	ОбъектXDTOTOTALTAXSUBJECT = СоздатьОбъектXDTO("TOTALTAXSUBJECT");
	ОбъектXDTOTOTALTAXSUBJECT.Text = Объект.ПодоходныйНалог.Итог("СуммаНачислено") 
									- Объект.ПодоходныйНалог.Итог("СуммаНеоблагаемая") 
									- Объект.ПодоходныйНалог.Итог("Вычеты");
	
	ОбъектXDTOTOTALTAXCCRUEDEMPLOYEE = СоздатьОбъектXDTO("TOTALTAXCCRUEDEMPLOYEE");
	ОбъектXDTOTOTALTAXCCRUEDEMPLOYEE.Text = Объект.ПодоходныйНалог.Итог("СуммаПНсСотрудника");
	
	ОбъектXDTOTOTALTAXCCRUEDMININCOME = СоздатьОбъектXDTO("TOTALTAXCCRUEDMININCOME");
	ОбъектXDTOTOTALTAXCCRUEDMININCOME.Text = Объект.ПодоходныйНалог.Итог("СуммаПНсМРД");
	
	ОбъектXDTOTOTALACCRUEDTAX = СоздатьОбъектXDTO("TOTALACCRUEDTAX");
	ОбъектXDTOTOTALACCRUEDTAX.Text = Объект.ПодоходныйНалог.Итог("СальдоК");
	
	ОбъектXDTOTOTALPAIDINCOME = СоздатьОбъектXDTO("TOTALPAIDINCOME");
	ОбъектXDTOTOTALPAIDINCOME.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, Объект.ПодоходныйНалог.Итог("СуммаВыплачено"));
	
	ОбъектXDTOTOTALSUM = СоздатьОбъектXDTO("TOTALSUM");
	ОбъектXDTOTOTALSUM.Text = Объект.ПодоходныйНалог.Итог("СальдоК");
	
	ОбъектXDTOPART2.TOTALACCOUNT.Добавить(ОбъектXDTOTOTALACCOUNT);
	ОбъектXDTOPART2.TOTALACCRUEDINCOME.Добавить(ОбъектXDTOTOTALACCRUEDINCOME);
	ОбъектXDTOPART2.TOTALEXEMPT.Добавить(ОбъектXDTOTOTALEXEMPT);
	ОбъектXDTOPART2.TOTALDEDUCTION.Добавить(ОбъектXDTOTOTALDEDUCTION);
	ОбъектXDTOPART2.TOTALTAXSUBJECT.Добавить(ОбъектXDTOTOTALTAXSUBJECT);
	ОбъектXDTOPART2.TOTALTAXCCRUEDEMPLOYEE.Добавить(ОбъектXDTOTOTALTAXCCRUEDEMPLOYEE);
	ОбъектXDTOPART2.TOTALTAXCCRUEDMININCOME.Добавить(ОбъектXDTOTOTALTAXCCRUEDMININCOME);
	ОбъектXDTOPART2.TOTALACCRUEDTAX.Добавить(ОбъектXDTOTOTALACCRUEDTAX);
	ОбъектXDTOPART2.TOTALPAIDINCOME.Добавить(ОбъектXDTOTOTALPAIDINCOME);
	ОбъектXDTOPART2.TOTALSUM.Добавить(ОбъектXDTOTOTALSUM);
	// КОНЕЦ TOTAL
	
	Если Объект.ВидСубъекта = 1 Тогда
		ОбъектXDTOSTI133X199 = СоздатьОбъектXDTO("STI133X199");
		ОбъектXDTOSTI133X199.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СальдоК");
		ОбъектXDTOPART2.STI133X199.Добавить(ОбъектXDTOSTI133X199);
		
		ОбъектXDTOSTI133X249 = СоздатьОбъектXDTO("STI133X249");
		ОбъектXDTOSTI133X249.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СальдоК");
		ОбъектXDTOPART2.STI133X249.Добавить(ОбъектXDTOSTI133X249);
		
		ОбъектXDTOSTI133X299 = СоздатьОбъектXDTO("STI133X299");
		ОбъектXDTOSTI133X299.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СальдоК");
		ОбъектXDTOPART2.STI133X299.Добавить(ОбъектXDTOSTI133X299);
	
		// Приложение
		ОбъектXDTOPART2.STI133DECLARATIONDETAIL1.Добавить(STI133DECLARATIONDETAIL1());
	КонецЕсли;	
		
	ОбъектXDTO.PART2.Добавить(ОбъектXDTOPART2);
	// PART2 - КОНЕЦ
	
	// Если есть ошибки файл не создается.
	Если МассивОшибок.Количество() > 0 Тогда
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Файл XML не сформирован по следующим причинам:'"));
		
		Для Каждого СтрокаМассива Из МассивОшибок Цикл
			ОбщегоНазначения.СообщитьПользователю(СтрокаМассива);			
		КонецЦикла;	
		
		Возврат Неопределено;
		
	Иначе
		// Создание файла.
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
		ЗаписьXML = Новый ЗаписьXML;
		ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Ложь);	
		ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла, ПараметрыЗаписиXML);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO);
		ЗаписьXML.Закрыть();
		
		// Удаление лишнего текста из xml файла
		ТекстДокумент = Новый ТекстовыйДокумент;
		ТекстДокумент.Прочитать(ИмяВременногоФайла);
		ТекстФайла = ТекстДокумент.ПолучитьТекст();
		ТекстФайла = СтрЗаменить(
			ТекстФайла,
			" xmlns=""http://www.sample-package2.org"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""",
			"");
		ТекстДокумент.УстановитьТекст(ТекстФайла);	
		ТекстДокумент.Записать(ИмяВременногоФайла);	
		
		Двоичное = Новый ДвоичныеДанные(ИмяВременногоФайла);
		АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Двоичное, УникальныйИдентификатор);
		
		// Удаление временного файла
		ФайловаяСистема.УдалитьВременныйФайл(ИмяВременногоФайла);
		
		СтруктураДанных.ИмяФайла = ИмяФайла;
		СтруктураДанных.АдресВременногоХранилища = АдресВременногоХранилища;
		
		Возврат СтруктураДанных;
	КонецЕсли;
КонецФункции // ФормированиеФайла()

// Процедура формирования 1 приложения файла XML
//
&НаСервере
Функция STI133DECLARATIONDETAIL1()
	// Создание объекта.
	ОбъектXDTO = СоздатьОбъектXDTO("STI133DECLARATIONDETAIL1");
	
	ЗаполнитьПервыйМесяцФайлаXML(ОбъектXDTO);
	ЗаполнитьВторойМесяцФайлаXML(ОбъектXDTO);
	ЗаполнитьТретийМесяцФайлаXML(ОбъектXDTO);
	
	Возврат ОбъектXDTO;
КонецФункции

Процедура ЗаполнитьПервыйМесяцФайлаXML(ОбъектXDTO)

	ТаблицаПодоходныйНалогПервыйМесяцКвартала = Объект.ПодоходныйНалогПервыйМесяцКвартала.Выгрузить();
		
	ТаблицаПодоходныйНалогПервыйМесяцКвартала.Свернуть("НомерСтрокиОтчета",
		"Количество,СуммаНачислено,СуммаНеоблагаемая,Вычеты,СуммаПНсСотрудника,СуммаПНсМРД,СальдоК,СуммаПН,СуммаВыплачено");
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ НЕ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогПервыйМесяцКвартала.Найти(1, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X150 = СоздатьОбъектXDTO("STI133X150");
	ОбъектXDTOSTI133X150.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X151 = СоздатьОбъектXDTO("STI133X151");
	ОбъектXDTOSTI133X151.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X152 = СоздатьОбъектXDTO("STI133X152");
	ОбъектXDTOSTI133X152.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X153 = СоздатьОбъектXDTO("STI133X153");
	ОбъектXDTOSTI133X153.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X154 = СоздатьОбъектXDTO("STI133X154");
	ОбъектXDTOSTI133X154.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X155 = СоздатьОбъектXDTO("STI133X155");
	ОбъектXDTOSTI133X155.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X156 = СоздатьОбъектXDTO("STI133X156");
	ОбъектXDTOSTI133X156.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X157 = СоздатьОбъектXDTO("STI133X157");
	ОбъектXDTOSTI133X157.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X158 = СоздатьОбъектXDTO("STI133X158");
	ОбъектXDTOSTI133X158.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X159 = СоздатьОбъектXDTO("STI133X159");
	ОбъектXDTOSTI133X159.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
		
	ОбъектXDTO.STI133X150.Добавить(ОбъектXDTOSTI133X150);
	ОбъектXDTO.STI133X151.Добавить(ОбъектXDTOSTI133X151);
	ОбъектXDTO.STI133X152.Добавить(ОбъектXDTOSTI133X152);
	ОбъектXDTO.STI133X153.Добавить(ОбъектXDTOSTI133X153);
	ОбъектXDTO.STI133X154.Добавить(ОбъектXDTOSTI133X154);
	ОбъектXDTO.STI133X155.Добавить(ОбъектXDTOSTI133X155);
	ОбъектXDTO.STI133X156.Добавить(ОбъектXDTOSTI133X156);
	ОбъектXDTO.STI133X157.Добавить(ОбъектXDTOSTI133X157);
	ОбъектXDTO.STI133X158.Добавить(ОбъектXDTOSTI133X158);
	ОбъектXDTO.STI133X159.Добавить(ОбъектXDTOSTI133X159);
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогПервыйМесяцКвартала.Найти(2, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X160 = СоздатьОбъектXDTO("STI133X160");
	ОбъектXDTOSTI133X160.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X161 = СоздатьОбъектXDTO("STI133X161");
	ОбъектXDTOSTI133X161.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X162 = СоздатьОбъектXDTO("STI133X162");
	ОбъектXDTOSTI133X162.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X163 = СоздатьОбъектXDTO("STI133X163");
	ОбъектXDTOSTI133X163.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X164 = СоздатьОбъектXDTO("STI133X164");
	ОбъектXDTOSTI133X164.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X165 = СоздатьОбъектXDTO("STI133X165");
	ОбъектXDTOSTI133X165.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X166 = СоздатьОбъектXDTO("STI133X166");
	ОбъектXDTOSTI133X166.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X167 = СоздатьОбъектXDTO("STI133X167");
	ОбъектXDTOSTI133X167.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X168 = СоздатьОбъектXDTO("STI133X168");
	ОбъектXDTOSTI133X168.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X169 = СоздатьОбъектXDTO("STI133X169");
	ОбъектXDTOSTI133X169.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X160.Добавить(ОбъектXDTOSTI133X160);
	ОбъектXDTO.STI133X161.Добавить(ОбъектXDTOSTI133X161);
	ОбъектXDTO.STI133X162.Добавить(ОбъектXDTOSTI133X162);
	ОбъектXDTO.STI133X163.Добавить(ОбъектXDTOSTI133X163);
	ОбъектXDTO.STI133X164.Добавить(ОбъектXDTOSTI133X164);
	ОбъектXDTO.STI133X165.Добавить(ОбъектXDTOSTI133X165);
	ОбъектXDTO.STI133X166.Добавить(ОбъектXDTOSTI133X166);
	ОбъектXDTO.STI133X167.Добавить(ОбъектXDTOSTI133X167);
	ОбъектXDTO.STI133X168.Добавить(ОбъектXDTOSTI133X168);
	ОбъектXDTO.STI133X169.Добавить(ОбъектXDTOSTI133X169);
	
	// ФИЗИЧЕСКИЕ ЛИЦА - НЕРЕЗИДЕНТЫ, НЕ ЯВЛЯЮЩИЕСЯ ГРАЖДАНАМИ КЫРГЫЗСКОЙ РЕСПУБЛИКИ
	СтрокаТаблицы = ТаблицаПодоходныйНалогПервыйМесяцКвартала.Найти(3, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X170 = СоздатьОбъектXDTO("STI133X170");
	ОбъектXDTOSTI133X170.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X171 = СоздатьОбъектXDTO("STI133X171");
	ОбъектXDTOSTI133X171.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X172 = СоздатьОбъектXDTO("STI133X172");
	ОбъектXDTOSTI133X172.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X173 = СоздатьОбъектXDTO("STI133X173");
	ОбъектXDTOSTI133X173.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X174 = СоздатьОбъектXDTO("STI133X174");
	ОбъектXDTOSTI133X174.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X175 = СоздатьОбъектXDTO("STI133X175");
	ОбъектXDTOSTI133X175.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X176 = СоздатьОбъектXDTO("STI133X176");
	ОбъектXDTOSTI133X176.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X177 = СоздатьОбъектXDTO("STI133X177");
	ОбъектXDTOSTI133X177.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X178 = СоздатьОбъектXDTO("STI133X178");
	ОбъектXDTOSTI133X178.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X179 = СоздатьОбъектXDTO("STI133X179");
	ОбъектXDTOSTI133X179.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X170.Добавить(ОбъектXDTOSTI133X170);
	ОбъектXDTO.STI133X171.Добавить(ОбъектXDTOSTI133X171);
	ОбъектXDTO.STI133X172.Добавить(ОбъектXDTOSTI133X172);
	ОбъектXDTO.STI133X173.Добавить(ОбъектXDTOSTI133X173);
	ОбъектXDTO.STI133X174.Добавить(ОбъектXDTOSTI133X174);
	ОбъектXDTO.STI133X175.Добавить(ОбъектXDTOSTI133X175);
	ОбъектXDTO.STI133X176.Добавить(ОбъектXDTOSTI133X176);
	ОбъектXDTO.STI133X177.Добавить(ОбъектXDTOSTI133X177);
	ОбъектXDTO.STI133X178.Добавить(ОбъектXDTOSTI133X178);
	ОбъектXDTO.STI133X179.Добавить(ОбъектXDTOSTI133X179);
	
	// ПРОЧИЕ
	СтрокаТаблицы = ТаблицаПодоходныйНалогПервыйМесяцКвартала.Найти(4, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X180 = СоздатьОбъектXDTO("STI133X180");
	ОбъектXDTOSTI133X180.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X181 = СоздатьОбъектXDTO("STI133X181");
	ОбъектXDTOSTI133X181.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X182 = СоздатьОбъектXDTO("STI133X182");
	ОбъектXDTOSTI133X182.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X183 = СоздатьОбъектXDTO("STI133X183");
	ОбъектXDTOSTI133X183.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X184 = СоздатьОбъектXDTO("STI133X184");
	ОбъектXDTOSTI133X184.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X185 = СоздатьОбъектXDTO("STI133X185");
	ОбъектXDTOSTI133X185.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X186 = СоздатьОбъектXDTO("STI133X186");
	ОбъектXDTOSTI133X186.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X187 = СоздатьОбъектXDTO("STI133X187");
	ОбъектXDTOSTI133X187.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X188 = СоздатьОбъектXDTO("STI133X188");
	ОбъектXDTOSTI133X188.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X189 = СоздатьОбъектXDTO("STI133X189");
	ОбъектXDTOSTI133X189.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X180.Добавить(ОбъектXDTOSTI133X180);
	ОбъектXDTO.STI133X181.Добавить(ОбъектXDTOSTI133X181);
	ОбъектXDTO.STI133X182.Добавить(ОбъектXDTOSTI133X182);
	ОбъектXDTO.STI133X183.Добавить(ОбъектXDTOSTI133X183);
	ОбъектXDTO.STI133X184.Добавить(ОбъектXDTOSTI133X184);
	ОбъектXDTO.STI133X185.Добавить(ОбъектXDTOSTI133X185);
	ОбъектXDTO.STI133X186.Добавить(ОбъектXDTOSTI133X186);
	ОбъектXDTO.STI133X187.Добавить(ОбъектXDTOSTI133X187);
	ОбъектXDTO.STI133X188.Добавить(ОбъектXDTOSTI133X188);
	ОбъектXDTO.STI133X189.Добавить(ОбъектXDTOSTI133X189);
	
	// ИТОГО
	ОбъектXDTOSTI133X190 = СоздатьОбъектXDTO("STI133X190");
	ОбъектXDTOSTI133X190.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("Количество");
	
	ОбъектXDTOSTI133X191 = СоздатьОбъектXDTO("STI133X191");
	ОбъектXDTOSTI133X191.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаНачислено");
	
	ОбъектXDTOSTI133X192 = СоздатьОбъектXDTO("STI133X192");
	ОбъектXDTOSTI133X192.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаНеоблагаемая");
	
	ОбъектXDTOSTI133X193 = СоздатьОбъектXDTO("STI133X193");
	ОбъектXDTOSTI133X193.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X194 = СоздатьОбъектXDTO("STI133X194");
	ОбъектXDTOSTI133X194.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаНачислено") 
								- Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаНеоблагаемая") 
								- Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X195 = СоздатьОбъектXDTO("STI133X195");
	ОбъектXDTOSTI133X195.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаПНсСотрудника");
	
	ОбъектXDTOSTI133X196 = СоздатьОбъектXDTO("STI133X196");
	ОбъектXDTOSTI133X196.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаПНсМРД");
	
	ОбъектXDTOSTI133X197 = СоздатьОбъектXDTO("STI133X197");
	ОбъектXDTOSTI133X197.Text = Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СальдоК");
	
	ОбъектXDTOSTI133X198 = СоздатьОбъектXDTO("STI133X198");
	ОбъектXDTOSTI133X198.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									Объект.ПодоходныйНалогПервыйМесяцКвартала.Итог("СуммаВыплачено"));
	
	ОбъектXDTO.STI133X190.Добавить(ОбъектXDTOSTI133X190);
	ОбъектXDTO.STI133X191.Добавить(ОбъектXDTOSTI133X191);
	ОбъектXDTO.STI133X192.Добавить(ОбъектXDTOSTI133X192);
	ОбъектXDTO.STI133X193.Добавить(ОбъектXDTOSTI133X193);
	ОбъектXDTO.STI133X194.Добавить(ОбъектXDTOSTI133X194);
	ОбъектXDTO.STI133X195.Добавить(ОбъектXDTOSTI133X195);
	ОбъектXDTO.STI133X196.Добавить(ОбъектXDTOSTI133X196);
	ОбъектXDTO.STI133X197.Добавить(ОбъектXDTOSTI133X197);
	ОбъектXDTO.STI133X198.Добавить(ОбъектXDTOSTI133X198);
КонецПроцедуры

Процедура ЗаполнитьВторойМесяцФайлаXML(ОбъектXDTO)

	ТаблицаПодоходныйНалогВторойМесяцКвартала = Объект.ПодоходныйНалогВторойМесяцКвартала.Выгрузить();
		
	ТаблицаПодоходныйНалогВторойМесяцКвартала.Свернуть("НомерСтрокиОтчета",
		"Количество,СуммаНачислено,СуммаНеоблагаемая,Вычеты,СуммаПНсСотрудника,СуммаПНсМРД,СальдоК,СуммаПН,СуммаВыплачено");
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ НЕ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогВторойМесяцКвартала.Найти(1, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X200 = СоздатьОбъектXDTO("STI133X200");
	ОбъектXDTOSTI133X200.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X201 = СоздатьОбъектXDTO("STI133X201");
	ОбъектXDTOSTI133X201.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X202 = СоздатьОбъектXDTO("STI133X202");
	ОбъектXDTOSTI133X202.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X203 = СоздатьОбъектXDTO("STI133X203");
	ОбъектXDTOSTI133X203.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X204 = СоздатьОбъектXDTO("STI133X204");
	ОбъектXDTOSTI133X204.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X205 = СоздатьОбъектXDTO("STI133X205");
	ОбъектXDTOSTI133X205.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X206 = СоздатьОбъектXDTO("STI133X206");
	ОбъектXDTOSTI133X206.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X207 = СоздатьОбъектXDTO("STI133X207");
	ОбъектXDTOSTI133X207.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X208 = СоздатьОбъектXDTO("STI133X208");
	ОбъектXDTOSTI133X208.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X209 = СоздатьОбъектXDTO("STI133X209");
	ОбъектXDTOSTI133X209.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
		
	ОбъектXDTO.STI133X200.Добавить(ОбъектXDTOSTI133X200);
	ОбъектXDTO.STI133X201.Добавить(ОбъектXDTOSTI133X201);
	ОбъектXDTO.STI133X202.Добавить(ОбъектXDTOSTI133X202);
	ОбъектXDTO.STI133X203.Добавить(ОбъектXDTOSTI133X203);
	ОбъектXDTO.STI133X204.Добавить(ОбъектXDTOSTI133X204);
	ОбъектXDTO.STI133X205.Добавить(ОбъектXDTOSTI133X205);
	ОбъектXDTO.STI133X206.Добавить(ОбъектXDTOSTI133X206);
	ОбъектXDTO.STI133X207.Добавить(ОбъектXDTOSTI133X207);
	ОбъектXDTO.STI133X208.Добавить(ОбъектXDTOSTI133X208);
	ОбъектXDTO.STI133X209.Добавить(ОбъектXDTOSTI133X209);
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогВторойМесяцКвартала.Найти(2, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X210 = СоздатьОбъектXDTO("STI133X210");
	ОбъектXDTOSTI133X210.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X211 = СоздатьОбъектXDTO("STI133X211");
	ОбъектXDTOSTI133X211.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X212 = СоздатьОбъектXDTO("STI133X212");
	ОбъектXDTOSTI133X212.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X213 = СоздатьОбъектXDTO("STI133X213");
	ОбъектXDTOSTI133X213.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X214 = СоздатьОбъектXDTO("STI133X214");
	ОбъектXDTOSTI133X214.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X215 = СоздатьОбъектXDTO("STI133X215");
	ОбъектXDTOSTI133X215.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X216 = СоздатьОбъектXDTO("STI133X216");
	ОбъектXDTOSTI133X216.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X217 = СоздатьОбъектXDTO("STI133X217");
	ОбъектXDTOSTI133X217.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X218 = СоздатьОбъектXDTO("STI133X218");
	ОбъектXDTOSTI133X218.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X219 = СоздатьОбъектXDTO("STI133X219");
	ОбъектXDTOSTI133X219.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X210.Добавить(ОбъектXDTOSTI133X210);
	ОбъектXDTO.STI133X211.Добавить(ОбъектXDTOSTI133X211);
	ОбъектXDTO.STI133X212.Добавить(ОбъектXDTOSTI133X212);
	ОбъектXDTO.STI133X213.Добавить(ОбъектXDTOSTI133X213);
	ОбъектXDTO.STI133X214.Добавить(ОбъектXDTOSTI133X214);
	ОбъектXDTO.STI133X215.Добавить(ОбъектXDTOSTI133X215);
	ОбъектXDTO.STI133X216.Добавить(ОбъектXDTOSTI133X216);
	ОбъектXDTO.STI133X217.Добавить(ОбъектXDTOSTI133X217);
	ОбъектXDTO.STI133X218.Добавить(ОбъектXDTOSTI133X218);
	ОбъектXDTO.STI133X219.Добавить(ОбъектXDTOSTI133X219);
	
	// ФИЗИЧЕСКИЕ ЛИЦА - НЕРЕЗИДЕНТЫ, НЕ ЯВЛЯЮЩИЕСЯ ГРАЖДАНАМИ КЫРГЫЗСКОЙ РЕСПУБЛИКИ
	СтрокаТаблицы = ТаблицаПодоходныйНалогВторойМесяцКвартала.Найти(3, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X220 = СоздатьОбъектXDTO("STI133X220");
	ОбъектXDTOSTI133X220.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X221 = СоздатьОбъектXDTO("STI133X221");
	ОбъектXDTOSTI133X221.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X222 = СоздатьОбъектXDTO("STI133X222");
	ОбъектXDTOSTI133X222.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X223 = СоздатьОбъектXDTO("STI133X223");
	ОбъектXDTOSTI133X223.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X224 = СоздатьОбъектXDTO("STI133X224");
	ОбъектXDTOSTI133X224.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X225 = СоздатьОбъектXDTO("STI133X225");
	ОбъектXDTOSTI133X225.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X226 = СоздатьОбъектXDTO("STI133X226");
	ОбъектXDTOSTI133X226.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X227 = СоздатьОбъектXDTO("STI133X227");
	ОбъектXDTOSTI133X227.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X228 = СоздатьОбъектXDTO("STI133X228");
	ОбъектXDTOSTI133X228.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X229 = СоздатьОбъектXDTO("STI133X229");
	ОбъектXDTOSTI133X229.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X220.Добавить(ОбъектXDTOSTI133X220);
	ОбъектXDTO.STI133X221.Добавить(ОбъектXDTOSTI133X221);
	ОбъектXDTO.STI133X222.Добавить(ОбъектXDTOSTI133X222);
	ОбъектXDTO.STI133X223.Добавить(ОбъектXDTOSTI133X223);
	ОбъектXDTO.STI133X224.Добавить(ОбъектXDTOSTI133X224);
	ОбъектXDTO.STI133X225.Добавить(ОбъектXDTOSTI133X225);
	ОбъектXDTO.STI133X226.Добавить(ОбъектXDTOSTI133X226);
	ОбъектXDTO.STI133X227.Добавить(ОбъектXDTOSTI133X227);
	ОбъектXDTO.STI133X228.Добавить(ОбъектXDTOSTI133X228);
	ОбъектXDTO.STI133X229.Добавить(ОбъектXDTOSTI133X229);
	
	// ПРОЧИЕ
	СтрокаТаблицы = ТаблицаПодоходныйНалогВторойМесяцКвартала.Найти(4, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X230 = СоздатьОбъектXDTO("STI133X230");
	ОбъектXDTOSTI133X230.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X231 = СоздатьОбъектXDTO("STI133X231");
	ОбъектXDTOSTI133X231.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X232 = СоздатьОбъектXDTO("STI133X232");
	ОбъектXDTOSTI133X232.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X233 = СоздатьОбъектXDTO("STI133X233");
	ОбъектXDTOSTI133X233.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X234 = СоздатьОбъектXDTO("STI133X234");
	ОбъектXDTOSTI133X234.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X235 = СоздатьОбъектXDTO("STI133X235");
	ОбъектXDTOSTI133X235.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X236 = СоздатьОбъектXDTO("STI133X236");
	ОбъектXDTOSTI133X236.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X237 = СоздатьОбъектXDTO("STI133X237");
	ОбъектXDTOSTI133X237.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X238 = СоздатьОбъектXDTO("STI133X238");
	ОбъектXDTOSTI133X238.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X239 = СоздатьОбъектXDTO("STI133X239");
	ОбъектXDTOSTI133X239.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X230.Добавить(ОбъектXDTOSTI133X230);
	ОбъектXDTO.STI133X231.Добавить(ОбъектXDTOSTI133X231);
	ОбъектXDTO.STI133X232.Добавить(ОбъектXDTOSTI133X232);
	ОбъектXDTO.STI133X233.Добавить(ОбъектXDTOSTI133X233);
	ОбъектXDTO.STI133X234.Добавить(ОбъектXDTOSTI133X234);
	ОбъектXDTO.STI133X235.Добавить(ОбъектXDTOSTI133X235);
	ОбъектXDTO.STI133X236.Добавить(ОбъектXDTOSTI133X236);
	ОбъектXDTO.STI133X237.Добавить(ОбъектXDTOSTI133X237);
	ОбъектXDTO.STI133X238.Добавить(ОбъектXDTOSTI133X238);
	ОбъектXDTO.STI133X239.Добавить(ОбъектXDTOSTI133X239);
	
	// ИТОГО
	ОбъектXDTOSTI133X240 = СоздатьОбъектXDTO("STI133X240");
	ОбъектXDTOSTI133X240.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("Количество");
	
	ОбъектXDTOSTI133X241 = СоздатьОбъектXDTO("STI133X241");
	ОбъектXDTOSTI133X241.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаНачислено");
	
	ОбъектXDTOSTI133X242 = СоздатьОбъектXDTO("STI133X242");
	ОбъектXDTOSTI133X242.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаНеоблагаемая");
	
	ОбъектXDTOSTI133X243 = СоздатьОбъектXDTO("STI133X243");
	ОбъектXDTOSTI133X243.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X244 = СоздатьОбъектXDTO("STI133X244");
	ОбъектXDTOSTI133X244.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаНачислено") 
								- Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаНеоблагаемая") 
								- Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X245 = СоздатьОбъектXDTO("STI133X245");
	ОбъектXDTOSTI133X245.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаПНсСотрудника");
	
	ОбъектXDTOSTI133X246 = СоздатьОбъектXDTO("STI133X246");
	ОбъектXDTOSTI133X246.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаПНсМРД");
	
	ОбъектXDTOSTI133X247 = СоздатьОбъектXDTO("STI133X247");
	ОбъектXDTOSTI133X247.Text = Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СальдоК");
	
	ОбъектXDTOSTI133X248 = СоздатьОбъектXDTO("STI133X248");
	ОбъектXDTOSTI133X248.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									Объект.ПодоходныйНалогВторойМесяцКвартала.Итог("СуммаВыплачено"));
	
	ОбъектXDTO.STI133X240.Добавить(ОбъектXDTOSTI133X240);
	ОбъектXDTO.STI133X241.Добавить(ОбъектXDTOSTI133X241);
	ОбъектXDTO.STI133X242.Добавить(ОбъектXDTOSTI133X242);
	ОбъектXDTO.STI133X243.Добавить(ОбъектXDTOSTI133X243);
	ОбъектXDTO.STI133X244.Добавить(ОбъектXDTOSTI133X244);
	ОбъектXDTO.STI133X245.Добавить(ОбъектXDTOSTI133X245);
	ОбъектXDTO.STI133X246.Добавить(ОбъектXDTOSTI133X246);
	ОбъектXDTO.STI133X247.Добавить(ОбъектXDTOSTI133X247);
	ОбъектXDTO.STI133X248.Добавить(ОбъектXDTOSTI133X248);
КонецПроцедуры

Процедура ЗаполнитьТретийМесяцФайлаXML(ОбъектXDTO)

	ТаблицаПодоходныйНалогТретийМесяцКвартала = Объект.ПодоходныйНалогТретийМесяцКвартала.Выгрузить();
		
	ТаблицаПодоходныйНалогТретийМесяцКвартала.Свернуть("НомерСтрокиОтчета",
		"Количество,СуммаНачислено,СуммаНеоблагаемая,Вычеты,СуммаПНсСотрудника,СуммаПНсМРД,СальдоК,СуммаПН,СуммаВыплачено");
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ НЕ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогТретийМесяцКвартала.Найти(1, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X250 = СоздатьОбъектXDTO("STI133X250");
	ОбъектXDTOSTI133X250.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X251 = СоздатьОбъектXDTO("STI133X251");
	ОбъектXDTOSTI133X251.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X252 = СоздатьОбъектXDTO("STI133X252");
	ОбъектXDTOSTI133X252.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X253 = СоздатьОбъектXDTO("STI133X253");
	ОбъектXDTOSTI133X253.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X254 = СоздатьОбъектXDTO("STI133X254");
	ОбъектXDTOSTI133X254.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X255 = СоздатьОбъектXDTO("STI133X255");
	ОбъектXDTOSTI133X255.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X256 = СоздатьОбъектXDTO("STI133X256");
	ОбъектXDTOSTI133X256.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X257 = СоздатьОбъектXDTO("STI133X257");
	ОбъектXDTOSTI133X257.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X258 = СоздатьОбъектXDTO("STI133X258");
	ОбъектXDTOSTI133X258.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X259 = СоздатьОбъектXDTO("STI133X259");
	ОбъектXDTOSTI133X259.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
		
	ОбъектXDTO.STI133X250.Добавить(ОбъектXDTOSTI133X250);
	ОбъектXDTO.STI133X251.Добавить(ОбъектXDTOSTI133X251);
	ОбъектXDTO.STI133X252.Добавить(ОбъектXDTOSTI133X252);
	ОбъектXDTO.STI133X253.Добавить(ОбъектXDTOSTI133X253);
	ОбъектXDTO.STI133X254.Добавить(ОбъектXDTOSTI133X254);
	ОбъектXDTO.STI133X255.Добавить(ОбъектXDTOSTI133X255);
	ОбъектXDTO.STI133X256.Добавить(ОбъектXDTOSTI133X256);
	ОбъектXDTO.STI133X257.Добавить(ОбъектXDTOSTI133X257);
	ОбъектXDTO.STI133X258.Добавить(ОбъектXDTOSTI133X258);
	ОбъектXDTO.STI133X259.Добавить(ОбъектXDTOSTI133X259);
	
	// ФИЗИЧЕСКИЕ ЛИЦА, ПО КОТОРЫМ ТРУДОВЫЕ ОТНОШЕНИЯ ДЕЙСТВОВАЛИ МЕНЕЕ 15 ДНЕЙ (В ТЕЧЕНИЕ МЕСЯЦА)
	СтрокаТаблицы = ТаблицаПодоходныйНалогТретийМесяцКвартала.Найти(2, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X260 = СоздатьОбъектXDTO("STI133X260");
	ОбъектXDTOSTI133X260.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X261 = СоздатьОбъектXDTO("STI133X261");
	ОбъектXDTOSTI133X261.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X262 = СоздатьОбъектXDTO("STI133X262");
	ОбъектXDTOSTI133X262.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X263 = СоздатьОбъектXDTO("STI133X263");
	ОбъектXDTOSTI133X263.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X264 = СоздатьОбъектXDTO("STI133X264");
	ОбъектXDTOSTI133X264.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X265 = СоздатьОбъектXDTO("STI133X265");
	ОбъектXDTOSTI133X265.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X266 = СоздатьОбъектXDTO("STI133X266");
	ОбъектXDTOSTI133X266.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X267 = СоздатьОбъектXDTO("STI133X267");
	ОбъектXDTOSTI133X267.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X268 = СоздатьОбъектXDTO("STI133X268");
	ОбъектXDTOSTI133X268.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X269 = СоздатьОбъектXDTO("STI133X269");
	ОбъектXDTOSTI133X269.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X260.Добавить(ОбъектXDTOSTI133X260);
	ОбъектXDTO.STI133X261.Добавить(ОбъектXDTOSTI133X261);
	ОбъектXDTO.STI133X262.Добавить(ОбъектXDTOSTI133X262);
	ОбъектXDTO.STI133X263.Добавить(ОбъектXDTOSTI133X263);
	ОбъектXDTO.STI133X264.Добавить(ОбъектXDTOSTI133X264);
	ОбъектXDTO.STI133X265.Добавить(ОбъектXDTOSTI133X265);
	ОбъектXDTO.STI133X266.Добавить(ОбъектXDTOSTI133X266);
	ОбъектXDTO.STI133X267.Добавить(ОбъектXDTOSTI133X267);
	ОбъектXDTO.STI133X268.Добавить(ОбъектXDTOSTI133X268);
	ОбъектXDTO.STI133X269.Добавить(ОбъектXDTOSTI133X269);
	
	// ФИЗИЧЕСКИЕ ЛИЦА - НЕРЕЗИДЕНТЫ, НЕ ЯВЛЯЮЩИЕСЯ ГРАЖДАНАМИ КЫРГЫЗСКОЙ РЕСПУБЛИКИ
	СтрокаТаблицы = ТаблицаПодоходныйНалогТретийМесяцКвартала.Найти(3, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X270 = СоздатьОбъектXDTO("STI133X270");
	ОбъектXDTOSTI133X270.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X271 = СоздатьОбъектXDTO("STI133X271");
	ОбъектXDTOSTI133X271.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X272 = СоздатьОбъектXDTO("STI133X272");
	ОбъектXDTOSTI133X272.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X273 = СоздатьОбъектXDTO("STI133X273");
	ОбъектXDTOSTI133X273.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X274 = СоздатьОбъектXDTO("STI133X274");
	ОбъектXDTOSTI133X274.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X275 = СоздатьОбъектXDTO("STI133X275");
	ОбъектXDTOSTI133X275.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X276 = СоздатьОбъектXDTO("STI133X276");
	ОбъектXDTOSTI133X276.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X277 = СоздатьОбъектXDTO("STI133X277");
	ОбъектXDTOSTI133X277.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X278 = СоздатьОбъектXDTO("STI133X278");
	ОбъектXDTOSTI133X278.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X279 = СоздатьОбъектXDTO("STI133X279");
	ОбъектXDTOSTI133X279.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X270.Добавить(ОбъектXDTOSTI133X270);
	ОбъектXDTO.STI133X271.Добавить(ОбъектXDTOSTI133X271);
	ОбъектXDTO.STI133X272.Добавить(ОбъектXDTOSTI133X272);
	ОбъектXDTO.STI133X273.Добавить(ОбъектXDTOSTI133X273);
	ОбъектXDTO.STI133X274.Добавить(ОбъектXDTOSTI133X274);
	ОбъектXDTO.STI133X275.Добавить(ОбъектXDTOSTI133X275);
	ОбъектXDTO.STI133X276.Добавить(ОбъектXDTOSTI133X276);
	ОбъектXDTO.STI133X277.Добавить(ОбъектXDTOSTI133X277);
	ОбъектXDTO.STI133X278.Добавить(ОбъектXDTOSTI133X278);
	ОбъектXDTO.STI133X279.Добавить(ОбъектXDTOSTI133X279);
	
	// ПРОЧИЕ
	СтрокаТаблицы = ТаблицаПодоходныйНалогТретийМесяцКвартала.Найти(4, "НомерСтрокиОтчета");
	
	ОбъектXDTOSTI133X280 = СоздатьОбъектXDTO("STI133X280");
	ОбъектXDTOSTI133X280.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Количество);
	
	ОбъектXDTOSTI133X281 = СоздатьОбъектXDTO("STI133X281");
	ОбъектXDTOSTI133X281.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНачислено);
	
	ОбъектXDTOSTI133X282 = СоздатьОбъектXDTO("STI133X282");
	ОбъектXDTOSTI133X282.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаНеоблагаемая);
	
	ОбъектXDTOSTI133X283 = СоздатьОбъектXDTO("STI133X283");
	ОбъектXDTOSTI133X283.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X284 = СоздатьОбъектXDTO("STI133X284");
	ОбъектXDTOSTI133X284.Text = ?(СтрокаТаблицы = Неопределено, 0, 
					СтрокаТаблицы.СуммаНачислено - СтрокаТаблицы.СуммаНеоблагаемая - СтрокаТаблицы.Вычеты);
	
	ОбъектXDTOSTI133X285 = СоздатьОбъектXDTO("STI133X285");
	ОбъектXDTOSTI133X285.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсСотрудника);
	
	ОбъектXDTOSTI133X286 = СоздатьОбъектXDTO("STI133X286");
	ОбъектXDTOSTI133X286.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаПНсМРД);
	
	ОбъектXDTOSTI133X287 = СоздатьОбъектXDTO("STI133X287");
	ОбъектXDTOSTI133X287.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTOSTI133X288 = СоздатьОбъектXDTO("STI133X288");
	ОбъектXDTOSTI133X288.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СуммаВыплачено));
	
	ОбъектXDTOSTI133X289 = СоздатьОбъектXDTO("STI133X289");
	ОбъектXDTOSTI133X289.Text = ?(СтрокаТаблицы = Неопределено, 0, СтрокаТаблицы.СальдоК);
	
	ОбъектXDTO.STI133X280.Добавить(ОбъектXDTOSTI133X280);
	ОбъектXDTO.STI133X281.Добавить(ОбъектXDTOSTI133X281);
	ОбъектXDTO.STI133X282.Добавить(ОбъектXDTOSTI133X282);
	ОбъектXDTO.STI133X283.Добавить(ОбъектXDTOSTI133X283);
	ОбъектXDTO.STI133X284.Добавить(ОбъектXDTOSTI133X284);
	ОбъектXDTO.STI133X285.Добавить(ОбъектXDTOSTI133X285);
	ОбъектXDTO.STI133X286.Добавить(ОбъектXDTOSTI133X286);
	ОбъектXDTO.STI133X287.Добавить(ОбъектXDTOSTI133X287);
	ОбъектXDTO.STI133X288.Добавить(ОбъектXDTOSTI133X288);
	ОбъектXDTO.STI133X289.Добавить(ОбъектXDTOSTI133X289);
	
	// ИТОГО
	ОбъектXDTOSTI133X290 = СоздатьОбъектXDTO("STI133X290");
	ОбъектXDTOSTI133X290.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("Количество");
	
	ОбъектXDTOSTI133X291 = СоздатьОбъектXDTO("STI133X291");
	ОбъектXDTOSTI133X291.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаНачислено");
	
	ОбъектXDTOSTI133X292 = СоздатьОбъектXDTO("STI133X292");
	ОбъектXDTOSTI133X292.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаНеоблагаемая");
	
	ОбъектXDTOSTI133X293 = СоздатьОбъектXDTO("STI133X293");
	ОбъектXDTOSTI133X293.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X294 = СоздатьОбъектXDTO("STI133X294");
	ОбъектXDTOSTI133X294.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаНачислено") 
								- Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаНеоблагаемая") 
								- Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("Вычеты");
	
	ОбъектXDTOSTI133X295 = СоздатьОбъектXDTO("STI133X295");
	ОбъектXDTOSTI133X295.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаПНсСотрудника");
	
	ОбъектXDTOSTI133X296 = СоздатьОбъектXDTO("STI133X296");
	ОбъектXDTOSTI133X296.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаПНсМРД");
	
	ОбъектXDTOSTI133X297 = СоздатьОбъектXDTO("STI133X297");
	ОбъектXDTOSTI133X297.Text = Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СальдоК");
	
	ОбъектXDTOSTI133X298 = СоздатьОбъектXDTO("STI133X298");
	ОбъектXDTOSTI133X298.Text = ?(Объект.НеЗаполнятьВыплатыПоЗП, 0, 
									Объект.ПодоходныйНалогТретийМесяцКвартала.Итог("СуммаВыплачено"));
	
	ОбъектXDTO.STI133X290.Добавить(ОбъектXDTOSTI133X290);
	ОбъектXDTO.STI133X291.Добавить(ОбъектXDTOSTI133X291);
	ОбъектXDTO.STI133X292.Добавить(ОбъектXDTOSTI133X292);
	ОбъектXDTO.STI133X293.Добавить(ОбъектXDTOSTI133X293);
	ОбъектXDTO.STI133X294.Добавить(ОбъектXDTOSTI133X294);
	ОбъектXDTO.STI133X295.Добавить(ОбъектXDTOSTI133X295);
	ОбъектXDTO.STI133X296.Добавить(ОбъектXDTOSTI133X296);
	ОбъектXDTO.STI133X297.Добавить(ОбъектXDTOSTI133X297);
	ОбъектXDTO.STI133X298.Добавить(ОбъектXDTOSTI133X298);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
