#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		Если ИмяМакета = "ВедомостьПеречисленияНаКартСчета" Тогда     
			
			ТабличныйДокумент.КлючПараметровПечати = "ВедомостьЗаработнойПлаты_ВедомостьПеречисленияНаКартСчета";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьЗаработнойПлаты.ПФ_MXL_ВедомостьПеречисленияНаКартСчета");
			
			Запрос = Новый Запрос();
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТаблицаДокумента.Дата КАК Дата,
				|	ТаблицаДокумента.Номер КАК НомерДокумента,
				|	ТаблицаДокумента.Организация,
				|	ТаблицаДокумента.ПериодРегистрации
				|ИЗ
				|	Документ.ВедомостьЗаработнойПлаты КАК ТаблицаДокумента
				|ГДЕ
				|	ТаблицаДокумента.Ссылка = &ТекущийДокумент
				|;
				|
				|////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаЗарплата.НомерСтроки КАК НомерСтроки,
				|   ТаблицаЗарплата.ФизЛицо,
				|   ТаблицаЗарплата.СуммаПоКартСчету КАК Сумма,
				|   ТаблицаЗарплата.КартСчет.НомерСчета КАК НомерСчета,
				|   0 КАК СуммаНеРезиденты,
				|   ТаблицаЗарплата.СуммаПоКартСчету КАК СуммаРезиденты
				|ИЗ
				|	Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ТаблицаЗарплата 
				|ГДЕ
				|	ТаблицаЗарплата.Ссылка = &ТекущийДокумент
				|	И ТаблицаЗарплата.СуммаПоКартСчету <> 0
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			
			ДанныеПечати = Новый Структура;
			
			ДанныеПечати.Вставить("Организация", Шапка.Организация);
			ДанныеПечати.Вставить("ДатаДокумента", Шапка.Дата);
			ДанныеПечати.Вставить("НомерДокумента", Шапка.НомерДокумента);
			ДанныеПечати.Вставить("ПериодРегистрации", Шапка.ПериодРегистрации);
			
			ВременнаяТаблицаЗарплата =  МассивРезультатов[1].Выгрузить();
			// Итоги
			ДанныеПечати.Вставить("Сумма", ВременнаяТаблицаЗарплата.Итог("Сумма"));
			ДанныеПечати.Вставить("СуммаРезиденты", ВременнаяТаблицаЗарплата.Итог("СуммаРезиденты"));
			ДанныеПечати.Вставить("СуммаНеРезиденты", ВременнаяТаблицаЗарплата.Итог("СуммаНеРезиденты"));

			ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(ДанныеПечати.Сумма));

			МассивОбластейМакета = Новый Массив;
			МассивОбластейМакета.Добавить("Заголовок");
			МассивОбластейМакета.Добавить("ШапкаТаблицы");
			МассивОбластейМакета.Добавить("Строка");
			МассивОбластейМакета.Добавить("Подвал");
			
			Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
				ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
				Если ИмяОбласти <> "Строка" Тогда
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				Иначе
					Для Каждого СтрокаТаблицы Из ВременнаяТаблицаЗарплата Цикл
						ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
						ТабличныйДокумент.Вывести(ОбластьМакета);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ИмяМакета = "ПлатежнаяВедомость" Тогда  
			ТабличныйДокумент.КлючПараметровПечати = "ВедомостьЗаработнойПлаты_ПлатежнаяВедомость";     
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьЗаработнойПлаты.ПФ_MXL_ПлатежнаяВедомость");
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.УстановитьПараметр("ВалютаДокумента", Константы.ВалютаРегламентированногоУчета.Получить());
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВедомостьЗаработнойПлаты.Дата КАК Дата,
			|	ВедомостьЗаработнойПлаты.Подразделение КАК Подразделение,
			|	ВедомостьЗаработнойПлаты.ПериодРегистрации КАК ПериодРегистрации,
			|	ВедомостьЗаработнойПлаты.Номер КАК Номер,
			|	ВедомостьЗаработнойПлаты.Организация.Префикс КАК Префикс,
			
			|	ВЫБОР
			|		КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 1
			|			ИЛИ ВедомостьЗаработнойПлаты.ВидВедомости = 2
			|			ТОГДА ВедомостьЗаработнойПлаты.Касса.ВалютаДенежныхСредств
			|		ИНАЧЕ ВедомостьЗаработнойПлаты.БанковскийСчет.ВалютаДенежныхСредств
			|	КОНЕЦ КАК ВалютаДокумента,
			
			//|	&ВалютаДокумента КАК ВалютаДокумента,
			|	ВедомостьЗаработнойПлаты.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
			|	ВедомостьЗаработнойПлаты.Организация КАК Организация,
			|	ВедомостьЗаработнойПлаты.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
			|	ВедомостьЗаработнойПлаты.БанковскийСчет КАК БанковскийСчет,
			|	ВедомостьЗаработнойПлаты.БанковскийСчет.Банк.КоррСчет КАК БанковскийСчетБанкКоррСчет,
			|	ВедомостьЗаработнойПлаты.Касса КАК Касса
			|ИЗ
			|	Документ.ВедомостьЗаработнойПлаты КАК ВедомостьЗаработнойПлаты
			|ГДЕ
			|	ВедомостьЗаработнойПлаты.Ссылка = &ТекущийДокумент";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(ТекущийДокумент.ПериодРегистрации));
			Запрос.УстановитьПараметр("Осн", НСтр("ru = 'Осн.'"));
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо.Код КАК ТабельныйНомер,
			|	&Осн КАК ХарактерРаботы,
			|	СУММА(ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе) КАК Сумма,
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество,
			|	ФИОФизЛицСрезПоследних.Период,
			|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо КАК ФизЛицо,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
			|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|		ИНАЧЕ ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо.Наименование
			|	КОНЕЦ КАК СотрудникПредставление
			|ИЗ
			|	Документ.ВедомостьЗаработнойПлаты.Зарплата КАК ВедомостьНаВыплатуЗарплатыЗарплата
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ПериодРегистрации, ) КАК ФИОФизЛицСрезПоследних
			|		ПО ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
			|ГДЕ
			|	ВедомостьНаВыплатуЗарплатыЗарплата.Ссылка = &ТекущийДокумент
			|	И ВедомостьНаВыплатуЗарплатыЗарплата.СуммаПоКассе <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество,
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо,
			|	ФИОФизЛицСрезПоследних.Период,
			|	ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо.Код,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
			|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|		ИНАЧЕ ВедомостьНаВыплатуЗарплатыЗарплата.ФизЛицо.Наименование
			|	КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникПредставление";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			ОбластьШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
			ОбластьШапка          = Макет.ПолучитьОбласть("Шапка");
			ОбластьДетали         = Макет.ПолучитьОбласть("Детали");
			ОбластьПодвал         = Макет.ПолучитьОбласть("Подвал");
			
			ДанныеПечати = Новый Структура;
			
			ДанныеПечати.Вставить("Организация", Шапка.Организация);
			
			НомерДокумента = Шапка.Номер;
			
			ДанныеПечати.Вставить("КодПоОКПО", Шапка.ОрганизацияКодПоОКПО);
			ДанныеПечати.Вставить("КорСчет", Шапка.БанковскийСчетБанкКоррСчет);
			ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияНаименованиеПолное);
			ДанныеПечати.Вставить("ПодразделениеОрганизации", Шапка.Подразделение);
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ТекущийДокумент.Зарплата.Итог("СуммаПоКассе"),Шапка.ВалютаДокумента));
			СуммаПоКассе = ТекущийДокумент.Зарплата.Итог("СуммаПоКассе"); 
			ДанныеПечати.Вставить("СуммаДок", СуммаПоКассе);
			ДанныеПечати.Вставить("Валюта", Шапка.ВалютаДокумента);
			ДанныеПечати.Вставить("НомерДок", ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(НомерДокумента)));
			ДанныеПечати.Вставить("ДатаДок", Шапка.Дата);
			ДанныеПечати.Вставить("РПериодС", Шапка.ПериодРегистрации);
			ДанныеПечати.Вставить("РПериодПо", КонецМесяца(Шапка.ПериодРегистрации));
			
			ДанныеПечати.Вставить("НадписьСумма", "Сумма, " + (Шапка.ВалютаДокумента));
			
			ЗаполнитьЗначенияСвойств(ОбластьШапкаДокумента.Параметры, ДанныеПечати);
			
			ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата, Новый Структура("Касса", Шапка.Касса));
			ОбластьШапкаДокумента.Параметры.Заполнить(ОтветственныеЛица);
			
			ТабличныйДокумент.Вывести(ОбластьШапкаДокумента);
			
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаПоКассе,Шапка.ВалютаДокумента));
			ЦЧ = СтрЗаменить(Цел(СуммаПоКассе), Символы.НПП,"");
			ДЧ = (СуммаПоКассе - ЦЧ)*100; 
			ДанныеПечати.Вставить("ЦЧ", ЦЧ);
			ДанныеПечати.Вставить("ДЧ", ДЧ);
			
			НПП = 0;
			Пока Выборка.Следующий() Цикл
				СтруктураДетали = Новый Структура;
				
				НПП = НПП + 1;
				ОбластьДетали.Параметры.НомерСтроки = НПП;
				СтруктураДетали.Вставить("НомерСтроки", НПП);
				
				ОбластьДетали.Параметры.Заполнить(Выборка);
				Если ЗначениеЗаполнено(Выборка.Фамилия) Тогда
					ФИО = БухгалтерскийУчетСервер.ПолучитьФамилиюИмяОтчество(Выборка.Фамилия, Выборка.Имя, Выборка.Отчество, Истина);
					СтруктураДетали.Вставить("ФизЛицо", ?(ЗначениеЗаполнено(ФИО), ФИО, Выборка.ФизЛицо));
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(ОбластьДетали.Параметры, СтруктураДетали);
				ТабличныйДокумент.Вывести(ОбластьДетали);
			КонецЦикла;
			
			ОбластьПодвал.Параметры.Заполнить(ОтветственныеЛица);
			ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЕсли;
		
		БухгалтерскиеОтчеты.ВыводПодписиРуководителей(ТабличныйДокумент, Шапка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

Функция ПечатьФормаТ53(МассивОбъектов, ОбъектыПечати)

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВедомостьЗаработнойПлаты.Ссылка КАК Ссылка,
		|	ВедомостьЗаработнойПлаты.Номер КАК Номер,
		|	ВедомостьЗаработнойПлаты.Дата КАК Дата,
		|	ВедомостьЗаработнойПлаты.Организация КАК Организация,
		|	ВедомостьЗаработнойПлаты.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ВедомостьЗаработнойПлаты.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
		|	ВедомостьЗаработнойПлаты.Подразделение КАК Подразделение,
		|	ВедомостьЗаработнойПлаты.Касса КАК Касса,
		|	ВедомостьЗаработнойПлаты.ПериодРегистрации КАК ПериодРегистрации,
		|	ВедомостьЗаработнойПлаты.СуммаДокумента КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 1
		|				ИЛИ ВедомостьЗаработнойПлаты.ВидВедомости = 2
		|			ТОГДА ВедомостьЗаработнойПлаты.Касса.СчетУчета
		|		КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 3
		|			ТОГДА ВедомостьЗаработнойПлаты.БанковскийСчет.СчетУчета
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 1
		|			ИЛИ ВедомостьЗаработнойПлаты.ВидВедомости = 2
		|			ТОГДА ВедомостьЗаработнойПлаты.Касса.ВалютаДенежныхСредств
		|		ИНАЧЕ ВедомостьЗаработнойПлаты.БанковскийСчет.ВалютаДенежныхСредств
		|	КОНЕЦ КАК ВалютаДокумента,
		|	ВедомостьЗаработнойПлаты.Зарплата.(
		|		НомерСтроки КАК НомерСтроки,
		|		ФизЛицо КАК ФИОФизЛица,
		|		ФизЛицо.Код КАК ТабельныйНомер,
		|		ВЫБОР
		|			КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 1
		|					ИЛИ ВедомостьЗаработнойПлаты.ВидВедомости = 2
		|				ТОГДА ЕСТЬNULL(ВедомостьЗаработнойПлаты.Зарплата.СуммаПоКассе, 0)
		|			КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 3
		|				ТОГДА ЕСТЬNULL(ВедомостьЗаработнойПлаты.Зарплата.СуммаПоБанковскомуСчету, 0)
		|			КОГДА ВедомостьЗаработнойПлаты.ВидВедомости = 4
		|				ТОГДА ЕСТЬNULL(ВедомостьЗаработнойПлаты.Зарплата.СуммаПоКартСчету, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Сумма
		|	) КАК Зарплата
		|ИЗ
		|	Документ.ВедомостьЗаработнойПлаты КАК ВедомостьЗаработнойПлаты
		|ГДЕ
		|	ВедомостьЗаработнойПлаты.Ссылка В(&СписокДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);

	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ВедомостьЗаработнойПлаты_ФормаТ53";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьЗаработнойПлаты.ПФ_MXL_Т53");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("ПодразделениеОрганизации", Шапка.Подразделение);
		ДанныеПечати.Вставить("КодПоОКПО", Шапка.ОрганизацияКодПоОКПО);
		ДанныеПечати.Вставить("СуммаДок", Шапка.СуммаДокумента);		
		ДанныеПечати.Вставить("ДатаДокумента", Формат(Шапка.Дата, "ДЛФ=D"));
		
		НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер);
		ДанныеПечати.Вставить("НомерДок", НомерНаПечать);
		ДанныеПечати.Вставить("ДатаДок", Формат(Шапка.Дата, "ДЛФ=D"));
		ДанныеПечати.Вставить("РПериодС", Формат(НачалоМесяца(Шапка.ПериодРегистрации), "ДЛФ=D"));
		ДанныеПечати.Вставить("РПериодПо", Формат(КонецМесяца(Шапка.ПериодРегистрации), "ДЛФ=D"));
		ДанныеПечати.Вставить("КорСчет", Шапка.КорСчет);
		
		ДанныеПечати.Вставить("ИтогоНаСтранице",  0);
		ДанныеПечати.Вставить("ИтогоПоВедомости", 0);
		ДанныеПечати.Вставить("КоличествоЛистов", 1);
		
		ДанныеПечати.Вставить("Валюта", Шапка.ВалютаДокумента);
		ДанныеПечати.Вставить("СуммаПрописью", БухгалтерскийУчетСервер.СформироватьСуммуПрописью(Шапка.СуммаДокумента, Шапка.ВалютаДокумента));
		
		// Подписи.
		ФИОРуководителя = "";
		ФамилияИОГлавногоБухгалтера = "";
		ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата, Новый Структура("Касса", Шапка.Касса));
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(ФИОРуководителя, ОтветственныеЛица.Руководитель);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(ФамилияИОГлавногоБухгалтера, ОтветственныеЛица.ГлавныйБухгалтер);
		
		ДанныеПечати.Вставить("Должность", ОтветственныеЛица.РуководительДолжность);
		ДанныеПечати.Вставить("ФИОРуководителя", ФИОРуководителя);
		ДанныеПечати.Вставить("ФИОГлавногоБухгалтера", ФамилияИОГлавногоБухгалтера);
		ДанныеПечати.Вставить("Кассир", ОтветственныеЛица.Кассир);
		ДанныеПечати.Вставить("РасчетныйБухгалтер", ОтветственныеЛица.РасчетныйБухгалтер);
		ДанныеПечати.Вставить("КассирДолжность", ОтветственныеЛица.КассирДолжность);
		
		// Области
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаЗаголовок.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		ОбластьМакетаШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакетаШапкаТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
		
		// Области для разбиения на страницы
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьМакетаИтогоПоЛисту 	= Макет.ПолучитьОбласть("ИтогоПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогоПоЛисту);
		
		ВыборкаЗарплата = Шапка.Зарплата.Выбрать();
		ВсегоСтрокДокумента = ВыборкаЗарплата.Количество();
		 
		ВыведеноСтрок = 0;  
		
		Пока ВыборкаЗарплата.Следующий() Цикл
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаЗарплата);		
			
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверка, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			
			Если ВывестиПодвалЛиста Тогда				
				ОбластьМакетаИтогоПоЛисту.Параметры.Заполнить(ДанныеПечати);
				
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоЛисту);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
				ДанныеПечати.КоличествоЛистов = ДанныеПечати.КоличествоЛистов + 1;
				ДанныеПечати.ИтогоНаСтранице = 0;	
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			ДанныеПечати.ИтогоНаСтранице  = ДанныеПечати.ИтогоНаСтранице + ВыборкаЗарплата.Сумма;
            ДанныеПечати.ИтогоПоВедомости = ДанныеПечати.ИтогоПоВедомости + ВыборкаЗарплата.Сумма;
		КонецЦикла;
		
		ОбластьМакетаИтогоПоЛисту.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоЛисту);
		 
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	

КонецФункции // ПечатьФормаТ53()
	
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьПеречисленияНаКартСчета") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"ВедомостьПеречисленияНаКартСчета",
			НСтр("ru = 'Ведомость перечисления на карт счета'"), 
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ВедомостьПеречисленияНаКартСчета"));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлатежнаяВедомость") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"ПлатежнаяВедомость", 
			НСтр("ru = 'Платежная ведомость'"), 
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПлатежнаяВедомость"));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Т53") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"Т53", 
			НСтр("ru = 'Форма Т53'"), 
			ПечатьФормаТ53(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежнаяВедомость";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьПеречисленияНаКартСчета";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость перечисления на карт счета'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Т53";
	КомандаПечати.Представление = НСтр("ru = 'Форма Т53'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
