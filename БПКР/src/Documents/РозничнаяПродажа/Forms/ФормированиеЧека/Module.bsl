
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "СуммаДокумента, ЭтоВозврат, БезналичныйРасчет");

	СуммаОплаты = СуммаДокумента;	
	Печать = Истина;
	
	ЦветПомеченнойКнопки = ЦветаСтиля.ВыделеннаяКнопкаФон;
	ЦветОбычнойКнопки = Элементы.ОтправитьSMS.ЦветФона;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.ПодключаемоеОборудование) Тогда
		ИспользуютсяСканерыШтрихкода = (МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СканерШтрихкода").Количество() > 0);
	Иначе
		ИспользуютсяСканерыШтрихкода = Ложь;
	КонецЕсли;

	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользуютсяСканерыШтрихкода Тогда
		// Попробуем подключить сканер штрихкода
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьСканерШКЗавершение", ЭтотОбъект); 
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, "СканерШтрихкода");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекущийКод = Параметр[0];
			Иначе
				ТекущийКод = Параметр[1][1];
			КонецЕсли;
			
			ДанныеОбъекта = Новый Структура("АдресЭлектроннойПочты, ОтправлятьEmail, НомерТелефона, ОтправлятьSMS");
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
			ЗаполнитьКонтактнуюИнформациюПоШтрихкоду(ДанныеОбъекта, ТекущийКод);
			ЗаполнитьЗначенияСвойств(ЭтаФорма, ДанныеОбъекта);
			
			УстановитьВидимостьДоступностьЭлементов();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииЗавершение", ЭтотОбъект);
		
		ТекстПредупреждения = НСтр("ru = 'Вы уверены, что хотите выйти без печати чека?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет, 60);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// ПодключаемоеОборудование
	Если СканерШтрихкодаПодключен И НЕ ЗавершениеРаботы Тогда
		ТипыПО = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("СканерШтрихкода");
		ОповещенияПриОтключении = Новый ОписаниеОповещения("ОтключитьСканерШКЗавершение", ЭтотОбъект); 
		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(ОповещенияПриОтключении, УникальныйИдентификатор, ТипыПО);
	КонецЕсли;
	//Конец  ПодключаемоеОборудование
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Телефон для информирования'"));
	ПараметрыФормы.Вставить("ЗначенияПолей", НомерТелефона);
	ПараметрыФормы.Вставить("ВидКонтактнойИнформации", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводНомераТелефонаЗавершение", ЭтотОбъект, Новый Структура);
	
	ОткрытьФорму("Обработка.ВводКонтактнойИнформации.Форма.ВводТелефона", ПараметрыФормы,,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОтправитьНаEmail(Команда)
	Если ЗначениеЗаполнено(НомерТелефона) Тогда
		Ответ = Ждать ВопросАсинх(НСтр("ru = 'Для чека указан номер телефона покупателя. 
		|Очистить его и отправить чек на электронную почту?'"), РежимДиалогаВопрос.ДаНет,15);
		
		Если Ответ = КодВозвратаДиалога.Нет  Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводEmailЗавершение", ЭтотОбъект, Новый Структура);	
	ПоказатьВводСтроки(ОписаниеОповещения, АдресЭлектроннойПочты, НСтр("ru = 'E-mail для информирования'"));
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПродолжить(Команда)
	
	Если Не Печать И Не ЗначениеЗаполнено(АдресЭлектроннойПочты) И НЕ ЗначениеЗаполнено(НомерТелефона) Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не выбран способ предоставление чека.'"));
	Иначе
		РезультатВыполнения = Новый Структура();
		РезультатВыполнения.Вставить("Печать", Печать);
		РезультатВыполнения.Вставить("ПечататьТоварныйЧек", ПечататьТоварныйЧек);
		РезультатВыполнения.Вставить("ПечататьТоварныйЧекПринтерЧеков", ПечататьТоварныйЧекПринтерЧеков);
		РезультатВыполнения.Вставить("СуммаОплаты", СуммаОплаты);

		Если ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда 
			РезультатВыполнения.Вставить("ПокупательEmail", АдресЭлектроннойПочты);
		КонецЕсли;
		Если ЗначениеЗаполнено(НомерТелефона) Тогда 
			РезультатВыполнения.Вставить("ПокупательНомер", НомерТелефона);
		КонецЕсли;
		
		РезультатВыполнения.Вставить("ОтправлятьEmailСредствами1С", ОтправлятьEmailСредствами1С);
		РезультатВыполнения.Вставить("ОтправлятьSMSСредствами1С", ОтправлятьSMSСредствами1С);
		Закрыть(РезультатВыполнения); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияОтмена(Команда)
	
	Закрыть(Неопределено); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаОплатыИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СуммаОплатыЧисло = Число(Текст);
	РассчитатьСдачу(СуммаОплатыЧисло);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СуммаСдача", "Видимость", НЕ (ЭтоВозврат Или БезналичныйРасчет));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СуммаОплаты", "Видимость", НЕ (ЭтоВозврат Или БезналичныйРасчет));
	
	Элементы.ОтправитьНаEmail.ЦветФона = ?(ЗначениеЗаполнено(АдресЭлектроннойПочты), ЦветПомеченнойКнопки, ЦветОбычнойКнопки);
	Элементы.ОтправитьSMS.ЦветФона = ?(ЗначениеЗаполнено(НомерТелефона), ЦветПомеченнойКнопки, ЦветОбычнойКнопки);
	
КонецПроцедуры // УстановитьВидимостьДоступностьЭлементов()

&НаКлиенте
Процедура РассчитатьСдачу(СуммаОплатыЧисло)
	СуммаСдача = Макс(СуммаОплатыЧисло - СуммаДокумента, 0);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоКорректныйТелефон(СтруктураКИ)
	СтруктураТелефона = РаботаСАдресами.ПредыдущаяСтруктураКонтактнойИнформацииXML(СтруктураКИ.КонтактнаяИнформация, СтруктураКИ.Вид);
	
	НомерТелефонаБезПрефикса = ОбщегоНазначенияБПКлиентСервер.ОставитьВСтрокеТолькоЦифры(СтруктураТелефона.КодСтраны + СтруктураТелефона.КодГорода+СтруктураТелефона.НомерТелефона);
	
	Возврат ТелефонСоответствуетТребованиям(НомерТелефонаБезПрефикса);
КонецФункции 

&НаКлиенте
Процедура ВводНомераТелефонаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если Значение <> Неопределено Тогда
		Если НЕ ЭтоКорректныйТелефон(Значение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неверный формат номера для информирования'"));
		Иначе
			НомерТелефона = Значение.КонтактнаяИнформация;
			АдресЭлектроннойПочты   = "";
		КонецЕсли; 
	КонецЕсли; 
	
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВводEmailЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если ПустаяСтрока(Значение) Тогда 
		АдресЭлектроннойПочты = Значение;
	ИначеЕсли ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Значение) Тогда 
		АдресЭлектроннойПочты= Значение;
		НомерТелефона = "";
	Иначе
		ТекстОшибки = НСтр("ru='Указан некорректный адрес электронной почты.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ОтправитьНаEmail");
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьСканерШКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	СканерШтрихкодаПодключен = РезультатВыполнения.Результат;

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьСканерШКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При отключении оборудования произошла ошибка: ""%1"".'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		СканерШтрихкодаПодключен = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьКонтактнуюИнформациюПоШтрихкоду(ДанныеОбъекта, Знач Штрихкод) Экспорт
	Штрихкод = СокрЛП(Штрихкод);

	Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Штрихкод) Тогда
		ДанныеОбъекта.АдресЭлектроннойПочты = Штрихкод;
		ДанныеОбъекта.ОтправлятьEmail       = Истина;
	Иначе
		ТелефонБезПрефикса = ?(Лев(Штрихкод, 1) = "+", Сред(Штрихкод, 2), Штрихкод);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТелефонБезПрефикса) 
			И ТелефонСоответствуетТребованиям(ТелефонБезПрефикса) Тогда
			
			ДанныеОбъекта.НомерТелефона = ТелефонБезПрефикса;
			ДанныеОбъекта.ОтправлятьSMS = Истина;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ТелефонСоответствуетТребованиям(Знач Телефон) Экспорт
	
	//Телефон = ТолькоЦифры(СокрЛП(Телефон));
	//996700600500
	Телефон = ОбщегоНазначенияБПКлиентСервер.ОставитьВСтрокеТолькоЦифры(Телефон);

	КодСтраны = Лев(Телефон, 3);
	КодОператора = Сред(Телефон, 4, 3);
	Номер = Сред(Телефон, 5);
	
	Если ПустаяСтрока(КодСтраны) Или ПустаяСтрока(КодОператора) Или ПустаяСтрока(Номер) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если СтрДлина(Телефон) > 15 Тогда
		// Номер телефона слишком длинный
		Возврат Ложь;
	КонецЕсли;
	
	Если КодСтраны = "996" Тогда
		Если СтрДлина(Номер) > 6 Тогда
			// В КР номер телефона не может быть больше 6 цифр
			Возврат Ложь;
		КонецЕсли;
		Если СтрДлина(КодОператора) <> 3 Тогда
			// В КР номера мобильных телефонов должны содержать 3 цифры
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

