#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой БалансТитульныйЛист
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьТитулБаланс(МассивОбъектов, ОбъектыПечати)
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	РегламентированныйОтчет.Ссылка КАК Ссылка,
		|	РегламентированныйОтчет.Номер КАК Номер,
		|	РегламентированныйОтчет.Дата КАК Дата,
		|	РегламентированныйОтчет.НачалоПериода КАК НачалоПериода,
		|	РегламентированныйОтчет.КонецПериода КАК КонецПериода,
		|	РегламентированныйОтчет.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
		|			ТОГДА &ЕдиницаОтчета
		|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
		|	КОНЕЦ КАК ЕдиницаОтчета
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаОтчета", НСтр("ru = 'Сомы'"));
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РегламентированныйОтчет_ТитулБаланс";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ТитулБаланс");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		// Период.
		ДанныеПечати.Вставить("НачалоПериода", Формат(Шапка.НачалоПериода, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("КонецПериода", Формат(Шапка.КонецПериода, "ДЛФ=ДД"));
		
		Если ЗначениеЗаполнено(Шапка.Организация) Тогда
			// Заголовок.
			СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
			
			ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", СведенияОбОрганизации.НаименованиеПолное);		
			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);		
			ДанныеПечати.Вставить("ОКПО", СведенияОбОрганизации.ОКПО);		
			ДанныеПечати.Вставить("ГКЭД", СведенияОбОрганизации.КодГКЭД);		
			ДанныеПечати.Вставить("ГКФС", СведенияОбОрганизации.КодПравовойФормы);		
			ДанныеПечати.Вставить("ВидДеятельности", СведенияОбОрганизации.НаименованиеГКЭД);		
			ДанныеПечати.Вставить("ОрганУправления", СведенияОбОрганизации.ОрганУправления);		
			ДанныеПечати.Вставить("Адрес", СведенияОбОрганизации.АдрЮР);		
			ДанныеПечати.Вставить("НомерТелефона", СведенияОбОрганизации.Тел);
		КонецЕсли;	
	
		ДанныеПечати.Вставить("ЕдиницаОтчета", Шапка.ЕдиницаОтчета);
		
		// Подписи.
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Главбух", Руководители.ГлавныйБухгалтер);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой Баланс
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьБаланс(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	РегламентированныйОтчет.Ссылка КАК Ссылка,
		|	РегламентированныйОтчет.Дата КАК Дата,
		|	РегламентированныйОтчет.Организация КАК Организация,
		|	РегламентированныйОтчет.СтрокиОтчета.(
		|		КодСтроки КАК КодСтроки,
		|		НаименованиеСтроки КАК НаименованиеСтроки,
		|		НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|		Сумма КАК Сумма,
		|		СуммаПредПериод КАК СуммаПредПериод,
		|		ЭтоЗаголовок КАК ЭтоЗаголовок
		|	) КАК СтрокиОтчета
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РегламентированныйОтчет_Баланс";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_Баланс");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		
		// Подписи.
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", Руководители.ГлавныйБухгалтер);
		ДанныеПечати.Вставить("ДатаОтчета", Формат(Шапка.Дата,"ДЛФ=ДД"));
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.СтрокиОтчета.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					Если СтрокаОтчета.ЭтоЗаголовок Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаГруппа");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					КонецЕсли;	
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					
					// Очистка кода строки у заголовков.
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета.Параметры.Заполнить(Новый Структура("КодСтроки", ""));
					КонецЕсли;	

					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОПУ
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОПУ(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	РегламентированныйОтчет.Ссылка КАК Ссылка,
		|	РегламентированныйОтчет.Номер КАК Номер,
		|	РегламентированныйОтчет.Дата КАК Дата,
		|	РегламентированныйОтчет.НачалоПериода КАК НачалоПериода,
		|	РегламентированныйОтчет.КонецПериода КАК КонецПериода,
		|	РегламентированныйОтчет.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
		|			ТОГДА &ЕдиницаОтчета
		|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
		|	КОНЕЦ КАК ЕдиницаОтчета,
		|	РегламентированныйОтчет.СтрокиОтчета.(
		|		КодСтроки КАК КодСтроки,
		|		НаименованиеСтроки КАК НаименованиеСтроки,
		|		НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|		Сумма КАК Сумма,
		|		СуммаПредПериод КАК СуммаПредПериод,
		|		ЭтоЗаголовок КАК ЭтоЗаголовок
		|	) КАК СтрокиОтчета
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаОтчета", НСтр("ru = 'Сомы'"));
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РегламентированныйОтчет_ОПУ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ОПУ");
		
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		// Период.
		ДанныеПечати.Вставить("НачалоПериода", Формат(Шапка.НачалоПериода, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("КонецПериода", Формат(Шапка.КонецПериода, "ДЛФ=ДД"));
		
		Если ЗначениеЗаполнено(Шапка.Организация) Тогда
			// Заголовок.
			СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
			
			ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", СведенияОбОрганизации.НаименованиеПолное);		
			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);		
			ДанныеПечати.Вставить("ОКПО", СведенияОбОрганизации.ОКПО);		
			ДанныеПечати.Вставить("ГКЭД", СведенияОбОрганизации.КодГКЭД);		
			ДанныеПечати.Вставить("ГКФС", СведенияОбОрганизации.КодПравовойФормы);		
			ДанныеПечати.Вставить("ВидДеятельности", СведенияОбОрганизации.НаименованиеГКЭД);		
			ДанныеПечати.Вставить("ОрганУправления", СведенияОбОрганизации.ОрганУправления);		
			ДанныеПечати.Вставить("Адрес", СведенияОбОрганизации.АдрЮР);		
			ДанныеПечати.Вставить("НомерТелефона", СведенияОбОрганизации.Тел);		
		КонецЕсли;
			
		ДанныеПечати.Вставить("ЕдиницаОтчета", Шапка.ЕдиницаОтчета);		

		// Подписи.
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", Руководители.ГлавныйБухгалтер);		
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.СтрокиОтчета.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда			
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаГруппа");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					КонецЕсли;	
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					
					// Очистка кода строки у заголовков.
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета.Параметры.Заполнить(Новый Структура("КодСтроки", ""));
					КонецЕсли;	

					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОДДС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОДДС(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	РегламентированныйОтчет.Ссылка КАК Ссылка,
		|	РегламентированныйОтчет.Номер КАК Номер,
		|	РегламентированныйОтчет.Дата КАК Дата,
		|	РегламентированныйОтчет.НачалоПериода КАК НачалоПериода,
		|	РегламентированныйОтчет.КонецПериода КАК КонецПериода,
		|	РегламентированныйОтчет.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
		|			ТОГДА &ЕдиницаОтчета
		|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
		|	КОНЕЦ КАК ЕдиницаОтчета,
		|	РегламентированныйОтчет.СтрокиОтчета.(
		|		КодСтроки КАК КодСтроки,
		|		НаименованиеСтроки КАК НаименованиеСтроки,
		|		НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|		Сумма КАК Сумма,
		|		СуммаПредПериод КАК СуммаПредПериод,
		|		ЭтоЗаголовок КАК ЭтоЗаголовок
		|	) КАК СтрокиОтчета
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаОтчета", НСтр("ru = 'Сомы'"));
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РегламентированныйОтчет_ОДДС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ОДДС");

	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		// Период.
		ДанныеПечати.Вставить("НачалоПериода", Формат(Шапка.НачалоПериода, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("КонецПериода", Формат(Шапка.КонецПериода, "ДЛФ=ДД"));
		
		Если ЗначениеЗаполнено(Шапка.Организация) Тогда
			// Заголовок.
			СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
			
			ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", СведенияОбОрганизации.НаименованиеПолное);		
			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);		
			ДанныеПечати.Вставить("ОКПО", СведенияОбОрганизации.ОКПО);		
			ДанныеПечати.Вставить("ГКЭД", СведенияОбОрганизации.КодГКЭД);		
			ДанныеПечати.Вставить("ГКФС", СведенияОбОрганизации.КодПравовойФормы);		
			ДанныеПечати.Вставить("ВидДеятельности", СведенияОбОрганизации.НаименованиеГКЭД);		
			ДанныеПечати.Вставить("ОрганУправления", СведенияОбОрганизации.ОрганУправления);		
			ДанныеПечати.Вставить("Адрес", СведенияОбОрганизации.АдрЮР);		
			ДанныеПечати.Вставить("НомерТелефона", СведенияОбОрганизации.Тел);
		КонецЕсли;	

		ДанныеПечати.Вставить("ЕдиницаОтчета", Шапка.ЕдиницаОтчета);		

		// Подписи.
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", Руководители.ГлавныйБухгалтер);		
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.СтрокиОтчета.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					Если СтрокаОтчета.ЭтоЗаголовок 
						И (СтрокаОтчета.КодСтроки = "008" ИЛИ СтрокаОтчета.КодСтроки = "191" ИЛИ СтрокаОтчета.КодСтроки = "391") Тогда 
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаГруппа");
						
					ИначеЕсли СтрокаОтчета.КодСтроки = "040" ИЛИ СтрокаОтчета.КодСтроки = "120" ИЛИ СтрокаОтчета.КодСтроки = "270"
						ИЛИ СтрокаОтчета.КодСтроки = "330" ИЛИ СтрокаОтчета.КодСтроки = "460" ИЛИ СтрокаОтчета.КодСтроки = "510" Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКурсивом");
						
					ИначеЕсли СтрокаОтчета.КодСтроки = "590" ИЛИ СтрокаОтчета.КодСтроки = "700" Тогда	
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПолужирным");
						
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					КонецЕсли;	
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					
					// Очистка кода строки у заголовков.
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета.Параметры.Заполнить(Новый Структура("КодСтроки", ""));
					КонецЕсли;	
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОИК
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОИК(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	РегламентированныйОтчет.Ссылка КАК Ссылка,
		|	РегламентированныйОтчет.Номер КАК Номер,
		|	РегламентированныйОтчет.Дата КАК Дата,
		|	РегламентированныйОтчет.НачалоПериода КАК НачалоПериода,
		|	РегламентированныйОтчет.КонецПериода КАК КонецПериода,
		|	РегламентированныйОтчет.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА РегламентированныйОтчет.ЕдиницаОтчета = """"
		|			ТОГДА &ЕдиницаОтчета
		|		ИНАЧЕ РегламентированныйОтчет.ЕдиницаОтчета
		|	КОНЕЦ КАК ЕдиницаОтчета,
		|	РегламентированныйОтчет.СтрокиОтчета.(
		|		КодСтроки КАК КодСтроки,
		|		НаименованиеСтроки КАК НаименованиеСтроки,
		|		НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|		СуммаУставныйКапитал КАК СуммаУставныйКапитал,
		|		СуммаПрочийКапитал КАК СуммаПрочийКапитал,
		|		СуммаНераспределеннаяПрибыль КАК СуммаНераспределеннаяПрибыль,
		|		СуммаИтого КАК СуммаИтого,
		|		ЭтоЗаголовок КАК ЭтоЗаголовок
		|	) КАК СтрокиОтчета
		|ИЗ
		|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
		|ГДЕ
		|	РегламентированныйОтчет.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЕдиницаОтчета", НСтр("ru = 'Сомы'"));
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "РегламентированныйОтчет_ОИК";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РегламентированныйОтчет.ПФ_MXL_ОИК");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		// Период.
		ДанныеПечати.Вставить("НачалоПериода", Формат(Шапка.НачалоПериода, "ДЛФ=ДД"));
		ДанныеПечати.Вставить("КонецПериода", Формат(Шапка.КонецПериода, "ДЛФ=ДД"));
		
		Если ЗначениеЗаполнено(Шапка.Организация) Тогда
			// Заголовок.
			СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
			
			ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", СведенияОбОрганизации.НаименованиеПолное);		
			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);		
			ДанныеПечати.Вставить("ОКПО", СведенияОбОрганизации.ОКПО);		
			ДанныеПечати.Вставить("ГКЭД", СведенияОбОрганизации.КодГКЭД);		
			ДанныеПечати.Вставить("ГКФС", СведенияОбОрганизации.КодПравовойФормы);		
			ДанныеПечати.Вставить("ВидДеятельности", СведенияОбОрганизации.НаименованиеГКЭД);		
			ДанныеПечати.Вставить("ОрганУправления", СведенияОбОрганизации.ОрганУправления);		
			ДанныеПечати.Вставить("Адрес", СведенияОбОрганизации.АдрЮР);		
			ДанныеПечати.Вставить("НомерТелефона", СведенияОбОрганизации.Тел);		
		КонецЕсли;
			
		ДанныеПечати.Вставить("ЕдиницаОтчета", Шапка.ЕдиницаОтчета);		

		// Подписи.
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("Руководитель", Руководители.Руководитель);
		ДанныеПечати.Вставить("Главбух", Руководители.ГлавныйБухгалтер);		
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаТаблицы");
		МассивОбластейМакета.Добавить("Строка");
		МассивОбластейМакета.Добавить("Подвал");
		
		СтрокаОтчета = Шапка.СтрокиОтчета.Выбрать();
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "Строка" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "Строка" Тогда 
				Пока СтрокаОтчета.Следующий() Цикл
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета = Макет.ПолучитьОбласть("СтрокаГруппа");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					КонецЕсли;	
					ОбластьМакета.Параметры.Заполнить(СтрокаОтчета);
					
					// Очистка кода строки у заголовков.
					Если СтрокаОтчета.ЭтоЗаголовок Тогда 
						ОбластьМакета.Параметры.Заполнить(Новый Структура("КодСтроки", ""));
					КонецЕсли;	

					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьБаланс") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьБаланс", 
		НСтр("ru = 'Баланс'"), 
		ПечатьБаланс(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_Баланс");
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьОПУ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьОПУ", 
		НСтр("ru = 'Отчет о прибылях и убытках'"), 
		ПечатьОПУ(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ОПУ");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьОДДС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьОДДС", 
		НСтр("ru = 'Отчет о движении денежных средств'"), 
		ПечатьОДДС(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ОДДС");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьОИК") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьОИК", 
		НСтр("ru = 'Отчет об изменениях в собственном капитале'"), 
		ПечатьОИК(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ОИК");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечататьТитулБаланс") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечататьТитулБаланс", 
		НСтр("ru = 'Баланс (титульный лист)'"), 
		ПечатьТитулБаланс(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.РегламентированныйОтчет.ПФ_MXL_ТитулБаланс");
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьБаланс";
	КомандаПечати.Представление = НСтр("ru = 'Баланс'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОтчета",
		Перечисления.ВидыРегламентированныхОтчетов.Баланс);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьОПУ";
	КомандаПечати.Представление = НСтр("ru = 'Отчет о прибылях и убытках'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;	
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОтчета",
		Перечисления.ВидыРегламентированныхОтчетов.ОПУ);

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьОДДС";
	КомандаПечати.Представление = НСтр("ru = 'Отчет о движении денежных средств'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОтчета",
		Перечисления.ВидыРегламентированныхОтчетов.ОДДС);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьОИК";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об изменениях в собственном капитале'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 4;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОтчета",
		Перечисления.ВидыРегламентированныхОтчетов.ОИК);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечататьТитулБаланс";
	КомандаПечати.Представление = НСтр("ru = 'Баланс (титульный лист)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 5;
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОтчета",
		Перечисления.ВидыРегламентированныхОтчетов.Баланс);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли