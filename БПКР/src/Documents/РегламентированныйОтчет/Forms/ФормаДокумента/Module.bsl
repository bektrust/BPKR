
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
// В процедуре осуществляется
// - инициализация реквизитов формы,
// - установка параметров функциональных опций формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	
	ИспользоватьСтатьиДвиженияДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств");
	УказыватьСтатьиДДСДляВнутреннихОборотов = Константы.УказыватьСтатьиДДСДляВнутреннихОборотов.Получить();
	
	ИмяТабличнойЧасти = "СтрокиОтчета";

	УстановитьУсловноеОформление();
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	// РаботаСФормами
	РаботаСФормамиСервер.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменений
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменений
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом 
	
КонецПроцедуры

// Процедура - обработчик события ПриОткрытии.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	
	// РаботаСФормами
	РаботаСФормамиСервер.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец РаботаСФормами
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписи.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля ввода Организация.
//
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	// Обработка события изменения организации.
	Объект.Номер = "";
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		БухгалтерскийУчетВызовСервера.УчетнаяПолитикаСуществует(Объект.Организация, ДатаДокумента, Истина, Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ВидОтчета.
//
&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	// Очистить пред.настройки.
	Объект.СтрокиОтчета.Очистить();
	Объект.НастройкиСтрок.Очистить();
	Объект.НастройкиСтрокОДДС.Очистить();
	Объект.НастройкиСтрокОДДСПоСтатьям.Очистить();
	Объект.Расшифровка.Очистить();
	
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Настройка.
//
&НаКлиенте
Процедура НастройкаПриИзменении(Элемент)
	ЗаполнитьНастройки();
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода ПоказатьНастройки.
//
&НаКлиенте
Процедура ПоказатьНастройкиПриИзменении(Элемент)
	// Установить видимость и доступность элементов формы
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВсеСтрокиПриИзменении(Элемент)
	Если ВсеСтроки Тогда 
		Элементы.НастройкиСтрок.ОтборСтрок = Неопределено;
		Элементы.НастройкиСтрокОДДС.ОтборСтрок = Неопределено;
		Элементы.НастройкиСтрокОДДСПоСтатьям.ОтборСтрок = Неопределено;
		Элементы.Расшифровка.ОтборСтрок = Неопределено;
	Иначе 
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрок");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДС");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДСПоСтатьям");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "Расшифровка");
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

// Процедура - обработчик события ПриАктивизации строки табличной части СтрокиОтчета.
//
&НаКлиенте
Процедура СтрокиОтчетаПриАктивизацииСтроки(Элемент)
	Если НЕ ВсеСтроки Тогда
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрок");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДС");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДСПоСтатьям");
		БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "Расшифровка");
	КонецЕсли;	
КонецПроцедуры

// Процедура - обработчик события ПередУдалением строки табличной части СтрокиОтчета.
//
&НаКлиенте
Процедура СтрокиОтчетаПередУдалением(Элемент, Отказ)
	БухгалтерскийУчетКлиент.УдалитьСтрокиПодчиненнойТабличнойЧасти(ЭтаФорма, "НастройкиСтрок");
	БухгалтерскийУчетКлиент.УдалитьСтрокиПодчиненнойТабличнойЧасти(ЭтаФорма, "НастройкиСтрокОДДС");
	БухгалтерскийУчетКлиент.УдалитьСтрокиПодчиненнойТабличнойЧасти(ЭтаФорма, "НастройкиСтрокОДДСПоСтатьям");
	БухгалтерскийУчетКлиент.УдалитьСтрокиПодчиненнойТабличнойЧасти(ЭтаФорма, "Расшифровка");
КонецПроцедуры

// Процедура - обработчик события ПриНачалеРедактирования строки табличной части СтрокиОтчета.
//
&НаКлиенте
Процедура СтрокиОтчетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		БухгалтерскийУчетКлиент.ДобавитьКлючСвязиВСтрокуТабличнойЧасти(ЭтаФорма);
		
		Если НЕ ВсеСтроки Тогда
			БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрок");
			БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДС");
			БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "НастройкиСтрокОДДСПоСтатьям");
			БухгалтерскийУчетКлиент.УстановитьОтборНаПодчиненнуюТабличнуюЧасть(ЭтаФорма, "Расшифровка");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события ПередНачаломДобавления строки табличной части НастройкиСтрок.
//
&НаКлиенте
Процедура НастройкиСтрокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = БухгалтерскийУчетКлиент.ПередНачаломДобавленияВПодчиненнуюТабличнуюЧасть(ЭтаФорма, Элемент.Имя);
	
	Если НЕ Отказ И ВсеСтроки Тогда 
		ТекстСообщения = НСтр("ru = 'Для добавления строки необходимо отключить режим ""Все строки"".'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
КонецПроцедуры

// Процедура - обработчик события ПриНачалеРедактирования строки табличной части НастройкиСтрок.
//
&НаКлиенте
Процедура НастройкиСтрокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		БухгалтерскийУчетКлиент.ДобавитьКлючСвязиВСтрокуПодчиненнойТабличнойЧасти(ЭтаФорма, Элемент.Имя);
		
		СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
		СтрокаТабличнойЧасти.КодСтроки = Элементы.СтрокиОтчета.ТекущиеДанные.КодСтроки;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события НачалоВыбора ячейки Формула.
//
&НаКлиенте
Процедура НастройкиСтрокФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.ВидОтчета = ПредопределенноеЗначение("Перечисление.ВидыРегламентированныхОтчетов.Баланс") Тогда 
		// Баланс.
		// Заполнение массива.
		МассивФормул = Новый Массив;
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоДт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоКт"));
		ФиксированныйМассив = Новый ФиксированныйМассив(МассивФормул);
		// Добавление параметра.
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", ФиксированныйМассив);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	ИначеЕсли Объект.ВидОтчета = ПредопределенноеЗначение("Перечисление.ВидыРегламентированныхОтчетов.ОПУ") Тогда 	
		// ОПУ.
		// Заполнение массива.
		МассивФормул = Новый Массив;
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.ОборотыДт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.ОборотыКт"));
		ФиксированныйМассив = Новый ФиксированныйМассив(МассивФормул);
		// Добавление параметра.
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", ФиксированныйМассив);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	ИначеЕсли Объект.ВидОтчета = ПредопределенноеЗначение("Перечисление.ВидыРегламентированныхОтчетов.ОИК") Тогда 	
		// ОИК.
		// Заполнение массива.
		МассивФормул = Новый Массив;
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.ОборотыДт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.ОборотыКт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоНачальноеДт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоНачальноеКт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоКонечноеДт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.СальдоКонечноеКт"));
		МассивФормул.Добавить(ПредопределенноеЗначение("Перечисление.Формулы.ОборотыДтКт"));
		ФиксированныйМассив = Новый ФиксированныйМассив(МассивФормул);
		// Добавление параметра.
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", ФиксированныйМассив);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;

	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыФормы = Новый Структура("НачалоПериода, КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормы, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода,КонецПериода");
	
	Объект.НачалоПредПериода = ДобавитьМесяц(РезультатВыбора.НачалоПериода, -12);
	Объект.КонецПредПериода = ДобавитьМесяц(РезультатВыбора.КонецПериода, -12);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредПериод(Команда)
	
	ПараметрыФормы = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПредПериода, Объект.КонецПредПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПредПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормы, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоПредПериода = РезультатВыбора.НачалоПериода;
	Объект.КонецПредПериода = РезультатВыбора.КонецПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросРассчитать", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Данные отчета будут перезаполнены. Продолжить выполнение операции?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНастройку(Команда)
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОтчета) Тогда
		ТекстСообщения = НСтр("ru = 'Для проверки настройки необходимо заполнить вид отчета.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.ВидОтчета",, Отказ);	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Настройка) Тогда
		ТекстСообщения = НСтр("ru = 'Для проверки настройки необходимо заполнить настройку.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.Настройка",, Отказ);	
	КонецЕсли;	
	
	Если Объект.ВидОтчета = ПредопределенноеЗначение("Перечисление.ВидыРегламентированныхОтчетов.ОИК") Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Для настройки с видом отчета ""%1"" проверка не предусмотрена.'"),Объект.ВидОтчета);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.ВидОтчета",, Отказ);	
	КонецЕсли;	
	
	Если Отказ Тогда
		Возврат;		
	КонецЕсли;	

	МассивСообщений = ПроверитьНастройкиНаСервере();
	Если МассивСообщений.Количество() = 0 Тогда 
		ТекстОповещения = НСтр("ru = 'Проверка выполнена'");
		ТекстПояснения = НСтр("ru = 'Ошибок не обнаружено.'");
		ПоказатьОповещениеПользователя(ТекстОповещения,, ТекстПояснения, БиблиотекаКартинок.Информация32);
	Иначе 	
		Для Каждого СтрокаМассива Из МассивСообщений Цикл		
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрокаМассива);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаДДС(Команда)
	
	Отказ = Ложь;
	
	СтрокаТабличнойЧасти = Элементы.СтрокиОтчета.ТекущиеДанные;
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана строка, по которой требуется сформировать расшифровку.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.СтрокиОтчета",, Отказ);
	КонецЕсли;
	Если Отказ Тогда
		Возврат;		
	КонецЕсли;
	
	КодСтроки = СтрокаТабличнойЧасти.КодСтроки;
	ОтборСтрок = Новый Структура("КодСтроки", КодСтроки);
	СтрокиНастройкиСтрокОДДСПоСтатьям = Объект.НастройкиСтрокОДДСПоСтатьям.НайтиСтроки(ОтборСтрок);
	Если СтрокиНастройкиСтрокОДДСПоСтатьям.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(
		НСтр("ru = 'Для выбраной строки с кодом ""%1"" в настройках строк отчета ДДС нет соответсвующей строки ДДС'"), КодСтроки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.НастройкиСтрокОДДСПоСтатьям",, Отказ);		
		Возврат;
	КонецЕсли;
	
	СтатьяДвиженияДенежныхСредств = СтрокиНастройкиСтрокОДДСПоСтатьям[0].СтатьяДвиженияДенежныхСредств;
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредств);
	
	ОтборСтатьяДвиженияДенежныхСредств = Новый Структура;
	ОтборСтатьяДвиженияДенежныхСредств.Вставить("Поле",         "СтатьяДвиженияДенежныхСредств");
	ОтборСтатьяДвиженияДенежныхСредств.Вставить("ВидСравнения", ВидСравненияКомпоновкиДанных.Равно);
	ОтборСтатьяДвиженияДенежныхСредств.Вставить("Значение",     СтатьяДвиженияДенежныхСредств);
	
	ОтборыОтчета = Новый Массив;
	ОтборыОтчета.Добавить(ОтборСтатьяДвиженияДенежныхСредств);	
	
	НеобязательныеПараметры = Новый Структура();
	НеобязательныеПараметры.Вставить("ГруппировкаОтчета", 	Неопределено);
	НеобязательныеПараметры.Вставить("Отборы", 				ОтборыОтчета);
	НеобязательныеПараметры.Вставить("РеквизитыОтчета", 	Неопределено);
	НеобязательныеПараметры.Вставить("Показатели", 			Неопределено);
	НеобязательныеПараметры.Вставить("КлючВарианта", 		Неопределено);
	НеобязательныеПараметры.Вставить("НачалоПериода", 		НачалоДня(Объект.НачалоПериода));
	НеобязательныеПараметры.Вставить("КонецПериода", 		КонецДня(Объект.КонецПериода));
	НеобязательныеПараметры.Вставить("ВнутренниеОбороты", 	Ложь);
	
	ОткрытьОтчет("Отчет.РасшифровкаДвиженияДенежныхСредств.Форма", НеобязательныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольЗаполненияСтатейДДС(Команда)

	НеобязательныеПараметры = Новый Структура();
	НеобязательныеПараметры.Вставить("ГруппировкаОтчета", 	Неопределено);
	НеобязательныеПараметры.Вставить("Отборы", 				Неопределено);
	НеобязательныеПараметры.Вставить("РеквизитыОтчета", 	Неопределено);
	НеобязательныеПараметры.Вставить("Показатели", 			Неопределено);
	НеобязательныеПараметры.Вставить("КлючВарианта", 		Неопределено);
	НеобязательныеПараметры.Вставить("НачалоПериода", 		НачалоДня(Объект.НачалоПериода));
	НеобязательныеПараметры.Вставить("КонецПериода", 		КонецДня(Объект.КонецПериода));
	НеобязательныеПараметры.Вставить("ВнутренниеОбороты", 	Ложь);
	
	ОткрытьОтчет("Отчет.КонтрольЗаполненияСтатейДвиженияДенежныхСредств.Форма", НеобязательныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчет(Отчет, НеобязательныеПараметры)
	
	ПользовательскиеНастройки = ПользовательскиеНастройкиДляРасшифровки(НеобязательныеПараметры.НачалоПериода, НеобязательныеПараметры.КонецПериода);
	ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
	
	Если НеобязательныеПараметры.ГруппировкаОтчета <> Неопределено И ТипЗнч(НеобязательныеПараметры.ГруппировкаОтчета) = Тип("Массив") Тогда
		ДополнительныеСвойства.Вставить("Группировка", НеобязательныеПараметры.ГруппировкаОтчета);
	КонецЕсли;
	
	Если ТипЗнч(НеобязательныеПараметры.Отборы) = Тип("Массив") Тогда
		
		НастройкаОтбора = ПользовательскиеНастройки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		НастройкаОтбора.ИдентификаторПользовательскойНастройки = "Отбор";
		Для Каждого Отбор Из НеобязательныеПараметры.Отборы Цикл
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(НастройкаОтбора, Отбор.Поле, Отбор.Значение, Отбор.ВидСравнения);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипЗнч(НеобязательныеПараметры.РеквизитыОтчета) = Тип("Структура") Тогда
		Для Каждого РеквизитОтчета Из НеобязательныеПараметры.РеквизитыОтчета Цикл
			ДополнительныеСвойства.Вставить(РеквизитОтчета.Ключ, РеквизитОтчета.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(НеобязательныеПараметры.Показатели) = Тип("Массив") Тогда
		Для Каждого Показатель Из НеобязательныеПараметры.Показатели Цикл
			ДополнительныеСвойства.Вставить(Показатель, Истина);
		КонецЦикла;
	КонецЕсли;
	
	Если НеобязательныеПараметры.КлючВарианта <> Неопределено Тогда
		ДополнительныеСвойства.Вставить("КлючВарианта", НеобязательныеПараметры.КлючВарианта);
	КонецЕсли;
	
	ЗаполняемыеНастройки = Новый Структура();
	ЗаполняемыеНастройки.Вставить("Показатели", 	 Ложь);
	ЗаполняемыеНастройки.Вставить("Группировка", 	 Истина);
	ЗаполняемыеНастройки.Вставить("Отбор", 			 Истина);
	ЗаполняемыеНастройки.Вставить("ВыводимыеДанные", Ложь);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("РежимРасшифровки"         , Истина);
	ПараметрыОтчета.Вставить("ВидРасшифровки"           , 2);
	ПараметрыОтчета.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
	ПараметрыОтчета.Вставить("ЗаполняемыеНастройки", ЗаполняемыеНастройки);

	
	ОткрытьФорму(Отчет, ПараметрыОтчета, ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ПользовательскиеНастройкиДляРасшифровки(НачалоПериода = Неопределено, КонецПериода = Неопределено)
	
	// Инициализация пользовательских настроек
	// Добавим в настройки все параметры которые могут использоваться в отчетах руководителю
	
	ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	
	ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
	ДополнительныеСвойства.Вставить("РежимРасшифровки", Истина);
	ДополнительныеСвойства.Вставить("Организация", Объект.Организация);
	ДополнительныеСвойства.Вставить("Период", КонецПериода); //Период);
	
	Если НачалоПериода <> Неопределено Тогда
		ДополнительныеСвойства.Вставить("НачалоПериода", НачалоПериода);
	КонецЕсли;
	Если КонецПериода <> Неопределено Тогда
		ДополнительныеСвойства.Вставить("КонецПериода", КонецПериода);
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ВнутренниеОбороты", УказыватьСтатьиДДСДляВнутреннихОборотов);
	
	// 
	ВариантОкругления = 0;
	//
	
	Если ВариантОкругления = 1000 Тогда
		
		// Установим формат цифр для рублевых сумм
		УсловноеОформлениеФормы = ПользовательскиеНастройки.Элементы.Добавить(Тип("УсловноеОформлениеКомпоновкиДанных"));
		УсловноеОформлениеФормы.ИдентификаторПользовательскойНастройки = "УсловноеОформление";
		
		ЭлементУсловногоОформления = УсловноеОформлениеФормы.Элементы.Добавить();
		ЭлементУсловногоОформления.Представление = НСтр("ru = 'Суммы в тыс.'");
		ЭлементУсловногоОформления.Использование = Истина;
		
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(ЭлементУсловногоОформления.Оформление, "Формат", "ЧДЦ=; ЧС=3");
		
	КонецЕсли;
	
	Возврат ПользовательскиеНастройки;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиРезультатовИнтерактивныхДействий

&НаКлиенте
Процедура ОтветНаВопросРассчитать(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РассчитатьНаСервере();
		Модифицированность = Истина;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость и доступность элементов.
//
&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Если Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс Тогда 
		// Баланс.
		Заголовок = НСтр("ru = 'Бухгалтерский баланс'");
		
		Элементы.ГруппаПредПериод.Видимость = Ложь;
		Элементы.БалансСводка.Видимость = Истина;
		Элементы.СтраницаНастройки.Видимость = Истина;
		Элементы.СтраницаНастройкиСтрокОДДС.Видимость = Ложь;
		Элементы.СтраницаНастройкиОДДСПоСтатьям.Видимость = Ложь;
		Элементы.ПрибыльПоНУ.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаПредПериод.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаУК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаПК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаНП.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаИтг.Видимость = Ложь;
		
		Элементы.НастройкиСтрокВидКапитала.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетДт.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетКт.Видимость = Ложь;
		
		Элементы.РасшифровкаСчет.Видимость = Истина;
		Элементы.РасшифровкаСчетДт.Видимость = Ложь;
		Элементы.РасшифровкаСчетКт.Видимость = Ложь;
		Элементы.РасшифровкаСумма.Видимость = Истина;
		Элементы.РасшифровкаСуммаПредПериод.Видимость = Истина;
		Элементы.РасшифровкаСуммаИтого.Видимость = Ложь;
		Элементы.РасшифровкаСтатьяДвиженияДенежныхСредств.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Заголовок = НСтр("ru = 'На конец'");
		Элементы.СтрокиОтчетаСуммаПредПериод.Заголовок = НСтр("ru = 'На начало'");
		Элементы.РасшифровкаСумма.Заголовок = НСтр("ru = 'На конец'");
		Элементы.РасшифровкаСуммаПредПериод.Заголовок = НСтр("ru = 'На начало'");
		
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ Тогда
		// ОПУ.
		Заголовок = НСтр("ru = 'Отчет о прибылях и убытках'");	
		
		Элементы.ГруппаПредПериод.Видимость = Истина;
		Элементы.БалансСводка.Видимость = Ложь;
		Элементы.СтраницаНастройки.Видимость = Истина;
		Элементы.СтраницаНастройкиСтрокОДДС.Видимость = Ложь;
		Элементы.СтраницаНастройкиОДДСПоСтатьям.Видимость = Ложь;
		Элементы.ПрибыльПоНУ.Видимость = Истина;
		
		Элементы.СтрокиОтчетаСумма.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаПредПериод.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаУК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаПК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаНП.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаИтг.Видимость = Ложь;
		
		Элементы.НастройкиСтрокВидКапитала.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетДт.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетКт.Видимость = Ложь;
		
		Элементы.РасшифровкаСчет.Видимость = Истина;
		Элементы.РасшифровкаСчетДт.Видимость = Ложь;
		Элементы.РасшифровкаСчетКт.Видимость = Ложь;
		Элементы.РасшифровкаСумма.Видимость = Истина;
		Элементы.РасшифровкаСуммаПредПериод.Видимость = Истина;
		Элементы.РасшифровкаСуммаИтого.Видимость = Ложь;
		Элементы.РасшифровкаСтатьяДвиженияДенежныхСредств.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.СтрокиОтчетаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
		Элементы.РасшифровкаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.РасшифровкаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
		
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС Тогда
		// ОДДС.
		Заголовок = НСтр("ru = 'Отчет о движении денежных средств'");
		
		Элементы.ГруппаПредПериод.Видимость = Истина;
		Элементы.БалансСводка.Видимость = Ложь;
		Элементы.СтраницаНастройки.Видимость = Ложь;
		Элементы.СтраницаНастройкиСтрокОДДС.Видимость = НЕ ИспользоватьСтатьиДвиженияДенежныхСредств;
		Элементы.СтраницаНастройкиОДДСПоСтатьям.Видимость = ИспользоватьСтатьиДвиженияДенежныхСредств;
		Элементы.ПрибыльПоНУ.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаПредПериод.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаУК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаПК.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаНП.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаИтг.Видимость = Ложь;
		
		Элементы.НастройкиСтрокВидКапитала.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетДт.Видимость = Ложь;
		Элементы.НастройкиСтрокСчетКт.Видимость = Ложь;
		
		Элементы.РасшифровкаСчет.Видимость = Ложь;
		Элементы.РасшифровкаСчетДт.Видимость = НЕ ИспользоватьСтатьиДвиженияДенежныхСредств;
		Элементы.РасшифровкаСчетКт.Видимость = НЕ ИспользоватьСтатьиДвиженияДенежныхСредств;
		Элементы.РасшифровкаСумма.Видимость = Истина;
		Элементы.РасшифровкаСуммаПредПериод.Видимость = Истина;
		Элементы.РасшифровкаСуммаИтого.Видимость = Ложь;
		Элементы.РасшифровкаСтатьяДвиженияДенежныхСредств.Видимость = НЕ ИспользоватьСтатьиДвиженияДенежныхСредств;
	
		Элементы.СтрокиОтчетаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.СтрокиОтчетаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
		Элементы.РасшифровкаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.РасшифровкаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
		
		Элементы.СтрокиОтчетаРасшифровкаДДС.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств");
		Элементы.СтрокиОтчетаКонтрольЗаполненияСтатейДДС.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств");
		
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК Тогда
		// ОИК.
		Заголовок = НСтр("ru = 'Отчет об изменениях в собственном капитале'");
		
		Элементы.ГруппаПредПериод.Видимость = Ложь;
		Элементы.БалансСводка.Видимость = Ложь;
		Элементы.СтраницаНастройки.Видимость = Истина;
		Элементы.СтраницаНастройкиСтрокОДДС.Видимость = Ложь;
		Элементы.СтраницаНастройкиОДДСПоСтатьям.Видимость = Ложь;
		Элементы.ПрибыльПоНУ.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаПредПериод.Видимость = Ложь;
		Элементы.СтрокиОтчетаСуммаУК.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаПК.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаНП.Видимость = Истина;
		Элементы.СтрокиОтчетаСуммаИтг.Видимость = Истина;
		
		Элементы.НастройкиСтрокВидКапитала.Видимость = Истина;
		Элементы.НастройкиСтрокСчетДт.Видимость = Истина;
		Элементы.НастройкиСтрокСчетКт.Видимость = Истина;
		
		Элементы.РасшифровкаСчет.Видимость = Истина;
		Элементы.РасшифровкаСчетДт.Видимость = Ложь;
		Элементы.РасшифровкаСчетКт.Видимость = Ложь;
		Элементы.РасшифровкаСумма.Видимость = Ложь;
		Элементы.РасшифровкаСуммаПредПериод.Видимость = Ложь;
		Элементы.РасшифровкаСуммаИтого.Видимость = Истина;
		Элементы.РасшифровкаСтатьяДвиженияДенежныхСредств.Видимость = Ложь;
		
		Элементы.СтрокиОтчетаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.СтрокиОтчетаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
		Элементы.РасшифровкаСумма.Заголовок = НСтр("ru = 'Сумма'");
		Элементы.РасшифровкаСуммаПредПериод.Заголовок = НСтр("ru = 'Сумма пред.период'");
	КонецЕсли;	
		
	// Настройки.
	Элементы.СтрокиОтчетаЭтоЗаголовок.Видимость = ПоказатьНастройки;
	Элементы.СтрокиОтчетаЗнакГруппы.Видимость = ПоказатьНастройки;
	Элементы.СтрокиОтчетаПроход.Видимость = ПоказатьНастройки;
	
КонецПроцедуры 

// Процедура настройки условного оформления форм и динамических списков .
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СтрокиОтчета");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СтрокиОтчета.ЭтоЗаголовок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаШапкиОтчета);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СтрокиОтчета");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СтрокиОтчета.Проход");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаГруппировкиОтчета2);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СтрокиОтчета");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СтрокиОтчета.Проход");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 2;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаГруппировкиОтчета1);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СтрокиОтчета");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СтрокиОтчета.Проход");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 3;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.БыстрыеОтборыФонГруппы);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки()

	Если НЕ Объект.Настройка.Пустая() Тогда			
		Объект.СтрокиОтчета.Загрузить(Объект.Настройка.СтрокиОтчета.Выгрузить());
		
		Если Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс 
			Или Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ Тогда 
			// Баланс, ОПУ.
			Объект.НастройкиСтрок.Загрузить(Объект.Настройка.НастройкиСтрок.Выгрузить());
		ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС Тогда
			// ОДДС.
			Если ИспользоватьСтатьиДвиженияДенежныхСредств Тогда 
				Объект.НастройкиСтрокОДДСПоСтатьям.Загрузить(Объект.Настройка.НастройкиСтрокОДДСПоСтатьям.Выгрузить());
			Иначе 
				Объект.НастройкиСтрокОДДС.Загрузить(Объект.Настройка.НастройкиСтрокОДДС.Выгрузить());
			КонецЕсли;	
		ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК Тогда 
			// ОИК.
			Объект.НастройкиСтрок.Загрузить(Объект.Настройка.НастройкиСтрокОИК.Выгрузить());
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьНаСервере()
	ЗаполнитьНомераПроходов();
	
	Если Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.Баланс Тогда
		// Баланс.
		РассчитатьБаланс();
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОПУ Тогда
		// ОПУ.
		РассчитатьОПУ();
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОДДС Тогда
		// ОДДС.
		Если ИспользоватьСтатьиДвиженияДенежныхСредств Тогда 
			РассчитатьОДДСПоСтатьям();
		Иначе 
			РассчитатьОДДС();	
		КонецЕсли;
	ИначеЕсли Объект.ВидОтчета = Перечисления.ВидыРегламентированныхОтчетов.ОИК Тогда
		РассчитатьОИК();	
	КонецЕсли;	
КонецПроцедуры

// Процедура проставляет номера проходов взависимости от групп.
//
&НаСервере
Процедура ЗаполнитьНомераПроходов()
	
	// Таблица групп.
	ТаблицаСтрокиОтчетаГруппы = Объект.СтрокиОтчета.Выгрузить();
	ТаблицаСтрокиОтчетаГруппы.Свернуть("Группа");
	ТаблицаСтрокиОтчетаГруппы.Индексы.Добавить("Группа");
	
	// Удалени пустых строк.
	НайденныеСтроки = ТаблицаСтрокиОтчетаГруппы.НайтиСтроки(Новый Структура("Группа", ""));
	Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл 
		ТаблицаСтрокиОтчетаГруппы.Удалить(СтрокаТаблицы);
	КонецЦикла;	
	
	// Добавление колонки "Проход".
	ТаблицаСтрокиОтчетаГруппы.Колонки.Добавить("Проход");
	// Всем группам присваивается уровень 1.
	ТаблицаСтрокиОтчетаГруппы.ЗаполнитьЗначения(1, "Проход");
	
	// Формирование номеров проходов.
	// Глубина вложенности 19.
	Глубина = 1;
	Пока Глубина < 20 Цикл
		// Признак пустой группы.
		ГруппаПустая = Истина;
		
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчетаГруппы Цикл
			Если СтрокаТаблицы.Проход = Глубина Тогда
				// Поиск всех строк по совпадению кода строки и группы.
				НайденныеСтроки = Объект.СтрокиОтчета.НайтиСтроки(Новый Структура("КодСтроки", СтрокаТаблицы.Группа));
				
				// Обход всех строк, "пренадлежащих" текущей группе.
				Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл 
					НайденнаяСтрока = ТаблицаСтрокиОтчетаГруппы.Найти(СтрокаТабличнойЧасти.Группа, "Группа");
					// Увеличение глубины вхождения.
					Если НЕ НайденнаяСтрока = Неопределено Тогда				
						НайденнаяСтрока.Проход = Глубина + 1;
						ГруппаПустая = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Если ГруппаПустая Тогда
			Прервать;
		КонецЕсли;
		Глубина = Глубина + 1;
	КонецЦикла;
	
	// Заполнить номера проходов.
	Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
		СтрокаТабличнойЧасти.Проход = 0;
		СтрокаТаблицы = ТаблицаСтрокиОтчетаГруппы.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
		Если НЕ СтрокаТаблицы = Неопределено Тогда 
			СтрокаТабличнойЧасти.Проход = СтрокаТаблицы.Проход;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РассчитатьБаланс()

	// В формулах баланса могут присутствовать: СальдоДт, СальдоКт.
	
	// 1. Настройки строк.
	// 2. Строки отчета.
	// 3. Остатки.
	// 4. Применение формулы.
	// 5. Применение знака.
	// 6. Применение округления.
	// 7. Строки отчета.
	// 8. Расшифровка.
	// 9. Количество проходов.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки,
		|	НастройкиСтрок.СчетУчета КАК СчетУчета,
		|	НастройкиСтрок.Знак КАК Знак,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрок КАК НастройкиСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	2 КАК Порядок,
		|	СтрокиОтчета.КодСтроки КАК КодСтроки,
		|	СтрокиОтчета.НаименованиеСтроки КАК НаименованиеСтроки,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа,
		|	СтрокиОтчета.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	СтрокиОтчета.ЗнакГруппы КАК ЗнакГруппы,
		|	СтрокиОтчета.Проход КАК Проход,
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДтНачалоПериода,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКтНачалоПериода,
		|	0 КАК СуммаОстатокДтКонецПериода,
		|	0 КАК СуммаОстатокКтКонецПериода
		|ПОМЕСТИТЬ ВременнаяТаблицаОстатки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&НачалоПериода,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОстатки.Счет,
		|	0,
		|	0,
		|	ХозрасчетныйОстатки.СуммаОстатокДт,
		|	ХозрасчетныйОстатки.СуммаОстатокКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1),
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак КАК Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.СуммаОстатокДтНачалоПериода, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.СуммаОстатокКтНачалоПериода, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.СуммаОстатокДтКонецПериода, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОстатки.СуммаОстатокКтКонецПериода, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчеты
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстатки КАК ВременнаяТаблицаОстатки
		|		ПО ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаОстатки.СчетУчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаРасчеты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаРасчеты.Формула КАК Формула,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаПредПериод
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаПредПериод
		|	КОНЕЦ КАК СуммаПредПериод,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.Сумма
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыЗнак
		|ИЗ
		|	ВременнаяТаблицаРасчеты КАК ВременнаяТаблицаРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.Сумма
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПредПериод, 0) КАК СуммаПредПериод,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаОтчет.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК СуммаПредПериод,
		|	ВременнаяТаблицаРасчетыЗнак.Сумма КАК Сумма,
		|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|		ПО ВременнаяТаблицаНастройкиСтрок.КодСтроки = ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|			И ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаРасчетыЗнак.СчетУчета
		|			И ВременнаяТаблицаНастройкиСтрок.Формула = ВременнаяТаблицаРасчетыЗнак.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкиСтрок", Объект.НастройкиСтрок.Выгрузить());
	Запрос.УстановитьПараметр("СтрокиОтчета", Объект.СтрокиОтчета.Выгрузить());

	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.СтрокиОтчета.Загрузить(РезультатЗапроса[6].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[7].Выгрузить());
		
	КоличествоПроходов = 0;
	Если НЕ РезультатЗапроса[8].Пустой() Тогда 
		Выборка = РезультатЗапроса[8].Выбрать();
		Выборка.Следующий();
		КоличествоПроходов = Выборка.КоличествоПроходов;
	КонецЕсли;	
	
	// Расчет групповых строк.
	Глубина = 1;
	Пока Глубина <= КоличествоПроходов Цикл
		// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
		ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
		// Применение знака группы.
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
			Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
				СтрокаТаблицы.Сумма = СтрокаТаблицы.Сумма * -1;
				СтрокаТаблицы.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод * -1;
			КонецЕсли;	
		КонецЦикла;
		ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаПредПериод, Сумма");
		
		// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
		Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
			Если СтрокаТабличнойЧасти.Проход = Глубина 
				И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
				СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
				
				Если СтрокаТаблицы = Неопределено Тогда 
					СтрокаТабличнойЧасти.Сумма = 0;
					СтрокаТабличнойЧасти.СуммаПредПериод = 0;
				Иначе
					СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
					СтрокаТабличнойЧасти.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Глубина = Глубина + 1;
	КонецЦикла;

	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("КодСтроки", "299");
	МассивСтрок	= Объект.СтрокиОтчета.НайтиСтроки(ОтборСтрок);
	ИтогоАктивыН = ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПредПериод, 0);
	ИтогоАктивыК = ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0);
	
	ОтборСтрок.Вставить("КодСтроки", "599");
	МассивСтрок	= Объект.СтрокиОтчета.НайтиСтроки(ОтборСтрок);		
	ИтогоОбязательстваН	= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].СуммаПредПериод, 0);
	ИтогоОбязательстваК	= ?(МассивСтрок.Количество() > 0, МассивСтрок[0].Сумма, 0);
	
	Если ИтогоАктивыН = Неопределено Тогда
		ИтогоАктивыН = 0;
	КонецЕсли;
	Если ИтогоАктивыК = Неопределено Тогда
		ИтогоАктивыК = 0;
	КонецЕсли;
	Если ИтогоОбязательстваН = Неопределено Тогда
		ИтогоОбязательстваН  = 0;
	КонецЕсли;
	Если ИтогоОбязательстваК = Неопределено Тогда
		ИтогоОбязательстваК  = 0;
	КонецЕсли;
	
	Объект.БалансСводка = "Начало(А:"+СокрЛП(Строка(ИтогоАктивыН))+" - П:"+СокрЛП(Строка(ИтогоОбязательстваН))+")"
	+" Конец(А:"+СокрЛП(Строка(ИтогоАктивыК))+" - П:"+СокрЛП(Строка(ИтогоОбязательстваК))+")";

КонецПроцедуры 

&НаСервере
Процедура РассчитатьОПУ()

	// В формулах ОПУ могут присутствовать: ОборотыДт, ОборотыКт.
	
	// 1. Настройки строк.
	// 2. Строки отчета.
	// 3. Обороты.
	// 4. Применение формулы.
	// 5. Применение знака.
	// 6. Применение округления.
	// 7. Строки отчета.
	// 8. Расшифровка.
	// 9. Количество проходов.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки,
		|	НастройкиСтрок.СчетУчета КАК СчетУчета,
		|	НастройкиСтрок.Знак КАК Знак,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрок КАК НастройкиСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	2 КАК Порядок,
		|	СтрокиОтчета.КодСтроки КАК КодСтроки,
		|	СтрокиОтчета.НаименованиеСтроки КАК НаименованиеСтроки,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа,
		|	СтрокиОтчета.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	СтрокиОтчета.ЗнакГруппы КАК ЗнакГруппы,
		|	СтрокиОтчета.Проход КАК Проход,
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетУчета,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборотДтТекПериод,
		|	0 КАК СуммаОборотКтТекПериод,
		|	0 КАК СуммаОборотДтПредПериод,
		|	0 КАК СуммаОборотКтПредПериод
		|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			СчетДТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			НЕ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СводДоходовИРасходов)
		|				И НЕ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			НЕ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СводДоходовИРасходов)
		|				И НЕ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль),
		|			,
		|			СчетКТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	0,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			СчетДТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			НЕ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СводДоходовИРасходов)
		|				И НЕ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	0,
		|	0,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			НЕ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СводДоходовИРасходов)
		|				И НЕ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль),
		|			,
		|			СчетКТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак КАК Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДтПредПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКтПредПериод, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДтТекПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКтТекПериод, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчеты
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОбороты КАК ВременнаяТаблицаОбороты
		|		ПО ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаОбороты.СчетУчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаРасчеты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаРасчеты.Формула КАК Формула,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаПредПериод
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаПредПериод
		|	КОНЕЦ КАК СуммаПредПериод,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.Сумма
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыЗнак
		|ИЗ
		|	ВременнаяТаблицаРасчеты КАК ВременнаяТаблицаРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.Сумма
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПредПериод, 0) КАК СуммаПредПериод,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаОтчет.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК СуммаПредПериод,
		|	ВременнаяТаблицаРасчетыЗнак.Сумма КАК Сумма,
		|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|		ПО ВременнаяТаблицаНастройкиСтрок.КодСтроки = ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|			И ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаРасчетыЗнак.СчетУчета
		|			И ВременнаяТаблицаНастройкиСтрок.Формула = ВременнаяТаблицаРасчетыЗнак.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкиСтрок", Объект.НастройкиСтрок.Выгрузить());
	Запрос.УстановитьПараметр("СтрокиОтчета", Объект.СтрокиОтчета.Выгрузить());

	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредПериода", Объект.НачалоПредПериода);
	Запрос.УстановитьПараметр("КонецПредПериода", КонецДня(Объект.КонецПредПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.СтрокиОтчета.Загрузить(РезультатЗапроса[6].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[7].Выгрузить());
		
	КоличествоПроходов = 0;
	Если НЕ РезультатЗапроса[8].Пустой() Тогда 
		Выборка = РезультатЗапроса[8].Выбрать();
		Выборка.Следующий();
		КоличествоПроходов = Выборка.КоличествоПроходов;
	КонецЕсли;	
	
	// Расчет групповых строк.
	Глубина = 1;
	Пока Глубина <= КоличествоПроходов Цикл
		// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
		ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
		// Применение знака группы.
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
			Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
				СтрокаТаблицы.Сумма = СтрокаТаблицы.Сумма * -1;
				СтрокаТаблицы.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод * -1;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаПредПериод, Сумма");
		
		// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
		Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
			Если СтрокаТабличнойЧасти.Проход = Глубина 
				И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
				СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
				
				Если СтрокаТаблицы = Неопределено Тогда 
					СтрокаТабличнойЧасти.Сумма = 0;
					СтрокаТабличнойЧасти.СуммаПредПериод = 0;
				Иначе
					СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
					СтрокаТабличнойЧасти.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Глубина = Глубина + 1;
	КонецЦикла;
	
	// Расчет налога на прибыль по данным налогового учета.
	Если НЕ Объект.ПрибыльПоНУ Тогда 
		
		// Поиск строки "Расходы по налогу на прибыль" (170).
		НайденныеСтроки = Объект.СтрокиОтчета.НайтиСтроки(Новый Структура("КодСтроки", "170"));
		Если НЕ НайденныеСтроки.Количество() = 0 Тогда 
			СтрокаТабличнойЧасти = НайденныеСтроки[0];
			
			СуммаНалогНаПрибыль = СтрокаТабличнойЧасти.Сумма;	
			СуммаПредПериодНалогНаПрибыль = СтрокаТабличнойЧасти.СуммаПредПериод;	
			
			СтрокаТабличнойЧасти.Сумма = 0;
			СтрокаТабличнойЧасти.СуммаПредПериод = 0;
			
			// Поиск строки "Прибыль (убыток) до вычета налогов" (160).
			СуммаПрибыльБУ = 0 ;
			СуммаПредПериодПрибыльБУ = 0;

			НайденныеСтроки = Объект.СтрокиОтчета.НайтиСтроки(Новый Структура("КодСтроки", "160"));
			Если НЕ НайденныеСтроки.Количество() = 0 Тогда 
				СуммаПрибыльБУ = НайденныеСтроки[0].Сумма;
				СуммаПредПериодПрибыльБУ = НайденныеСтроки[0].СуммаПредПериод; 
			КонецЕсли;	
			
			// Ставка налога на прибыль.
			ДанныеУчетнойПолитики = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиОрганизаций(ДатаДокумента, Объект.Организация);
			СтавкаНалогаНаПрибыль = ?(ЗначениеЗаполнено(ДанныеУчетнойПолитики.СтавкаНалогаНаПрибыль), ДанныеУчетнойПолитики.СтавкаНалогаНаПрибыль, 10);
			
			// Расчет налога на прибыль.
			СуммаНалогНаПрибыль = 0;
			Если СуммаПрибыльБУ > 0 Тогда 
				СуммаНалогНаПрибыль = Окр(СуммаПрибыльБУ * СтавкаНалогаНаПрибыль / 100, 2);
			КонецЕсли;		
			
			СуммаПредПериодНалогНаПрибыль = 0;
			Если СуммаПредПериодПрибыльБУ > 0 Тогда 
				СуммаПредПериодНалогНаПрибыль = Окр(СуммаПредПериодПрибыльБУ * СтавкаНалогаНаПрибыль / 100, 2);
			КонецЕсли;		

			СтрокаТабличнойЧасти.Сумма = СуммаНалогНаПрибыль;
			СтрокаТабличнойЧасти.СуммаПредПериод = СуммаПредПериодНалогНаПрибыль;
		КонецЕсли;
		
		// Так как изменилось значение 170 строки.
		// Расчет групповых строк.
		Глубина = 1;
		Пока Глубина <= КоличествоПроходов Цикл
			// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
			ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
			// Применение знака группы.
			Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
				Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
					СтрокаТаблицы.Сумма = СтрокаТаблицы.Сумма * -1;
					СтрокаТаблицы.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод * -1;
				КонецЕсли;	
			КонецЦикла;	
			ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаПредПериод, Сумма");
			
			// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
			Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
				Если СтрокаТабличнойЧасти.Проход = Глубина 
					И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
					СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
					
					Если СтрокаТаблицы = Неопределено Тогда 
						СтрокаТабличнойЧасти.Сумма = 0;
						СтрокаТабличнойЧасти.СуммаПредПериод = 0;
					Иначе
						СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
						СтрокаТабличнойЧасти.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Глубина = Глубина + 1;
		КонецЦикла;
	КонецЕсли;		
	
КонецПроцедуры 

&НаСервере
Процедура РассчитатьОДДС()

	// В формулах ОДДС могут присутствовать: ОборотыДтКт, СальдоНачальноеДт (для Счета Дт), СальдоКонечноеДт (для Счета Дт).
	
	// 1. Настройки строк.
	// 2. Строки отчета.
	// 3. Обороты.
	// 4. Применение формулы.
	// 5. Применение знака.
	// 6. Применение округления.
	// 7. Строки отчета.
	// 8. Расшифровка.
	// 9. Количество проходов.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки,
		|	НастройкиСтрок.СчетДт КАК СчетДт,
		|	НастройкиСтрок.СчетКт КАК СчетКт,
		|	НастройкиСтрок.Знак КАК Знак,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрокОДДС КАК НастройкиСтрок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодСтроки,
		|	СчетДт,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	2 КАК Порядок,
		|	СтрокиОтчета.КодСтроки КАК КодСтроки,
		|	СтрокиОтчета.НаименованиеСтроки КАК НаименованиеСтроки,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа,
		|	СтрокиОтчета.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	СтрокиОтчета.ЗнакГруппы КАК ЗнакГруппы,
		|	СтрокиОтчета.Проход КАК Проход,
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборотТекПериод,
		|	0 КАК СуммаОборотПредПериод,
		|	0 КАК СуммаНачальныйОстатокТекПериод,
		|	0 КАК СуммаКонечныйОстатокТекПериод,
		|	0 КАК СуммаНачальныйОстатокПредПериод,
		|	0 КАК СуммаКонечныйОстатокПредПериод
		|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			СчетДТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			СчетКт В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			СчетДТ В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			СчетКт В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	0,
		|	0,
		|	0,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	0,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДт,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак КАК Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотПредПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокПредПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокПредПериод, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотТекПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокТекПериод, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокТекПериод, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчеты
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОбороты КАК ВременнаяТаблицаОбороты
		|		ПО ВременнаяТаблицаНастройкиСтрок.СчетДт = ВременнаяТаблицаОбороты.СчетДт
		|			И ВременнаяТаблицаНастройкиСтрок.СчетКт = ВременнаяТаблицаОбороты.СчетКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетДт,
		|	ВременнаяТаблицаНастройкиСтрок.СчетКт,
		|	ВременнаяТаблицаНастройкиСтрок.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаРасчеты.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаРасчеты.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаРасчеты.Формула КАК Формула,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаПредПериод
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаПредПериод
		|	КОНЕЦ КАК СуммаПредПериод,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.Сумма
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыЗнак
		|ИЗ
		|	ВременнаяТаблицаРасчеты КАК ВременнаяТаблицаРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.Сумма
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПредПериод, 0) КАК СуммаПредПериод,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаОтчет.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК СуммаПредПериод,
		|	ВременнаяТаблицаРасчетыЗнак.Сумма КАК Сумма,
		|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|		ПО ВременнаяТаблицаНастройкиСтрок.КодСтроки = ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|			И ВременнаяТаблицаНастройкиСтрок.СчетДт = ВременнаяТаблицаРасчетыЗнак.СчетДт
		|			И ВременнаяТаблицаНастройкиСтрок.СчетКт = ВременнаяТаблицаРасчетыЗнак.СчетКт
		|			И ВременнаяТаблицаНастройкиСтрок.Формула = ВременнаяТаблицаРасчетыЗнак.Формула
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкиСтрокОДДС", Объект.НастройкиСтрокОДДС.Выгрузить());
	Запрос.УстановитьПараметр("СтрокиОтчета", Объект.СтрокиОтчета.Выгрузить());

	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредПериода", Объект.НачалоПредПериода);
	Запрос.УстановитьПараметр("КонецПредПериода", КонецДня(Объект.КонецПредПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.СтрокиОтчета.Загрузить(РезультатЗапроса[6].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[7].Выгрузить());
		
	КоличествоПроходов = 0;
	Если НЕ РезультатЗапроса[8].Пустой() Тогда 
		Выборка = РезультатЗапроса[8].Выбрать();
		Выборка.Следующий();
		КоличествоПроходов = Выборка.КоличествоПроходов;
	КонецЕсли;	
	
	// Расчет групповых строк.
	Глубина = 1;
	Пока Глубина <= КоличествоПроходов Цикл
		// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
		ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
		// Применение знака группы.
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
			Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
				СтрокаТаблицы.Сумма = СтрокаТаблицы.Сумма * -1;
				СтрокаТаблицы.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод * -1;
			КонецЕсли;	
		КонецЦикла;
		ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаПредПериод, Сумма");
		
		// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
		Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
			Если СтрокаТабличнойЧасти.Проход = Глубина 
				И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
				СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
				
				Если СтрокаТаблицы = Неопределено Тогда 
					СтрокаТабличнойЧасти.Сумма = 0;
					СтрокаТабличнойЧасти.СуммаПредПериод = 0;
				Иначе
					СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
					СтрокаТабличнойЧасти.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Глубина = Глубина + 1;
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура РассчитатьОДДСПоСтатьям()

	// В формулах ОДДС по статьям могут присутствовать: ОборотыДтКт.
	
	// 1. Настройки строк.
	// 2. Строки отчета.
	// 3. Обороты.
	// 4. Применение формулы.
	// 5. Применение знака.
	// 6. Применение округления.
	// 7. Строки отчета.
	// 8. Расшифровка.
	// 9. Количество проходов.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки,
		|	НастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	НастройкиСтрок.Знак КАК Знак,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрокОДДСПоСтатьям КАК НастройкиСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	2 КАК Порядок,
		|	СтрокиОтчета.КодСтроки КАК КодСтроки,
		|	СтрокиОтчета.НаименованиеСтроки КАК НаименованиеСтроки,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа,
		|	СтрокиОтчета.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	СтрокиОтчета.ЗнакГруппы КАК ЗнакГруппы,
		|	СтрокиОтчета.Проход КАК Проход,
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОбороты.Субконто1 КАК СтатьяДвиженияДенежныхСредств,
		|	ХозрасчетныйОбороты.СуммаОборот КАК СуммаОборотПредПериод,
		|	0 КАК СуммаОборот
		|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		|					ИЗ
		|						ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	НЕ &ПоказыватьВнутренниеОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОбороты.Субконто1,
		|	0,
		|	ХозрасчетныйОбороты.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		|					ИЗ
		|						ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	НЕ &ПоказыватьВнутренниеОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОбороты.Субконто1 КАК СтатьяДвиженияДенежныхСредств,
		|	ХозрасчетныйОбороты.СуммаОборот КАК СуммаОборотПредПериод,
		|	0 КАК СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПредПериода,
		|			&КонецПредПериода,
		|			,
		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		|					ИЗ
		|						ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	&ПоказыватьВнутренниеОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ХозрасчетныйОбороты.Субконто1,
		|	0,
		|	ХозрасчетныйОбороты.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		|					ИЗ
		|						ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	&ПоказыватьВнутренниеОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак КАК Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотПредПериод, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборот, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчеты
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОбороты КАК ВременнаяТаблицаОбороты
		|		ПО ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств = ВременнаяТаблицаОбороты.СтатьяДвиженияДенежныхСредств
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств,
		|	ВременнаяТаблицаНастройкиСтрок.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаРасчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ВременнаяТаблицаРасчеты.Формула КАК Формула,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаПредПериод
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаПредПериод
		|	КОНЕЦ КАК СуммаПредПериод,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.Сумма
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.Сумма
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыЗнак
		|ИЗ
		|	ВременнаяТаблицаРасчеты КАК ВременнаяТаблицаРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод
		|		КОНЕЦ) КАК СуммаПредПериод,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.Сумма / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.Сумма
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПредПериод, 0) КАК СуммаПредПериод,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаОтчет.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаПредПериод КАК СуммаПредПериод,
		|	ВременнаяТаблицаРасчетыЗнак.Сумма КАК Сумма,
		|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|		ПО ВременнаяТаблицаНастройкиСтрок.КодСтроки = ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|			И ВременнаяТаблицаНастройкиСтрок.СтатьяДвиженияДенежныхСредств = ВременнаяТаблицаРасчетыЗнак.СтатьяДвиженияДенежныхСредств
		|			И ВременнаяТаблицаНастройкиСтрок.Формула = ВременнаяТаблицаРасчетыЗнак.Формула
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкиСтрокОДДСПоСтатьям", Объект.НастройкиСтрокОДДСПоСтатьям.Выгрузить());
	Запрос.УстановитьПараметр("СтрокиОтчета", 				 Объект.СтрокиОтчета.Выгрузить());	
	Запрос.УстановитьПараметр("НачалоПериода", 				 Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 				 КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредПериода", 			 Объект.НачалоПредПериода);
	Запрос.УстановитьПараметр("КонецПредПериода", 			 КонецДня(Объект.КонецПредПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", 				 Объект.ЕдиницаОтчета);
	Запрос.УстановитьПараметр("ПоказыватьВнутренниеОбороты", УказыватьСтатьиДДСДляВнутреннихОборотов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.СтрокиОтчета.Загрузить(РезультатЗапроса[6].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[7].Выгрузить());
		
	КоличествоПроходов = 0;
	Если НЕ РезультатЗапроса[8].Пустой() Тогда 
		Выборка = РезультатЗапроса[8].Выбрать();
		Выборка.Следующий();
		КоличествоПроходов = Выборка.КоличествоПроходов;
	КонецЕсли;	
	
	// Расчет групповых строк.
	Глубина = 1;
	Пока Глубина <= КоличествоПроходов Цикл
		// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
		ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
		// Применение знака группы.
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
			Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
				СтрокаТаблицы.Сумма = СтрокаТаблицы.Сумма * -1;
				СтрокаТаблицы.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод * -1;
			КонецЕсли;	
		КонецЦикла;
		ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаПредПериод, Сумма");
		
		// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
		Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
			Если СтрокаТабличнойЧасти.Проход = Глубина 
				И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
				СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
				
				Если СтрокаТаблицы = Неопределено Тогда 
					СтрокаТабличнойЧасти.Сумма = 0;
					СтрокаТабличнойЧасти.СуммаПредПериод = 0;
				Иначе
					СтрокаТабличнойЧасти.Сумма = СтрокаТаблицы.Сумма;
					СтрокаТабличнойЧасти.СуммаПредПериод = СтрокаТаблицы.СуммаПредПериод;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Глубина = Глубина + 1;
	КонецЦикла;

	// Заполнение остатков.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 2))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 1))
		|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0)
		|	КОНЕЦ КАК СуммаНачальныйОстатокПредПериод,
		|	ВЫБОР
		|		КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 2))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 1))
		|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0)
		|	КОНЕЦ КАК СуммаКонечныйОстатокПредПериод
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПредПериода, &КонецПредПериода, , , Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 2))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 1))
		|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0)
		|	КОНЕЦ КАК СуммаНачальныйОстаток,
		|	ВЫБОР
		|		КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 0))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 2))
		|		КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0) / 1000 КАК ЧИСЛО(15, 1))
		|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток, 0)
		|	КОНЕЦ КАК СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВКассе), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВБанке)), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредПериода", Объект.НачалоПредПериода);
	Запрос.УстановитьПараметр("КонецПредПериода", КонецДня(Объект.КонецПредПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", Объект.ЕдиницаОтчета);
	
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СуммаНачальныйОстатокПредПериод = 0;
	СуммаКонечныйОстатокПредПериод = 0;

	ВыборкаДетальныеЗаписи = МассивРезультатов[0].Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		СуммаНачальныйОстатокПредПериод = ВыборкаДетальныеЗаписи.СуммаНачальныйОстатокПредПериод;
		СуммаКонечныйОстатокПредПериод = ВыборкаДетальныеЗаписи.СуммаКонечныйОстатокПредПериод;
	КонецЕсли;

	СуммаНачальныйОстаток = 0;
	СуммаКонечныйОстаток = 0;
	
	ВыборкаДетальныеЗаписи = МассивРезультатов[1].Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		СуммаНачальныйОстаток = ВыборкаДетальныеЗаписи.СуммаНачальныйОстаток;
		СуммаКонечныйОстаток = ВыборкаДетальныеЗаписи.СуммаКонечныйОстаток;
	КонецЕсли;
	
	// Денежные средства на конец отчетного периода по балансу (710).
	НайденныеСтроки = Объект.СтрокиОтчета.НайтиСтроки(Новый Структура("КодСтроки", "710"));
	Если НЕ НайденныеСтроки.Количество() = 0 Тогда 
		НайденныеСтроки[0].Сумма = СуммаКонечныйОстаток;
		НайденныеСтроки[0].СуммаПредПериод = СуммаКонечныйОстатокПредПериод;
	КонецЕсли;	
	
	// Денежные средства на начало отчетного периода по балансу (720).
	НайденныеСтроки = Объект.СтрокиОтчета.НайтиСтроки(Новый Структура("КодСтроки", "720"));
	Если НЕ НайденныеСтроки.Количество() = 0 Тогда 
		НайденныеСтроки[0].Сумма = СуммаНачальныйОстаток;
		НайденныеСтроки[0].СуммаПредПериод = СуммаНачальныйОстатокПредПериод;
	КонецЕсли;	
	
КонецПроцедуры 

&НаСервере
Процедура РассчитатьОИК()

	// В формулах ОИК могут присутствовать: ОборотыДт, ОборотыКт, СальдоНачальноеДт, СальдоНачальноеКт, СальдоКонечноеДт, СальдоКонечноеКт.
	
	// 1. Настройки строк.
	// 2. Строки отчета.
	// 3. Остатки и Обороты.
	// 4. Применение формулы.
	// 5. Применение знака.
	// 6. Применение округления.
	// 7. Строки отчета.
	// 8. Расшифровка.
	// 9. Количество проходов.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	НастройкиСтрок.КодСтроки КАК КодСтроки,
		|	НастройкиСтрок.СчетУчета КАК СчетУчета,
		|	НастройкиСтрок.Знак КАК Знак,
		|	НастройкиСтрок.Формула КАК Формула,
		|	НастройкиСтрок.ВидКапитала КАК ВидКапитала,
		|	НастройкиСтрок.КлючСвязи КАК КлючСвязи,
		|	НастройкиСтрок.СчетДт КАК СчетДт,
		|	НастройкиСтрок.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ ВременнаяТаблицаНастройкиСтрок
		|ИЗ
		|	&НастройкиСтрок КАК НастройкиСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	2 КАК Порядок,
		|	СтрокиОтчета.КодСтроки КАК КодСтроки,
		|	СтрокиОтчета.НаименованиеСтроки КАК НаименованиеСтроки,
		|	СтрокиОтчета.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	СтрокиОтчета.Группа КАК Группа,
		|	СтрокиОтчета.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	СтрокиОтчета.ЗнакГруппы КАК ЗнакГруппы,
		|	СтрокиОтчета.Проход КАК Проход,
		|	СтрокиОтчета.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВременнаяТаблицаОтчет
		|ИЗ
		|	&СтрокиОтчета КАК СтрокиОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК СчетУчета,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
		|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	3 КАК Порядок,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
		|ПОМЕСТИТЬ ВременнаяТаблицаОборотыДтКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			СчетДт В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			СчетКт В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт
		|				ИЗ
		|					ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	4 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак КАК Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.ВидКапитала = ЗНАЧЕНИЕ(Перечисление.ВидыКапитала.УставныйКапитал)
		|				ТОГДА ВЫБОР
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОборотыДтКт.СуммаОборот, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокКт, 0)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаУставныйКапитал,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.ВидКапитала = ЗНАЧЕНИЕ(Перечисление.ВидыКапитала.ПрочийКапитал)
		|				ТОГДА ВЫБОР
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОборотыДтКт.СуммаОборот, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокКт, 0)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПрочийКапитал,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.ВидКапитала = ЗНАЧЕНИЕ(Перечисление.ВидыКапитала.НераспределеннаяПрибыль)
		|				ТОГДА ВЫБОР
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОборотыДтКт.СуммаОборот, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокКт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокДт, 0)
		|						КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеКт)
		|							ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокКт, 0)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНераспределеннаяПрибыль,
		|	СУММА(ВЫБОР
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотДт, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаОборотКт, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.ОборотыДтКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОборотыДтКт.СуммаОборот, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокДт, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоНачальноеКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаНачальныйОстатокКт, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеДт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокДт, 0)
		|			КОГДА ВременнаяТаблицаНастройкиСтрок.Формула = ЗНАЧЕНИЕ(Перечисление.Формулы.СальдоКонечноеКт)
		|				ТОГДА ЕСТЬNULL(ВременнаяТаблицаОбороты.СуммаКонечныйОстатокКт, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаИтого,
		|	ВременнаяТаблицаОборотыДтКт.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаОборотыДтКт.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчеты
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОбороты КАК ВременнаяТаблицаОбороты
		|		ПО ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаОбороты.СчетУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОборотыДтКт КАК ВременнаяТаблицаОборотыДтКт
		|		ПО ВременнаяТаблицаНастройкиСтрок.СчетДт = ВременнаяТаблицаОборотыДтКт.СчетДт
		|			И ВременнаяТаблицаНастройкиСтрок.СчетКт = ВременнаяТаблицаОборотыДтКт.СчетКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.Знак,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула,
		|	ВременнаяТаблицаОборотыДтКт.СчетДт,
		|	ВременнаяТаблицаОборотыДтКт.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	5 КАК Порядок,
		|	ВременнаяТаблицаРасчеты.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаРасчеты.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаРасчеты.Формула КАК Формула,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаУставныйКапитал
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаУставныйКапитал
		|	КОНЕЦ КАК СуммаУставныйКапитал,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаПрочийКапитал
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаПрочийКапитал
		|	КОНЕЦ КАК СуммаПрочийКапитал,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаНераспределеннаяПрибыль
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаНераспределеннаяПрибыль
		|	КОНЕЦ КАК СуммаНераспределеннаяПрибыль,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРасчеты.Знак = ЗНАЧЕНИЕ(Перечисление.ПлюсМинус.Минус)
		|			ТОГДА -ВременнаяТаблицаРасчеты.СуммаИтого
		|		ИНАЧЕ ВременнаяТаблицаРасчеты.СуммаИтого
		|	КОНЕЦ КАК СуммаИтого,
		|	ВременнаяТаблицаРасчеты.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаРасчеты.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыЗнак
		|ИЗ
		|	ВременнаяТаблицаРасчеты КАК ВременнаяТаблицаРасчеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	6 КАК Порядок,
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки КАК КодСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал
		|		КОНЕЦ) КАК СуммаУставныйКапитал,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал
		|		КОНЕЦ) КАК СуммаПрочийКапитал,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль
		|		КОНЕЦ) КАК СуммаНераспределеннаяПрибыль,
		|	СУММА(ВЫБОР
		|			КОГДА &ЕдиницаОтчета = ""Целые сомы""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаИтого КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаИтого / 1000 КАК ЧИСЛО(15, 0))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/2""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаИтого / 1000 КАК ЧИСЛО(15, 2))
		|			КОГДА &ЕдиницаОтчета = ""Тысячи сомов/1""
		|				ТОГДА ВЫРАЗИТЬ(ВременнаяТаблицаРасчетыЗнак.СуммаИтого / 1000 КАК ЧИСЛО(15, 1))
		|			ИНАЧЕ ВременнаяТаблицаРасчетыЗнак.СуммаИтого
		|		КОНЕЦ) КАК СуммаИтого
		|ПОМЕСТИТЬ ВременнаяТаблицаГруппировкаПоСтроке
		|ИЗ
		|	ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	7 КАК Порядок,
		|	ВременнаяТаблицаОтчет.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаОтчет.НаименованиеСтроки КАК НаименованиеСтроки,
		|	ВременнаяТаблицаОтчет.ЭтоЗаголовок КАК ЭтоЗаголовок,
		|	ВременнаяТаблицаОтчет.Группа КАК Группа,
		|	ВременнаяТаблицаОтчет.НаименованиеСтрокиКырг КАК НаименованиеСтрокиКырг,
		|	ВременнаяТаблицаОтчет.ЗнакГруппы КАК ЗнакГруппы,
		|	ВременнаяТаблицаОтчет.Проход КАК Проход,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаУставныйКапитал, 0) КАК СуммаУставныйКапитал,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаПрочийКапитал, 0) КАК СуммаПрочийКапитал,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаНераспределеннаяПрибыль, 0) КАК СуммаНераспределеннаяПрибыль,
		|	ЕСТЬNULL(ВременнаяТаблицаГруппировкаПоСтроке.СуммаИтого, 0) КАК СуммаИтого,
		|	ВременнаяТаблицаОтчет.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГруппировкаПоСтроке КАК ВременнаяТаблицаГруппировкаПоСтроке
		|		ПО ВременнаяТаблицаОтчет.КодСтроки = ВременнаяТаблицаГруппировкаПоСтроке.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	8 КАК Порядок,
		|	ВременнаяТаблицаНастройкиСтрок.КодСтроки КАК КодСтроки,
		|	ВременнаяТаблицаНастройкиСтрок.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаНастройкиСтрок.Формула КАК Формула,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаУставныйКапитал КАК СуммаУставныйКапитал,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаПрочийКапитал КАК СуммаПрочийКапитал,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаНераспределеннаяПрибыль КАК СуммаНераспределеннаяПрибыль,
		|	ВременнаяТаблицаРасчетыЗнак.СуммаИтого КАК СуммаИтого,
		|	ВременнаяТаблицаНастройкиСтрок.КлючСвязи КАК КлючСвязи,
		|	ВременнаяТаблицаНастройкиСтрок.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаНастройкиСтрок.СчетКт КАК СчетКт
		|ИЗ
		|	ВременнаяТаблицаНастройкиСтрок КАК ВременнаяТаблицаНастройкиСтрок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРасчетыЗнак КАК ВременнаяТаблицаРасчетыЗнак
		|		ПО ВременнаяТаблицаНастройкиСтрок.КодСтроки = ВременнаяТаблицаРасчетыЗнак.КодСтроки
		|			И ВременнаяТаблицаНастройкиСтрок.СчетУчета = ВременнаяТаблицаРасчетыЗнак.СчетУчета
		|			И ВременнаяТаблицаНастройкиСтрок.Формула = ВременнаяТаблицаРасчетыЗнак.Формула
		|			И ВременнаяТаблицаНастройкиСтрок.СчетДт = ВременнаяТаблицаРасчетыЗнак.СчетДт
		|			И ВременнаяТаблицаНастройкиСтрок.СчетКт = ВременнаяТаблицаРасчетыЗнак.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	9 КАК Порядок,
		|	МАКСИМУМ(ВременнаяТаблицаОтчет.Проход) КАК КоличествоПроходов
		|ИЗ
		|	ВременнаяТаблицаОтчет КАК ВременнаяТаблицаОтчет";
	Если Объект.Организация.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
	Иначе 
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкиСтрок", Объект.НастройкиСтрок.Выгрузить());
	Запрос.УстановитьПараметр("СтрокиОтчета", Объект.СтрокиОтчета.Выгрузить());

	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредПериода", Объект.НачалоПредПериода);
	Запрос.УстановитьПараметр("КонецПредПериода", КонецДня(Объект.КонецПредПериода));
	Запрос.УстановитьПараметр("ЕдиницаОтчета", Объект.ЕдиницаОтчета);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Объект.СтрокиОтчета.Загрузить(РезультатЗапроса[7].Выгрузить());
	Объект.Расшифровка.Загрузить(РезультатЗапроса[8].Выгрузить());
		
	КоличествоПроходов = 0;
	Если НЕ РезультатЗапроса[9].Пустой() Тогда 
		Выборка = РезультатЗапроса[9].Выбрать();
		Выборка.Следующий();
		КоличествоПроходов = Выборка.КоличествоПроходов;
	КонецЕсли;	
	
	// Расчет групповых строк.
	Глубина = 1;
	Пока Глубина <= КоличествоПроходов Цикл
		// Выгрузка производится в цикле, чтобы учесть всю глубину вхождения.
		ТаблицаСтрокиОтчета = Объект.СтрокиОтчета.Выгрузить();
		// Применение знака группы.
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокиОтчета Цикл 
			Если СтрокаТаблицы.ЗнакГруппы = Перечисления.ПлюсМинус.Минус Тогда 
				СтрокаТаблицы.СуммаУставныйКапитал = СтрокаТаблицы.СуммаУставныйКапитал * -1;
				СтрокаТаблицы.СуммаПрочийКапитал = СтрокаТаблицы.СуммаПрочийКапитал * -1;
				СтрокаТаблицы.СуммаНераспределеннаяПрибыль = СтрокаТаблицы.СуммаНераспределеннаяПрибыль * -1;
				СтрокаТаблицы.СуммаИтого = СтрокаТаблицы.СуммаИтого * -1;
			КонецЕсли;	
		КонецЦикла;
		ТаблицаСтрокиОтчета.Свернуть("Группа","СуммаУставныйКапитал, СуммаПрочийКапитал, СуммаНераспределеннаяПрибыль, СуммаИтого");
		
		// Перенос групповых Сумм из Таблицы в ТЧ СтрокиОтчета.
		Для Каждого СтрокаТабличнойЧасти Из Объект.СтрокиОтчета Цикл
			Если СтрокаТабличнойЧасти.Проход = Глубина 
				И НЕ СтрокаТабличнойЧасти.КодСтроки = "" Тогда 
				СтрокаТаблицы = ТаблицаСтрокиОтчета.Найти(СтрокаТабличнойЧасти.КодСтроки, "Группа");
				
				Если СтрокаТаблицы = Неопределено Тогда 
					СтрокаТабличнойЧасти.СуммаУставныйКапитал = 0;
					СтрокаТабличнойЧасти.СуммаПрочийКапитал = 0;
					СтрокаТабличнойЧасти.СуммаНераспределеннаяПрибыль = 0;
					СтрокаТабличнойЧасти.СуммаИтого = 0;
				Иначе
					СтрокаТабличнойЧасти.СуммаУставныйКапитал = СтрокаТаблицы.СуммаУставныйКапитал;
					СтрокаТабличнойЧасти.СуммаПрочийКапитал = СтрокаТаблицы.СуммаПрочийКапитал;
					СтрокаТабличнойЧасти.СуммаНераспределеннаяПрибыль = СтрокаТаблицы.СуммаНераспределеннаяПрибыль;
					СтрокаТабличнойЧасти.СуммаИтого = СтрокаТаблицы.СуммаИтого;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Глубина = Глубина + 1;
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Функция ПроверитьНастройкиНаСервере()

	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("СтрокиОтчета", 			Объект.Настройка.СтрокиОтчета.Выгрузить());
	СтруктураТаблиц.Вставить("НастройкиСтрок", 			Объект.Настройка.НастройкиСтрок.Выгрузить());
	СтруктураТаблиц.Вставить("НастройкиОДДС", 			Объект.Настройка.НастройкиСтрокОДДС.Выгрузить());
	СтруктураТаблиц.Вставить("НастройкиОДДСПоСтатьям", 	Объект.Настройка.НастройкиСтрокОДДСПоСтатьям.Выгрузить());
	
	Возврат Справочники.НастройкиРегламентированныхОтчетов.ПолучитьДанныеПроверкиНастроек(Объект.ВидОтчета, СтруктураТаблиц);
								
КонецФункции

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

