#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой НДС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчета(МассивОбъектов, ОбъектыПечати)	 	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетНалоговогоАгентаНДС.Ссылка КАК Ссылка,
		|	ОтчетНалоговогоАгентаНДС.Дата КАК Дата,
		|	ОтчетНалоговогоАгентаНДС.Организация КАК Организация,
		|	ОтчетНалоговогоАгентаНДС.ВидОтчета КАК ВидОтчета,
		|	ОтчетНалоговогоАгентаНДС.ДанныеОтчета.(
		|		НомерСтроки КАК НомерСтроки,
		|		НомерЭСФ КАК НомерЭСФ,
		|		Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
		|		ВЫБОР
		|			КОГДА Контрагент.ИНН = """"
		|				ТОГДА ""99999999999999""
		|			ИНАЧЕ Контрагент.ИНН
		|		КОНЕЦ КАК ИНН,
		|		Контрагент.СтранаРезидентства.Код КАК КодСтраны,
		|		ДатаПоставки КАК ДатаПоставки,
		|		СтоимостьБезНДС КАК СтоимостьБезНДС,
		|		СуммаНДС КАК СуммаНДС
		|	) КАК ДанныеОтчета
		|ИЗ
		|	Документ.ОтчетНалоговогоАгентаНДС КАК ОтчетНалоговогоАгентаНДС
		|ГДЕ
		|	ОтчетНалоговогоАгентаНДС.Ссылка В (&СписокДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";		
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетНалоговогоАгентаНДС_ОтчетНалоговогоАгента";
	

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетНалоговогоАгентаНДС.ПФ_MXL_ОтчетНалоговогоАгента");
	
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Заголовок
		Если Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Первоначальный Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПервоначальный");
					
		ИначеЕсли Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Уточненный Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокУточненный");				
		Иначе	
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЛиквидационный");	
		КонецЕсли;	
			
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Шапка
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		КонтактныеДанные = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСведенияОбОрганизации(Шапка.организация, КонецМесяца(Шапка.Дата));

		ОКПО	= КонтактныеДанные.ОКПО;
		ИНН		= КонтактныеДанные.ИНН;
		КодГНС	= КонтактныеДанные.ГНСКод;
		Индекс	= КонтактныеДанные.Индекс;
				
		ДанныеПечати = Новый Структура();
		ОбластьМакета.Параметры.ОРГАНИЗАЦИЯ	= КонтактныеДанные.НаименованиеПолное;
		ОбластьМакета.Параметры.НАЛОГОВАЯ 	= КонтактныеДанные.ГНСНаименование;
		ОбластьМакета.Параметры.ГОРОД 		= ?(КонтактныеДанные.Регион = "",""," " + КонтактныеДанные.Регион + ",")
												+ ?(КонтактныеДанные.Город = "","",КонтактныеДанные.Город + ",")
												+ ?(КонтактныеДанные.Район = "",""," " + КонтактныеДанные.Район + ",");
		ОбластьМакета.Параметры.АДРЕС 		= ?(КонтактныеДанные.Улица = "","",КонтактныеДанные.Улица + ",")
												+ ?(КонтактныеДанные.Дом = "",""," " + КонтактныеДанные.Дом + ",")
												+ ?(КонтактныеДанные.Корпус = "",""," " + КонтактныеДанные.Корпус + ",")
												+ ?(КонтактныеДанные.Квартира = "",""," " + КонтактныеДанные.Квартира);	
		ОбластьМакета.Параметры.ТЕЛЕФОН 	= КонтактныеДанные.Тел;
		ОбластьМакета.Параметры.ЕМЭЙЛ 		= КонтактныеДанные.Email;
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ОбластьМакета.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьМакета.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьМакета.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьМакета.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьМакета.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьМакета.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьМакета.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьМакета.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьМакета.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьМакета.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьМакета.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьМакета.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьМакета.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьМакета.Параметры.ИНН14 = Сред(ИНН, 14, 1);         
		
		ОбластьМакета.Параметры.ГНС1 = Сред(КодГНС, 1, 1);
		ОбластьМакета.Параметры.ГНС2 = Сред(КодГНС, 2, 1);
		ОбластьМакета.Параметры.ГНС3 = Сред(КодГНС, 3, 1);
		
		Если ЗначениеЗаполнено(ОКПО) Тогда 
			
			ОбластьМакета.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьМакета.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьМакета.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьМакета.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьМакета.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьМакета.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьМакета.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьМакета.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;

		ДатаНачала = НачалоМесяца(Шапка.Дата);
	
		ОбластьМакета.Параметры.ДатаН1 = Сред(ДатаНачала, 1, 1);	
		ОбластьМакета.Параметры.ДатаН2 = Сред(ДатаНачала, 2, 1);	
		ОбластьМакета.Параметры.ДатаН3 = Сред(ДатаНачала, 4, 1);	
		ОбластьМакета.Параметры.ДатаН4 = Сред(ДатаНачала, 5, 1);	
		ОбластьМакета.Параметры.ДатаН5 = Сред(ДатаНачала, 7, 1);	
		ОбластьМакета.Параметры.ДатаН6 = Сред(ДатаНачала, 8, 1);	
		ОбластьМакета.Параметры.ДатаН7 = Сред(ДатаНачала, 9, 1);	
		ОбластьМакета.Параметры.ДатаН8 = Сред(ДатаНачала, 10, 1);		
		
		ДатаОкончания = КонецМесяца(Шапка.Дата);
		
		ОбластьМакета.Параметры.ДатаК1 = Сред(ДатаОкончания, 1, 1);	
		ОбластьМакета.Параметры.ДатаК2 = Сред(ДатаОкончания, 2, 1);	
		ОбластьМакета.Параметры.ДатаК3 = Сред(ДатаОкончания, 4, 1);	
		ОбластьМакета.Параметры.ДатаК4 = Сред(ДатаОкончания, 5, 1);	
		ОбластьМакета.Параметры.ДатаК5 = Сред(ДатаОкончания, 7, 1);	
		ОбластьМакета.Параметры.ДатаК6 = Сред(ДатаОкончания, 8, 1);	
		ОбластьМакета.Параметры.ДатаК7 = Сред(ДатаОкончания, 9, 1);	
		ОбластьМакета.Параметры.ДатаК8 = Сред(ДатаОкончания, 10, 1);
			
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьМакета.Параметры.ИНДЕКС1 = Сред(Индекс, 1, 1);	
			ОбластьМакета.Параметры.ИНДЕКС2 = Сред(Индекс, 2, 1);	
			ОбластьМакета.Параметры.ИНДЕКС3 = Сред(Индекс, 3, 1);	
			ОбластьМакета.Параметры.ИНДЕКС4 = Сред(Индекс, 4, 1);	
			ОбластьМакета.Параметры.ИНДЕКС5 = Сред(Индекс, 5, 1);	
			ОбластьМакета.Параметры.ИНДЕКС6 = Сред(Индекс, 6, 1);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Строки и подвал
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");		
		
	    ТаблицаОтчет = Шапка.ДанныеОтчета.Выгрузить();
		
		ОбластьПодвал.Параметры.СтоимостьБезНДСИтог	= ТаблицаОтчет.Итог("СтоимостьБезНДС");
		ОбластьПодвал.Параметры.СуммаНДСИтог 		= ТаблицаОтчет.Итог("СуммаНДС");
		
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить(ОбластьПодвал);
		
		КоличестовСтрок = ТаблицаОтчет.Количество();
		НомерСтроки = 1;
		
	    Для Каждого СтрокаТаблицы Из ТаблицаОтчет Цикл
			ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);	
			
			Если КоличестовСтрок = НомерСтроки Тогда
				МассивОбластейМакета = Новый Массив;
				МассивОбластейМакета.Добавить(ОбластьСтрока);
				МассивОбластейМакета.Добавить(ОбластьПодвал);				
				
				Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивОбластейМакета) Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;	
			КонецЕсли;				
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			НомерСтроки = НомерСтроки + 1;
	    КонецЦикла;	
		
		//ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетНалоговогоАгента") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетНалоговогоАгента", 
		НСтр("ru = 'Отчет налогового агента'"), 
		ПечатьОтчета(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетНалоговогоАгентаНДС.ПФ_MXL_ОтчетНалоговогоАгента.ПФ_MXL_ОтчетНалоговогоАгента");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетНалоговогоАгента";
	КомандаПечати.Представление = НСтр("ru = 'Отчет налогового агента'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;

КонецПроцедуры

#КонецОбласти

#КонецЕсли