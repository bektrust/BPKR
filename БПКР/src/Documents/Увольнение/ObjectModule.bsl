#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
	ДатаДокумента = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	Если НЕ ЗначениеЗаполнено(ДатаУвольнения) Тогда
		ДатаУвольнения = ДатаДокумента;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДанные(Отказ, РежимПроведения);
	
	ОтразитьДвижения(Отказ, РежимПроведения);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	ВыполнитьКонтроль(ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

//// Процедура - обработчик события ПередЗаписью объекта.
////
//Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
//	
//	Если ОбменДанными.Загрузка Тогда
//		Возврат;
//	КонецЕсли;
//	
//	//РезультатПроверки = СотрудникиФормы.ПроверитьВозможностьВнесенияКадровыхИзменений(Ссылка, Организация, ФизЛицо, ДатаУвольнения);
//	//Если Не РезультатПроверки.ИзмененияВозможны Тогда
//	//	ТекстСообщения = НСтр(
//	//		"ru = 'Документ недоступен для редактирования, т.к. зарегистрированы более поздние изменения по данному сотруднику.'");
//	//	БухгалтерскийУчетСервер.СообщитьОбОшибке(
//	//		ЭтотОбъект,
//	//		ТекстСообщения,
//	//		,
//	//		,
//	//		,
//	//		Отказ);
//	//КонецЕсли;
//		
//КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбработкаПроведения

// Процедура инициализирует данные документа
// и подготавливает таблицы для движения в регистры
//
Процедура ИнициализироватьДанные(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.Увольнение.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
КонецПроцедуры
	
// Процедура заполняет регистры данными
//
Процедура ОтразитьДвижения(Отказ, РежимПроведения)

	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьСотрудники(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьПлановыеНачисленияОкончание(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьПлановыеУдержанияОкончание(ДополнительныеСвойства, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ) 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Сотрудники.Регистратор
		|ИЗ
		|	РегистрСведений.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Организация = &Организация
		|	И Сотрудники.ФизЛицо = &ФизЛицо
		|	И Сотрудники.Период = &Период
		|	И Сотрудники.Регистратор <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияОкончание.Регистратор
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияОкончание КАК ПлановыеНачисленияОкончание
		|ГДЕ
		|	ПлановыеНачисленияОкончание.Организация = &Организация
		|	И ПлановыеНачисленияОкончание.ФизЛицо = &ФизЛицо
		|	И ПлановыеНачисленияОкончание.Период = &Период
		|	И ПлановыеНачисленияОкончание.Регистратор <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияОкончание.Регистратор
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияОкончание КАК ПлановыеУдержанияОкончание
		|ГДЕ
		|	ПлановыеУдержанияОкончание.Организация = &Организация
		|	И ПлановыеУдержанияОкончание.ФизЛицо = &ФизЛицо
		|	И ПлановыеУдержанияОкончание.Период = &Период
		|	И ПлановыеУдержанияОкончание.Регистратор <> &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("Период", ДатаУвольнения);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Регистр "Сотрудники".
	Если НЕ МассивРезультатов[0].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Период действия приказа противоречит кадровому приказу ""%1"". По регистру ""Сотрудники"".'"), 
							ВыборкаИзРезультатаЗапроса.Регистратор);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"Период",
				Отказ);
		КонецЦикла;
	КонецЕсли;
	
	// Регистр "ПлановыеНачисленияОкончание".
	Если НЕ МассивРезультатов[1].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Период действия приказа противоречит кадровому приказу ""%1"". По регистру ""Плановые начисления (окончание)"".'"), 
						ВыборкаИзРезультатаЗапроса.Регистратор);
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"Период",
			Отказ);
	КонецЕсли;
	
	// Регистр "ПлановыеУдержанияОкончание".
	Если НЕ МассивРезультатов[2].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Период действия приказа противоречит кадровому приказу ""%1"". По регистру ""Плановые удержания (окончание)"".'"), 
						ВыборкаИзРезультатаЗапроса.Регистратор);
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"Период",
			Отказ);
	КонецЕсли;
КонецПроцедуры

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьКонтроль(ДополнительныеСвойства, Отказ) 
	
	Если Отказ Тогда
		Возврат;	
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СотрудникиСрезПоследних.Организация КАК Организация,
		|	СотрудникиСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение) КАК ЭтоУвольнение
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК СотрудникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиСрезПервых.ФизЛицо КАК ФизЛицо,
		|	СотрудникиСрезПервых.Период КАК Период
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПервых(
		|			&Период,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК СотрудникиСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияНачалоСрезПервых.ФизЛицо КАК ФизЛицо,
		|	ПлановыеНачисленияНачалоСрезПервых.Период КАК Период
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияНачало.СрезПервых(
		|			&Период,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК ПлановыеНачисленияНачалоСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияОкончаниеСрезПервых.ФизЛицо КАК ФизЛицо,
		|	ПлановыеНачисленияОкончаниеСрезПервых.Период КАК Период
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияОкончание.СрезПервых(
		|			&Период,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК ПлановыеНачисленияОкончаниеСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияОкончаниеСрезПервых.ФизЛицо КАК ФизЛицо,
		|	ПлановыеУдержанияОкончаниеСрезПервых.Период КАК Период
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияОкончание.СрезПервых(
		|			&Период,
		|			Организация = &Организация
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка
		|				И НЕ Регистратор ССЫЛКА Документ.ИсполнительныйЛист) КАК ПлановыеУдержанияОкончаниеСрезПервых");
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", ДатаУвольнения);
	Запрос.УстановитьПараметр("Организация", ДополнительныеСвойства.ДляПроведения.Организация);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Сотрудник не принят в организацию на дату увольнения.
	Если МассивРезультатов[0].Пустой() Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Сотрудник %1 не принят на работу в организацию %2.'"), 
						ФизЛицо, ДополнительныеСвойства.ДляПроведения.Организация);
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ФизЛицо",
			Отказ);
	Иначе 
		// Сотрудник уволен ранее.
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		Если ВыборкаИзРезультатаЗапроса.ЭтоУвольнение Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Сотрудник %1 не принят на работу в организацию %2.'"), 
							ВыборкаИзРезультатаЗапроса.ФизЛицо, ДополнительныеСвойства.ДляПроведения.Организация);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				,
				,
				"ФизЛицо",
				Отказ);
		КонецЕсли; 
	КонецЕсли; 
		
	// По сотруднику есть движения после увольнения по регистру "Сотрудники".
	Если НЕ МассивРезультатов[1].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По сотруднику %1 есть кадровые движения %2 после даты увольнения. По регистру ""Сотрудники"".'"), 
						ВыборкаИзРезультатаЗапроса.ФизЛицо, Формат(ВыборкаИзРезультатаЗапроса.Период, "ДФ=dd.MM.yy"));
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ФизЛицо",
			Отказ);
	КонецЕсли; 
			
	// По сотруднику есть движения после увольнения по регистру "ПлановыеНачисления".
	Если НЕ МассивРезультатов[2].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий(); 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По сотруднику %1 есть кадровые движения %2 после даты увольнения. По регистру ""Плановые начисления (начало)"".'"), 
						ВыборкаИзРезультатаЗапроса.ФизЛицо, Формат(ВыборкаИзРезультатаЗапроса.Период, "ДФ=dd.MM.yy"));
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ФизЛицо",
			Отказ);
	КонецЕсли; 
	
	// По сотруднику есть движения после увольнения по регистру "ПлановыеНачисленияОкончание".
	Если НЕ МассивРезультатов[3].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий(); 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По сотруднику %1 есть кадровые движения %2 после даты увольнения. По регистру ""Плановые начисления (окончание)"".'"), 
						ВыборкаИзРезультатаЗапроса.ФизЛицо, Формат(ВыборкаИзРезультатаЗапроса.Период, "ДФ=dd.MM.yy"));
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ФизЛицо",
			Отказ);
	КонецЕсли; 
			
	// По сотруднику есть движения после увольнения по регистру "ПлановыеУдержанияОкончание".
	Если НЕ МассивРезультатов[4].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По сотруднику %1 есть кадровые движения %2 после даты увольнения. По регистру ""Плановые удержания (окончание)"".'"), 
						ВыборкаИзРезультатаЗапроса.ФизЛицо, Формат(ВыборкаИзРезультатаЗапроса.Период, "ДФ=dd.MM.yy"));
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			"ФизЛицо",
			Отказ);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли