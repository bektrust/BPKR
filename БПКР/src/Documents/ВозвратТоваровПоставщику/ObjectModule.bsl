#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - ДокументСсылка.ПоступлениеТоваровУслуг - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюТоваровУслуг(ДанныеЗаполнения) Экспорт
	
	ДокументОснование 		= ДанныеЗаполнения;	
	Организация				= ДанныеЗаполнения.Организация;
	Склад					= ДанныеЗаполнения.Склад;
	// Сведения о контрагенте
	Контрагент 				= ДанныеЗаполнения.Контрагент;
	ДоговорКонтрагента 		= ДанныеЗаполнения.ДоговорКонтрагента;
	СчетРасчетов 			= ДанныеЗаполнения.СчетРасчетов;
	// Валюта
	ВалютаДокумента 		= ДанныеЗаполнения.ВалютаДокумента;			
	Курс 					= ДанныеЗаполнения.Курс;			
	Кратность 				= ДанныеЗаполнения.Кратность;
	// Налоги
	ЗначениеСтавкиНДС		= ДанныеЗаполнения.ЗначениеСтавкиНДС;
	ЗначениеСтавкиНСП		= ДанныеЗаполнения.ЗначениеСтавкиНСП;
	ЗначениеСтавкиНСПДляОС	= ДанныеЗаполнения.ЗначениеСтавкиНСПДляОС;
	СуммаВключаетНалоги 	= ДанныеЗаполнения.СуммаВключаетНалоги;
	БезналичныйРасчет		= ДанныеЗаполнения.БезналичныйРасчет;	
	// Флаги
	ИспользоватьДопЕдиницы 	= ДанныеЗаполнения.ИспользоватьДопЕдиницы;
	ПоступлениеОтНерезидента = ДанныеЗаполнения.ПоступлениеОтНерезидента;
	
	Товары.Очистить();
	Услуги.Очистить();
	ОС.Очистить();
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрокаТабличнойЧасти = Товары.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, СтрокаТабличнойЧасти);
		НоваяСтрокаТабличнойЧасти.КоличествоПоПоступлению 	= СтрокаТабличнойЧасти.Количество;
		НоваяСтрокаТабличнойЧасти.СуммаПоПоступлению 		= СтрокаТабличнойЧасти.Сумма;
		НоваяСтрокаТабличнойЧасти.СуммаНДСПоПоступлению 	= СтрокаТабличнойЧасти.СуммаНДС;
		НоваяСтрокаТабличнойЧасти.СуммаНСППоПоступлению 	= СтрокаТабличнойЧасти.СуммаНСП;
		НоваяСтрокаТабличнойЧасти.ВсегоПоПоступлению 		= СтрокаТабличнойЧасти.Всего;
	КонецЦикла;	
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Услуги Цикл
		НоваяСтрокаТабличнойЧасти = Услуги.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, СтрокаТабличнойЧасти);
		НоваяСтрокаТабличнойЧасти.КоличествоПоПоступлению 	= СтрокаТабличнойЧасти.Количество;
		НоваяСтрокаТабличнойЧасти.СуммаПоПоступлению 		= СтрокаТабличнойЧасти.Сумма;
		НоваяСтрокаТабличнойЧасти.СуммаНДСПоПоступлению 	= СтрокаТабличнойЧасти.СуммаНДС;
		НоваяСтрокаТабличнойЧасти.СуммаНСППоПоступлению 	= СтрокаТабличнойЧасти.СуммаНСП;
		НоваяСтрокаТабличнойЧасти.ВсегоПоПоступлению 		= СтрокаТабличнойЧасти.Всего;
	КонецЦикла;	
		
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.ОС Цикл
		НоваяСтрокаТабличнойЧасти = ОС.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, СтрокаТабличнойЧасти);
	КонецЦикла;	
	
	СуммаДокумента = Товары.Итог("Всего") + Услуги.Итог("Всего") + ОС.Итог("Всего");
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоЭлектронныйСчетФактураПолученныйЗагрузка(СтрокаТабличнойЧастиДокументы, НайденныеСтроки) Экспорт
	ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ВозвратПоставщику;
	
	Если СтрокаТабличнойЧастиДокументы.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная Тогда 
		БезналичныйРасчет = Истина;	
	КонецЕсли;	
	
	Контрагент = СтрокаТабличнойЧастиДокументы.Контрагент;
	ДоговорКонтрагента = СтрокаТабличнойЧастиДокументы.ДоговорКонтрагента;
	ВалютаДокумента = ДоговорКонтрагента.ВалютаРасчетов;
	
	Курс      = СтрокаТабличнойЧастиДокументы.Курс;
	Кратность = 1;

	СуммаВключаетНалоги = ДоговорКонтрагента.СуммаВключаетНалоги;
	
	СчетаУчета = БухгалтерскийУчетСервер.ПолучитьСчетаРасчетовСКонтрагентом(Организация, Контрагент, ДоговорКонтрагента);
	СчетРасчетов = СчетаУчета.СчетРасчетовПоставщика;
		
	ЗначениеСтавкиНДС = СтрокаТабличнойЧастиДокументы.ЗначениеСтавкиНДС;
		
	ПараметрыРасчета = ПодготовитьПараметрыРасчета();
	
	Товары.Очистить();
	Услуги.Очистить();
	
	Если СтрокаТабличнойЧастиДокументы.ВидОперации = Перечисления.ВидыОперацийЭСФ.ПоставкаТоваров Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуИБазуНДССтрокиТабличнойЧастиПоступление(НоваяСтрока, ПараметрыРасчета,
				ЗначениеЗаполнено(НоваяСтрока.Сумма));
			
			СчетаУчетаНоменклатуры = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Организация, НоваяСтрока.Номенклатура);
			НоваяСтрока.СчетУчета = СчетаУчетаНоменклатуры.СчетУчета;
		КонецЦикла;
	Иначе 	
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			НоваяСтрока = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуИБазуНДССтрокиТабличнойЧастиПоступление(НоваяСтрока, ПараметрыРасчета,
				ЗначениеЗаполнено(НоваяСтрока.Сумма));
			
			СчетаУчетаНоменклатуры = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Организация, НоваяСтрока.Номенклатура);
			НоваяСтрока.СчетРасходов = СчетаУчетаНоменклатуры.СчетРасходов;
		КонецЦикла;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Всего") + Услуги.Итог("Всего") + ОС.Итог("Всего");

КонецПроцедуры

Функция ПодготовитьПараметрыРасчета() Экспорт

	ПризнакСтраныЕАЭС 			= Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС;
	ПризнакСтраныИмпортЭкспорт 	= Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ИмпортЭкспорт;
	
	ПараметрыРасчета = ОбработкаТабличныхЧастейКлиентСервер.ШаблонПараметровРасчета();
	ПараметрыРасчета.ПризнакСтраныЕАЭС = ПризнакСтраныЕАЭС;
	ПараметрыРасчета.ЕстьАкциз = Истина;
	ПараметрыРасчета.СуммаВключаетНалоги = СуммаВключаетНалоги;
	ПараметрыРасчета.ЗначениеСтавкиНДС = ЗначениеСтавкиНДС;
	ПараметрыРасчета.БезналичныйРасчет = БезналичныйРасчет;
	
	Если Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.КР Тогда
		ПараметрыРасчета.КурсДокумента = 1;
		ПараметрыРасчета.КратностьДокумента = 1;
	Иначе		
		ПараметрыРасчета.КурсДокумента = Курс;
		ПараметрыРасчета.КратностьДокумента = Кратность;
	КонецЕсли;
	
	ПараметрыРасчета.РассчитатьБазуНДС = ПризнакСтраныЕАЭС;
	ПараметрыРасчета.РассчитатьОтБазыНДС = ПризнакСтраныЕАЭС;
	ПараметрыРасчета.ПризнакСтраныИмпортЭкспорт = ПризнакСтраныИмпортЭкспорт;

	Возврат ПараметрыРасчета;
КонецФункции

#КонецОбласти
	
#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеТоваровУслуг")] = "ЗаполнитьПоПоступлениюТоваровУслуг";
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Проверка заполнения табличных частей
	Если Товары.Количество() = 0
		И Услуги.Количество() = 0
		И ОС.Количество() = 0 Тогда	
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не заполнен ни один список.'"),,,,Отказ)		
	КонецЕсли;
	
	Если Товары.Количество() = 0 Тогда
		БухгалтерскийУчетСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Склад");
	КонецЕсли;
	
	Если Курс = 0 Или Кратность = 0 Тогда 
		ТекстСообщения = НСтр("ru = 'Не заполнен курс валюты ""%1"". Откройте список валют (Банк и касса - Валюты) и проверьте,
			|что у валюты ""%1"" установлен курс на дату %2 или ранее.
			|Перевыберите договор и заново проведите документ.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ВалютаДокумента, Формат(Дата, "ДЛФ=D"));	
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
	// Контроль заполнения Контрагента ГНС.
	Если Контрагент.ПризнакСтраны = Перечисления.ПризнакиСтраны.ЕАЭС Тогда 
		КонтрагентГНС = Организация.КонтрагентГНС;
		Если НЕ ЗначениеЗаполнено(КонтрагентГНС) Тогда 
			ТекстСообщения = НСтр("ru = 'Не заполнен Контрагент ГНС. Откройте организацию и проверьте, что поле Контрагент ГНС заполнено.
				|Заново проведите документ.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.Организация",, Отказ);
		Иначе 
			СписокВидовДоговора = Новый СписокЗначений;
			СписокВидовДоговора.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
			ДоговорКонтрагентаГНС = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(КонтрагентГНС, Организация, СписокВидовДоговора);
			
			Если НЕ ЗначениеЗаполнено(ДоговорКонтрагентаГНС) Тогда 
				ТекстСообщения = НСтр("ru = 'Не установлен основной договор у Контрагента ГНС.
					|Откройте организацию и перейдите к указанному Контрагенту ГНС. На вкладке Договоры контрагента установите основной договор.
					|Вид договора должен быть Прочее, валюта договора KGS. Заново проведите документ.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.Организация",, Отказ);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	Если ЭтоПоступлениеБезНДС Тогда 
		ПроверяемыеРеквизиты.Добавить("НомерБланкаСФ");	
	КонецЕсли;	

	ОбщегоНазначенияБПСервер.ДобавитьНепроверяемыеРеквизитыПоПараметрамФункциональныхОпций(МассивНепроверяемыхРеквизитов, Организация, Дата);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если ПолныйВозврат Тогда
		ПроверяемыеРеквизиты.Добавить("ДокументОснование");	
	КонецЕсли;	
		
	// Выполнение предварительного контроля.
	ВыполнитьПредварительныйКонтроль(Отказ);	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Всего") + Услуги.Итог("Всего") + ОС.Итог("Всего");
	
	// В случае если очистили дату, но не очистили серию бланка СФ.
	// Дата нужна для записи в РС "РеестрПриобретенныхМатериальныхРесурсов".
	Если НЕ ЗначениеЗаполнено(ДатаСф) Тогда
		ДатаСф = Дата;				
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДанные(Отказ, РежимПроведения);
	
	ОтразитьДвижения(Отказ, РежимПроведения);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	СерияБланкаСФ = "";
	НомерБланкаСФ = "";
	ДатаСФ = '00010101';
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбработкаПроведения

// Процедура инициализирует данные документа
// и подготовливает таблицы для движения в регистры
//
Процедура ИнициализироватьДанные(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ВозвратТоваровПоставщику.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
КонецПроцедуры
	
// Процедура заполняет регистры данными
//
Процедура ОтразитьДвижения(Отказ, РежимПроведения)

	// Отражение в разделах учета.
	Если НЕ ПолныйВозврат Тогда
		УчетТоваров.СформироватьДвиженияВозвратТоваровПоставщику(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТовары,
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСписанныеТовары, 
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты, Движения, Отказ, ПрямыеПроводки);
			
		УчетМБП.СформироватьДвиженияВозвратМБПоставщику(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаМБП,
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСписанныеМБП, 
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеквизиты, Движения, Отказ, ПрямыеПроводки);
	КонецЕсли;			
			
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Отказ);   	
	БухгалтерскийУчетСервер.ОтразитьПоступлениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСведенияОПоступлении(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьРеестрПриобретенныхМатериальныхРесурсов(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьРеестрВвезенных(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьНДСНаИмпорт(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьРеестрЗакупок(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСведенияПоПоказателямИмпорта(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСостоянияОС(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСобытияОС(ДополнительныеСвойства, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	// Проверка остатков по поступлению и возвращаемые позиции.
	Если ЗначениеЗаполнено(ДокументОснование) Тогда 
		МассивТаблиц = ПолучитьДанныеПоПоступлению(Истина);
		
		Если МассивТаблиц.Количество() = 0 Тогда
			Отказ = Истина
			
		Иначе	
			ТаблицаТовары = МассивТаблиц[0];
			
			Для Каждого СтрокаТабличнойЧасти Из Товары Цикл
				
				Результат = ТаблицаТовары.Найти(СтрокаТабличнойЧасти.Номенклатура, "Номенклатура");
				
				Если Результат = Неопределено Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Данной позиции ""%1"" нет в поступлении ""%2"".'"), 
												СтрокаТабличнойЧасти.Номенклатура, ДокументОснование);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
					
				Иначе
					Если Результат.Количество < СтрокаТабличнойЧасти.Количество Тогда
						ТекстСообщения = СтрШаблон(НСтр("ru = 'Возвращаемое количество по позиции ""%1"" превышено на %2.'"), 
											СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Количество - Результат.Количество);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);	
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
			
			ТаблицаУслуги = МассивТаблиц[1];
			
			Для Каждого СтрокаТабличнойЧасти Из Услуги Цикл
				
				Результат = ТаблицаУслуги.Найти(СтрокаТабличнойЧасти.Номенклатура, "Номенклатура");
				
				Если Результат = Неопределено Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Данной позиции ""%1"" нет в поступлении ""%2"".'"), 
												СтрокаТабличнойЧасти.Номенклатура, ДокументОснование);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
					
				Иначе
					Если Результат.Количество < СтрокаТабличнойЧасти.Количество Тогда
						ТекстСообщения = СтрШаблон(НСтр("ru = 'Возвращаемое количество по позиции ""%1"" превышено на %2.'"), 
											СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Количество - Результат.Количество);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);	
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
	
	
	// Полный возврат
	Если ПолныйВозврат И ЗначениеЗаполнено(ДокументОснование) Тогда
		
		// Реквизиты шапки
		Если НЕ Организация = ДокументОснование.Организация Тогда
			ТекстСообщения = НСтр("ru = 'Организация в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.Организация",Отказ);	
		КонецЕсли;
		
		Если НЕ Склад = ДокументОснование.Склад Тогда
			ТекстСообщения = НСтр("ru = 'Склад в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.Склад",Отказ);	
		КонецЕсли;
		
		Если НЕ Контрагент = ДокументОснование.Контрагент Тогда
			ТекстСообщения = НСтр("ru = 'Контрагент в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.Контрагент",Отказ);	
		КонецЕсли;
		
		Если НЕ ДоговорКонтрагента = ДокументОснование.ДоговорКонтрагента Тогда
			ТекстСообщения = НСтр("ru = 'Договор в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.ДоговорКонтрагента",Отказ);	
		КонецЕсли;
		
		Если НЕ ЗначениеСтавкиНДС = ДокументОснование.ЗначениеСтавкиНДС Тогда
			ТекстСообщения = НСтр("ru = 'Значение ставки НДС в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.ЗначениеСтавкиНДС",Отказ);	
		КонецЕсли;
		
		Если НЕ СчетРасчетов = ДокументОснование.СчетРасчетов Тогда
			ТекстСообщения = НСтр("ru = 'Счет расчетов в возврате и в основании не равны.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.СчетРасчетов",Отказ);	
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Количество КАК Количество,
			|	Товары.Цена КАК Цена,
			|	Товары.Сумма КАК Сумма,
			|	Товары.СуммаНДС КАК СуммаНДС,
			|	Товары.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
			|	Товары.СуммаНСП КАК СуммаНСП,
			|	Товары.Всего КАК Всего,
			|	Товары.ЗачетНДС КАК ЗачетНДС,
			|	Товары.СчетУчета КАК СчетУчета,
			|	Товары.СуммаАкциза КАК СуммаАкциза
			|ПОМЕСТИТЬ ВременнаяТаблицаТоварыВозврат
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Услуги.Номенклатура КАК Номенклатура,
			|	Услуги.Количество КАК Количество,
			|	Услуги.Цена КАК Цена,
			|	Услуги.Сумма КАК Сумма,
			|	Услуги.СуммаНДС КАК СуммаНДС,
			|	Услуги.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
			|	Услуги.СуммаНСП КАК СуммаНСП,
			|	Услуги.Всего КАК Всего,
			|	Услуги.ЗачетНДС КАК ЗачетНДС,
			|	Услуги.СчетРасходов КАК СчетРасходов,
			|	Услуги.Субконто1 КАК Субконто1,
			|	Услуги.Субконто2 КАК Субконто2,
			|	Услуги.Субконто3 КАК Субконто3,
			|	Услуги.СуммаАкциза КАК СуммаАкциза
			|ПОМЕСТИТЬ ВременнаяТаблицаУслугиВозврат
			|ИЗ
			|	&Услуги КАК Услуги
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ОС.Сумма КАК Сумма,
			|	ОС.СуммаНДС КАК СуммаНДС,
			|	ОС.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП,
			|	ОС.СуммаНСП КАК СуммаНСП,
			|	ОС.Всего КАК Всего,
			|	ОС.ЗачетНДС КАК ЗачетНДС,
			|	ОС.СуммаАкциза КАК СуммаАкциза
			|ПОМЕСТИТЬ ВременнаяТаблицаОСВозврат
			|ИЗ
			|	&ОС КАК ОС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Номенклатура КАК НоменклатураПоступление,
			|	ВременнаяТаблицаТоварыВозврат.Номенклатура КАК НоменклатураВозврат
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТоварыВозврат КАК ВременнаяТаблицаТоварыВозврат
			|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = ВременнаяТаблицаТоварыВозврат.Номенклатура
			|			И ПоступлениеТоваровУслугТовары.Количество = ВременнаяТаблицаТоварыВозврат.Количество
			|			И ПоступлениеТоваровУслугТовары.Цена = ВременнаяТаблицаТоварыВозврат.Цена
			|			И ПоступлениеТоваровУслугТовары.Сумма = ВременнаяТаблицаТоварыВозврат.Сумма
			|			И ПоступлениеТоваровУслугТовары.СуммаНДС = ВременнаяТаблицаТоварыВозврат.СуммаНДС
			|			И ПоступлениеТоваровУслугТовары.ЗначениеСтавкиНСП = ВременнаяТаблицаТоварыВозврат.ЗначениеСтавкиНСП
			|			И ПоступлениеТоваровУслугТовары.СуммаНСП = ВременнаяТаблицаТоварыВозврат.СуммаНСП
			|			И ПоступлениеТоваровУслугТовары.Всего = ВременнаяТаблицаТоварыВозврат.Всего
			|			И ПоступлениеТоваровУслугТовары.ЗачетНДС = ВременнаяТаблицаТоварыВозврат.ЗачетНДС
			|			И ПоступлениеТоваровУслугТовары.СчетУчета = ВременнаяТаблицаТоварыВозврат.СчетУчета
			|			И ПоступлениеТоваровУслугТовары.СуммаАкциза = ВременнаяТаблицаТоварыВозврат.СуммаАкциза
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
			|	И (ПоступлениеТоваровУслугТовары.Номенклатура ЕСТЬ NULL
			|			ИЛИ ВременнаяТаблицаТоварыВозврат.Номенклатура ЕСТЬ NULL)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугУслуги.Номенклатура КАК НоменклатураПоступление,
			|	ВременнаяТаблицаУслугиВозврат.Номенклатура КАК НоменклатураВозврат
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаУслугиВозврат КАК ВременнаяТаблицаУслугиВозврат
			|		ПО ПоступлениеТоваровУслугУслуги.Номенклатура = ВременнаяТаблицаУслугиВозврат.Номенклатура
			|			И ПоступлениеТоваровУслугУслуги.Количество = ВременнаяТаблицаУслугиВозврат.Количество
			|			И ПоступлениеТоваровУслугУслуги.Цена = ВременнаяТаблицаУслугиВозврат.Цена
			|			И ПоступлениеТоваровУслугУслуги.Сумма = ВременнаяТаблицаУслугиВозврат.Сумма
			|			И ПоступлениеТоваровУслугУслуги.СуммаНДС = ВременнаяТаблицаУслугиВозврат.СуммаНДС
			|			И ПоступлениеТоваровУслугУслуги.ЗначениеСтавкиНСП = ВременнаяТаблицаУслугиВозврат.ЗначениеСтавкиНСП
			|			И ПоступлениеТоваровУслугУслуги.СуммаНСП = ВременнаяТаблицаУслугиВозврат.СуммаНСП
			|			И ПоступлениеТоваровУслугУслуги.Всего = ВременнаяТаблицаУслугиВозврат.Всего
			|			И ПоступлениеТоваровУслугУслуги.ЗачетНДС = ВременнаяТаблицаУслугиВозврат.ЗачетНДС
			|			И ПоступлениеТоваровУслугУслуги.СчетРасходов = ВременнаяТаблицаУслугиВозврат.СчетРасходов
			|			И ПоступлениеТоваровУслугУслуги.Субконто1 = ВременнаяТаблицаУслугиВозврат.Субконто1
			|			И ПоступлениеТоваровУслугУслуги.Субконто2 = ВременнаяТаблицаУслугиВозврат.Субконто2
			|			И ПоступлениеТоваровУслугУслуги.Субконто3 = ВременнаяТаблицаУслугиВозврат.Субконто3
			|			И ПоступлениеТоваровУслугУслуги.СуммаАкциза = ВременнаяТаблицаУслугиВозврат.СуммаАкциза
			|ГДЕ
			|	ПоступлениеТоваровУслугУслуги.Ссылка = &ДокументОснование
			|	И (ПоступлениеТоваровУслугУслуги.Номенклатура ЕСТЬ NULL
			|			ИЛИ ВременнаяТаблицаУслугиВозврат.Номенклатура ЕСТЬ NULL)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугОС.ОсновноеСредство КАК ОсновноеСредствоПоступление,
			|	ВременнаяТаблицаОСВозврат.ОсновноеСредство КАК ОсновноеСредствоВозврат
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОСВозврат КАК ВременнаяТаблицаОСВозврат
			|		ПО ПоступлениеТоваровУслугОС.ОсновноеСредство = ВременнаяТаблицаОСВозврат.ОсновноеСредство
			|			И ПоступлениеТоваровУслугОС.Сумма = ВременнаяТаблицаОСВозврат.Сумма
			|			И ПоступлениеТоваровУслугОС.СуммаНДС = ВременнаяТаблицаОСВозврат.СуммаНДС
			|			И ПоступлениеТоваровУслугОС.ЗначениеСтавкиНСП = ВременнаяТаблицаОСВозврат.ЗначениеСтавкиНСП
			|			И ПоступлениеТоваровУслугОС.СуммаНСП = ВременнаяТаблицаОСВозврат.СуммаНСП
			|			И ПоступлениеТоваровУслугОС.Всего = ВременнаяТаблицаОСВозврат.Всего
			|			И ПоступлениеТоваровУслугОС.ЗачетНДС = ВременнаяТаблицаОСВозврат.ЗачетНДС
			|			И ПоступлениеТоваровУслугОС.СуммаАкциза = ВременнаяТаблицаОСВозврат.СуммаАкциза
			|ГДЕ
			|	ПоступлениеТоваровУслугОС.Ссылка = &ДокументОснование
			|	И (ПоступлениеТоваровУслугОС.ОсновноеСредство ЕСТЬ NULL
			|			ИЛИ ВременнаяТаблицаОСВозврат.ОсновноеСредство ЕСТЬ NULL)";
		Запрос.УстановитьПараметр("Товары", 			Товары);
		Запрос.УстановитьПараметр("Услуги", 			Услуги);
		Запрос.УстановитьПараметр("ОС", 				ОС);
		Запрос.УстановитьПараметр("ДокументОснование", 	ДокументОснование);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Товары
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'В возврате и в основании не сходятся данные по закладке ""Товары"".'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.Товары",Отказ);	
		КонецЕсли;
		
		// Услуги
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'В возврате и в основании не сходятся данные по закладке ""Услуги"".'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.Услуги",Отказ);	
		КонецЕсли;
		
		// ОС
		Если НЕ МассивРезультатов[5].Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'В возврате и в основании не сходятся данные по закладке ""ОС"".'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,"Объект.ОС",Отказ);	
		КонецЕсли;	
	КонецЕсли;
	
	// Проверка ставок НСП
	Если Дата >= Дата(2022,01,01) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ПОМЕСТИТЬ ВременнаяТаблицаТоварыВозврат
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Услуги.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ПОМЕСТИТЬ ВременнаяТаблицаУслугиВозврат
		|ИЗ
		|	&Услуги КАК Услуги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОС.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ПОМЕСТИТЬ ВременнаяТаблицаОСВозврат
		|ИЗ
		|	&ОС КАК ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаТоварыВозврат.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ИЗ
		|	ВременнаяТаблицаТоварыВозврат КАК ВременнаяТаблицаТоварыВозврат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаУслугиВозврат.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ИЗ
		|	ВременнаяТаблицаУслугиВозврат КАК ВременнаяТаблицаУслугиВозврат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВременнаяТаблицаОСВозврат.ЗначениеСтавкиНСП КАК ЗначениеСтавкиНСП
		|ИЗ
		|	ВременнаяТаблицаОСВозврат КАК ВременнаяТаблицаОСВозврат";
		
		Запрос.УстановитьПараметр("Товары", 			Товары);
		Запрос.УстановитьПараметр("Услуги", 			Услуги);
		Запрос.УстановитьПараметр("ОС", 				ОС);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Товары
		Если НЕ МассивРезультатов[3].Пустой() И МассивРезультатов[3].Выбрать().Количество() >= 2 Тогда
			ТекстСообщения = НСтр("ru = 'На закладке ""Товары"" значения ставок НСП должны быть одинаковыми.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,, "Объект.Товары", Отказ);	
		КонецЕсли;
		
		// Услуги
		Если НЕ МассивРезультатов[4].Пустой() И МассивРезультатов[4].Выбрать().Количество() >= 2 Тогда
			ТекстСообщения = НСтр("ru = 'На закладке ""Услуги"" значения ставок НСП должны быть одинаковыми.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,, "Объект.Услуги", Отказ);	
		КонецЕсли;
		
		// ОС
		Если НЕ МассивРезультатов[5].Пустой() И МассивРезультатов[5].Выбрать().Количество() >= 2 Тогда
			ТекстСообщения = НСтр("ru = 'На закладке ""ОС"" значения ставок НСП должны быть одинаковыми.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,, "Объект.ОС", Отказ);	
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

// Функция возвращает выборку данных ТЧ "Товары" и "Услуги" из запроса 
// по документу поступления одновременно проверяя небыло ли ранее
// возвратов по этому поступлению и если были, вычитает то что уже возвращено.
//
Функция ПолучитьДанныеПоПоступлению(ПоказатьСообщение) Экспорт

	МассивВозврата = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслугТовары.КоличествоДопЕдиницы КАК КоличествоДопЕдиницы,
		|	ПоступлениеТоваровУслугТовары.КоэффициентДопЕдиницы КАК КоэффициентДопЕдиницы,
		|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
		|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
		|	ПоступлениеТоваровУслугТовары.СуммаНСП КАК СуммаНСП,
		|	ПоступлениеТоваровУслугТовары.Всего КАК Всего,
		|	ПоступлениеТоваровУслугТовары.ЗачетНДС КАК ЗачетНДС,
		|	ПоступлениеТоваровУслугТовары.СчетУчета КАК СчетУчета,
		|	ПоступлениеТоваровУслугТовары.Вес КАК Вес,
		|	ПоступлениеТоваровУслугТовары.СуммаАкциза КАК СуммаАкциза,
		|	ПоступлениеТоваровУслугТовары.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаПоступлениеТоваров
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументПоступления
		|	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугУслуги.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслугУслуги.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеТоваровУслугУслуги.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслугУслуги.Количество КАК Количество,
		|	ПоступлениеТоваровУслугУслуги.Цена КАК Цена,
		|	ПоступлениеТоваровУслугУслуги.Сумма КАК Сумма,
		|	ПоступлениеТоваровУслугУслуги.СуммаНДС КАК СуммаНДС,
		|	ПоступлениеТоваровУслугУслуги.СуммаНСП КАК СуммаНСП,
		|	ПоступлениеТоваровУслугУслуги.Всего КАК Всего,
		|	ПоступлениеТоваровУслугУслуги.ЗачетНДС КАК ЗачетНДС,
		|	ПоступлениеТоваровУслугУслуги.СчетРасходов КАК СчетРасходов,
		|	ПоступлениеТоваровУслугУслуги.Субконто1 КАК Субконто1,
		|	ПоступлениеТоваровУслугУслуги.Субконто2 КАК Субконто2,
		|	ПоступлениеТоваровУслугУслуги.Субконто3 КАК Субконто3,
		|	ПоступлениеТоваровУслугУслуги.СуммаАкциза КАК СуммаАкциза
		|ПОМЕСТИТЬ ВременнаяТаблицаПоступлениеУслуг
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	ПоступлениеТоваровУслугУслуги.Ссылка = &ДокументПоступления
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугОС.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслугОС.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеТоваровУслугОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПоступлениеТоваровУслугОС.Сумма КАК Сумма,
		|	ПоступлениеТоваровУслугОС.СуммаНДС КАК СуммаНДС,
		|	ПоступлениеТоваровУслугОС.СуммаНСП КАК СуммаНСП,
		|	ПоступлениеТоваровУслугОС.Всего КАК Всего,
		|	ПоступлениеТоваровУслугОС.СуммаАкциза КАК СуммаАкциза,
		|	ПоступлениеТоваровУслугОС.ЗачетНДС КАК ЗачетНДС,
		|	ПоступлениеТоваровУслугОС.СчетУчета КАК СчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаПоступлениеОС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
		|ГДЕ
		|	ПоступлениеТоваровУслугОС.Ссылка = &ДокументПоступления
		|	И ПоступлениеТоваровУслугОС.Ссылка.Проведен
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Сумма) КАК Сумма,
		|	СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВозвратТоваровПоставщикуТовары.СуммаНСП) КАК СуммаНСП,
		|	СУММА(ВозвратТоваровПоставщикуТовары.Всего) КАК Всего,
		|	СУММА(ВозвратТоваровПоставщикуТовары.СуммаАкциза) КАК СуммаАкциза,
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВременнаяТаблицаВозвратТоваров
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка <> &Ссылка
		|	И ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование = &ДокументПоступления
		|	И ВозвратТоваровПоставщикуТовары.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ДокументОснование,
		|	ВозвратТоваровПоставщикуТовары.Номенклатура
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуУслуги.Номенклатура КАК Номенклатура,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.Количество) КАК Количество,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.Сумма) КАК Сумма,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.СуммаНСП) КАК СуммаНСП,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.Всего) КАК Всего,
		|	СУММА(ВозвратТоваровПоставщикуУслуги.СуммаАкциза) КАК СуммаАкциза,
		|	ВозвратТоваровПоставщикуУслуги.Ссылка.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВременнаяТаблицаВозвратУслуг
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК ВозвратТоваровПоставщикуУслуги
		|ГДЕ
		|	ВозвратТоваровПоставщикуУслуги.Ссылка <> &Ссылка
		|	И ВозвратТоваровПоставщикуУслуги.Ссылка.ДокументОснование = &ДокументПоступления
		|	И ВозвратТоваровПоставщикуУслуги.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровПоставщикуУслуги.Ссылка.ДокументОснование,
		|	ВозвратТоваровПоставщикуУслуги.Номенклатура
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуОС.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВременнаяТаблицаВозвратОС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ОС КАК ВозвратТоваровПоставщикуОС
		|ГДЕ
		|	ВозвратТоваровПоставщикуОС.Ссылка <> &Ссылка
		|	И ВозвратТоваровПоставщикуОС.Ссылка.ДокументОснование = &ДокументПоступления
		|	И ВозвратТоваровПоставщикуОС.Ссылка.Проведен
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПоступлениеТоваров.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаПоступлениеТоваров.Количество - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.Количество, 0) КАК
		|		Количество,
		|	ВременнаяТаблицаПоступлениеТоваров.Цена КАК Цена,
		|	ВременнаяТаблицаПоступлениеТоваров.Сумма - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаПоступлениеТоваров.СуммаНДС - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.СуммаНДС, 0) КАК СуммаНДС,
		|	ВременнаяТаблицаПоступлениеТоваров.СуммаНСП - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.СуммаНСП, 0) КАК СуммаНСП,
		|	ВременнаяТаблицаПоступлениеТоваров.Всего - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.Всего, 0) КАК Всего,
		|	ВременнаяТаблицаПоступлениеТоваров.СуммаАкциза - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.СуммаАкциза, 0) КАК
		|		СуммаАкциза,
		|	ВременнаяТаблицаПоступлениеТоваров.СчетУчета КАК СчетУчета,
		|	ВременнаяТаблицаПоступлениеТоваров.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаПоступлениеТоваров.ИмпортОсвобожденныйОтНДС КАК ИмпортОсвобожденныйОтНДС
		|ИЗ
		|	ВременнаяТаблицаПоступлениеТоваров КАК ВременнаяТаблицаПоступлениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаВозвратТоваров КАК ВременнаяТаблицаВозвратТоваров
		|		ПО ВременнаяТаблицаПоступлениеТоваров.Ссылка = ВременнаяТаблицаВозвратТоваров.ДокументОснование
		|		И ВременнаяТаблицаПоступлениеТоваров.Номенклатура = ВременнаяТаблицаВозвратТоваров.Номенклатура
		|ГДЕ
		|	ВременнаяТаблицаПоступлениеТоваров.Количество - ЕСТЬNULL(ВременнаяТаблицаВозвратТоваров.Количество, 0) > 0
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПоступлениеУслуг.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаПоступлениеУслуг.Количество - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.Количество, 0) КАК Количество,
		|	ВременнаяТаблицаПоступлениеУслуг.Цена КАК Цена,
		|	ВременнаяТаблицаПоступлениеУслуг.Сумма - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.Сумма, 0) КАК Сумма,
		|	ВременнаяТаблицаПоступлениеУслуг.СуммаНДС - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.СуммаНДС, 0) КАК СуммаНДС,
		|	ВременнаяТаблицаПоступлениеУслуг.СуммаНСП - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.СуммаНСП, 0) КАК СуммаНСП,
		|	ВременнаяТаблицаПоступлениеУслуг.Всего - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.Всего, 0) КАК Всего,
		|	ВременнаяТаблицаПоступлениеУслуг.СуммаАкциза - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.СуммаАкциза, 0) КАК СуммаАкциза,
		|	ВременнаяТаблицаПоступлениеУслуг.СчетРасходов КАК СчетРасходов,
		|	ВременнаяТаблицаПоступлениеУслуг.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаПоступлениеУслуг.Субконто1 КАК Субконто1,
		|	ВременнаяТаблицаПоступлениеУслуг.Субконто2 КАК Субконто2,
		|	ВременнаяТаблицаПоступлениеУслуг.Субконто3 КАК Субконто3
		|ИЗ
		|	ВременнаяТаблицаПоступлениеУслуг КАК ВременнаяТаблицаПоступлениеУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаВозвратУслуг КАК ВременнаяТаблицаВозвратУслуг
		|		ПО ВременнаяТаблицаПоступлениеУслуг.Ссылка = ВременнаяТаблицаВозвратУслуг.ДокументОснование
		|		И ВременнаяТаблицаПоступлениеУслуг.Номенклатура = ВременнаяТаблицаВозвратУслуг.Номенклатура
		|ГДЕ
		|	ВременнаяТаблицаПоступлениеУслуг.Количество - ЕСТЬNULL(ВременнаяТаблицаВозвратУслуг.Количество, 0) > 0
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаПоступлениеОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаПоступлениеОС.Сумма КАК Сумма,
		|	ВременнаяТаблицаПоступлениеОС.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаПоступлениеОС.СуммаНСП КАК СуммаНСП,
		|	ВременнаяТаблицаПоступлениеОС.Всего КАК Всего,
		|	ВременнаяТаблицаПоступлениеОС.СуммаАкциза КАК СуммаАкциза,
		|	ВременнаяТаблицаПоступлениеОС.ЗачетНДС КАК ЗачетНДС,
		|	ВременнаяТаблицаПоступлениеОС.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВременнаяТаблицаПоступлениеОС КАК ВременнаяТаблицаПоступлениеОС
		|ГДЕ
		|	НЕ ВременнаяТаблицаПоступлениеОС.ОсновноеСредство В
		|		(ВЫБРАТЬ
		|			ВременнаяТаблицаВозвратОС.ОсновноеСредство
		|		ИЗ
		|			ВременнаяТаблицаВозвратОС)";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументОснование);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТовары 	= МассивРезультатов[6].Выгрузить();
	ТаблицаУслуги 	= МассивРезультатов[7].Выгрузить();
	ТаблицаОС 		= МассивРезультатов[8].Выгрузить();
	
	Если ПоказатьСообщение И ТаблицаТовары.Количество() = 0 И ТаблицаУслуги.Количество() = 0 И ТаблицаОС.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По поступлению ""%1"" возвращены все позиции.'"), ДокументОснование);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
	Иначе
		МассивВозврата.Добавить(ТаблицаТовары);
		МассивВозврата.Добавить(ТаблицаУслуги);
		МассивВозврата.Добавить(ТаблицаОС);
	КонецЕсли;

	Возврат МассивВозврата;
	
КонецФункции // ПолучитьДанныеПоПоступлению()
	
#КонецОбласти	

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли