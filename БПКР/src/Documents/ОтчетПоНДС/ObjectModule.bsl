#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = КонецМесяца(ТекущаяДатаСеанса());
		Если ЕстьДокументВУказанныйПериод(Дата) Тогда
			Дата = Дата('00010101');
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
КонецПроцедуры

Функция ЕстьДокументВУказанныйПериод(Дата)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоНДС.Ссылка
		|ИЗ
		|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
		|ГДЕ
		|	НЕ ОтчетПоНДС.ПометкаУдаления
		|	И КОНЕЦПЕРИОДА(ОтчетПоНДС.Дата, МЕСЯЦ) = &Дата";
	
	Запрос.УстановитьПараметр("Дата", Дата);		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 0 	

КонецФункции 

// Процедура заполняет табличную часть
//
Процедура ЗаполнитьТабличнуюЧастьОтчетОсновной() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗакрытиеМесяца.Ссылка,
		|	ЗакрытиеМесяца.РасчетНДС
		|ИЗ
		|	Документ.ЗакрытиеМесяца КАК ЗакрытиеМесяца
		|ГДЕ
		|	НЕ ЗакрытиеМесяца.ПометкаУдаления
		|	И КОНЕЦПЕРИОДА(ЗакрытиеМесяца.Дата, МЕСЯЦ) = &Дата
		|	И ЗакрытиеМесяца.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗакрытиеМесяцаНДС.Строка,
		|	ЗакрытиеМесяцаНДС.Содержание,
		|	ЗакрытиеМесяцаНДС.Сумма
		|ИЗ
		|	Документ.ЗакрытиеМесяца.НДС КАК ЗакрытиеМесяцаНДС
		|ГДЕ
		|	ЗакрытиеМесяцаНДС.Ссылка.Дата = &Дата
		|	И ЗакрытиеМесяцаНДС.Ссылка.Проведен
		|	И ЗакрытиеМесяцаНДС.Ссылка.Организация = &Организация";				
	Запрос.УстановитьПараметр("Организация", 	Организация);	
	Запрос.УстановитьПараметр("Дата", 			КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаЗМ = РезультатЗапроса[0].Выбрать();	
	Если ВыборкаЗМ.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет документа ""Закрытие месяца"". Табличная часть ""Отчет по НДС"" не может быть заполнена'"), 
										ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;	
	ИначеЕсли ВыборкаЗМ.Следующий() И НЕ ВыборкаЗМ.РасчетНДС Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В документе ""Закрытие месяца"" за период ""%1"" расчет НДС не производился. Табличная часть ""Отчет по НДС"" не может быть заполнена'"), 
										ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;	
	КонецЕсли;
	
	ОтчетОсновной.Загрузить(РезультатЗапроса[1].Выгрузить());
	
КонецПроцедуры // ЗаполнитьТабличнуюЧасть()

// Процедура заполняет табличную часть Реестр поставок
// Приложение 1 и Приложение 4 (нологовый контракт)
//
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрПоставок(НалоговыйКонтракт, ОтчетПоНДСПоПоставке) Экспорт

	ТекстыЗапроса = Новый Массив;

	// Контрагенты.
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ВЫБОР
		|		КОГДА Контрагенты.НаименованиеПолное <> """"
		|			ТОГДА Контрагенты.НаименованиеПолное
		|		ИНАЧЕ Контрагенты.Наименование
		|	КОНЕЦ КАК КонтрагентНаименование,
		|	Контрагенты.ИНН КАК ИННКонтрагента,
		|	ВЫБОР
		|		КОГДА Контрагенты.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.КР)
		|			ТОГДА Контрагенты.ГНС.Код
		|		ИНАЧЕ Контрагенты.СтранаРезидентства.Код
		|	КОНЕЦ КАК КодГНС,
		|	ВЫБОР
		|		КОГДА Контрагенты.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК КонтрагентСтранаРезидентстваЕАЭС
		|ПОМЕСТИТЬ ВременнаяТаблицаКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Авансы / доодгрузка.
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	АвансыДоотгрузкаОбороты.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаКонтрагенты.КонтрагентНаименование КАК КонтрагентНаименование,
		|	ВременнаяТаблицаКонтрагенты.ИННКонтрагента КАК ИННКонтрагента,
		|	ВременнаяТаблицаКонтрагенты.КодГНС КАК КодГНС,
		|	АвансыДоотгрузкаОбороты.Договор КАК Договор,
		|	АвансыДоотгрузкаОбороты.Договор.СтавкаНДС КАК СтавкаНДС,
		|	АвансыДоотгрузкаОбороты.ДокументА КАК ДокументА,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ""АВАНС-2""
		|		КОГДА АвансыДоотгрузкаОбороты.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ИмпортЭкспорт)
		|			ТОГДА ""АВАНС-3""
		|		ИНАЧЕ ""АВАНС-1""
		|	КОНЕЦ КАК СерияСФ,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаОборот > 0
		|			ТОГДА ВЫБОР
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ПлатежноеПоручениеВходящее
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ПлатежноеПоручениеВходящее).Дата
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ОплатаПлатежнойКартой
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ОплатаПлатежнойКартой).Дата
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ВводНачальныхОстатков
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ВводНачальныхОстатков).Дата
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ПриходныйКассовыйОрдер).Дата
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ВозвратТоваровОтПокупателя).Дата
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
		|					ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Дата
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
		|					ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.ПлатежноеПоручениеИсходящее).Дата
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.РасходныйКассовыйОрдер
		|					ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РасходныйКассовыйОрдер).Дата
		|			КОНЕЦ
		|	КОНЕЦ КАК Дата,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаКонтрагенты.КодГНС = ""999""
		|				ИЛИ ВременнаяТаблицаКонтрагенты.КодГНС = ""111""
		|			ТОГДА ""0""
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаОборот > 0
		|			ТОГДА ВЫБОР
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ПлатежноеПоручениеВходящее
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ПлатежноеПоручениеВходящее).Номер
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ОплатаПлатежнойКартой
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ОплатаПлатежнойКартой).Номер
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ВводНачальныхОстатков
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ВводНачальныхОстатков).Номер
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ПриходныйКассовыйОрдер).Номер
		|					КОГДА АвансыДоотгрузкаОбороты.ДокументА ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|						ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументА КАК Документ.ВозвратТоваровОтПокупателя).Номер
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
		|					ТОГДА ВЫБОР
		|							КОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).НомерБланкаСФ <> """"
		|								ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).НомерБланкаСФ
		|							ИНАЧЕ ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Номер
		|						КОНЕЦ
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
		|					ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.ПлатежноеПоручениеИсходящее).Номер
		|				КОГДА АвансыДоотгрузкаОбороты.ДокументОтгрузки ССЫЛКА Документ.РасходныйКассовыйОрдер
		|					ТОГДА ВЫРАЗИТЬ(АвансыДоотгрузкаОбороты.ДокументОтгрузки КАК Документ.РасходныйКассовыйОрдер).Номер
		|			КОНЕЦ
		|	КОНЕЦ КАК НомерСФ,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаОборот < 0
		|			ТОГДА АвансыДоотгрузкаОбороты.СуммаОборот - АвансыДоотгрузкаОбороты.СуммаНДСОборот - АвансыДоотгрузкаОбороты.СуммаНСПОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаРасход,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаОборот > 0
		|			ТОГДА (АвансыДоотгрузкаОбороты.СуммаОборот - АвансыДоотгрузкаОбороты.СуммаНДСОборот - АвансыДоотгрузкаОбороты.СуммаНСПОборот)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаПриход,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаНДСОборот < 0
		|			ТОГДА АвансыДоотгрузкаОбороты.СуммаНДСОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСРасход,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаНДСОборот > 0
		|			ТОГДА АвансыДоотгрузкаОбороты.СуммаНДСОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДСПриход,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаНСПОборот < 0
		|			ТОГДА АвансыДоотгрузкаОбороты.СуммаНСПОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНСПРасход,
		|	ВЫБОР
		|		КОГДА АвансыДоотгрузкаОбороты.СуммаНСПОборот > 0
		|			ТОГДА АвансыДоотгрузкаОбороты.СуммаНСПОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНСППриход
		|ПОМЕСТИТЬ ВременнаяТаблицаАвансыДоотгрузка
		|ИЗ
		|	РегистрНакопления.АвансыДоотгрузкаРасшифровка.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК АвансыДоотгрузкаОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКонтрагенты КАК ВременнаяТаблицаКонтрагенты
		|		ПО (ВЫБОР
		|				КОГДА АвансыДоотгрузкаОбороты.Контрагент.ГоловнойКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА АвансыДоотгрузкаОбороты.Контрагент = ВременнаяТаблицаКонтрагенты.Контрагент
		|				ИНАЧЕ АвансыДоотгрузкаОбороты.Контрагент.ГоловнойКонтрагент = ВременнаяТаблицаКонтрагенты.Контрагент
		|			КОНЕЦ)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	// Выборка Авансы.
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаАвансыДоотгрузка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаАвансыДоотгрузка.КонтрагентНаименование КАК КонтрагентНаименование,
		|	ВременнаяТаблицаАвансыДоотгрузка.ИННКонтрагента КАК ИННКонтрагента,
		|	ВременнаяТаблицаАвансыДоотгрузка.КодГНС КАК КодГНС,
		|	ВременнаяТаблицаАвансыДоотгрузка.Договор КАК Договор,
		|	ВременнаяТаблицаАвансыДоотгрузка.ДокументА КАК ДокументА,
		|	ВременнаяТаблицаАвансыДоотгрузка.СерияСФ КАК СерияСФ,
		|	ВременнаяТаблицаАвансыДоотгрузка.Дата КАК ДатаВыписки,
		|	ВременнаяТаблицаАвансыДоотгрузка.НомерСФ КАК НомерСФ,
		|	111 КАК КодПоставки,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаПриход КАК СтоимостьБезНДС,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСПриход КАК СуммаНДС,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаНСППриход КАК СуммаНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаАвансыДоотгрузка.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
		|				ИЛИ ВременнаяТаблицаАвансыДоотгрузка.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Необлагаемая)
		|			ТОГДА ВременнаяТаблицаАвансыДоотгрузка.СуммаПриход
		|		КОГДА &НСПВСумме
		|			ТОГДА ВременнаяТаблицаАвансыДоотгрузка.СуммаПриход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСПриход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНСППриход
		|		ИНАЧЕ ВременнаяТаблицаАвансыДоотгрузка.СуммаПриход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСПриход
		|	КОНЕЦ КАК ОбщаяСтоимостьСНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаАвансыДоотгрузка.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК КонтрагентСтранаРезидентстваЕАЭС
		|ИЗ
		|	ВременнаяТаблицаАвансыДоотгрузка КАК ВременнаяТаблицаАвансыДоотгрузка
		|ГДЕ
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаПриход > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаВыписки,
		|	НомерСФ";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	// Выборка Доотгрузки.
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаАвансыДоотгрузка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаАвансыДоотгрузка.КонтрагентНаименование КАК КонтрагентНаименование,
		|	ВременнаяТаблицаАвансыДоотгрузка.ИННКонтрагента КАК ИННКонтрагента,
		|	ВременнаяТаблицаАвансыДоотгрузка.КодГНС КАК КодГНС,
		|	ВременнаяТаблицаАвансыДоотгрузка.Договор КАК Договор,
		|	ВременнаяТаблицаАвансыДоотгрузка.ДокументА КАК ДокументА,
		|	ВременнаяТаблицаАвансыДоотгрузка.Дата КАК ДатаВыписки,
		|	ВременнаяТаблицаАвансыДоотгрузка.СерияСФ КАК СерияСФ,
		|	ВременнаяТаблицаАвансыДоотгрузка.НомерСФ КАК НомерСФ,
		|	112 КАК КодПоставки,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаРасход КАК СтоимостьБезНДС,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСРасход КАК СуммаНДС,
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаНСПРасход КАК СуммаНСП,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаАвансыДоотгрузка.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
		|				ИЛИ ВременнаяТаблицаАвансыДоотгрузка.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Необлагаемая)
		|			ТОГДА ВременнаяТаблицаАвансыДоотгрузка.СуммаРасход
		|		КОГДА &НСПВСумме
		|			ТОГДА ВременнаяТаблицаАвансыДоотгрузка.СуммаРасход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСРасход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНСПРасход
		|		ИНАЧЕ ВременнаяТаблицаАвансыДоотгрузка.СуммаРасход + ВременнаяТаблицаАвансыДоотгрузка.СуммаНДСРасход
		|	КОНЕЦ КАК ОбщаяСтоимостьСНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаАвансыДоотгрузка.Контрагент.ПризнакСтраны = ЗНАЧЕНИЕ(Перечисление.ПризнакиСтраны.ЕАЭС)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК КонтрагентСтранаРезидентстваЕАЭС
		|ИЗ
		|	ВременнаяТаблицаАвансыДоотгрузка КАК ВременнаяТаблицаАвансыДоотгрузка
		|ГДЕ
		|	ВременнаяТаблицаАвансыДоотгрузка.СуммаРасход < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаВыписки,
		|	НомерСФ";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	// Выборка Отгрузки.
	ТекстЗапроса = 
	    "ВЫБРАТЬ
	    |	СчетаФактурыВыписанные.СтавкаНДС КАК СтавкаНДС,
	    |	СчетаФактурыВыписанные.СерияБланкаСФ КАК СерияСФ,
	    |	СчетаФактурыВыписанные.НомерБланкаСФ КАК НомерСФ,
	    |	СчетаФактурыВыписанные.КорСерияБланкаСФ КАК КорСерияСФ,
	    |	СчетаФактурыВыписанные.КорНомерБланкаСФ КАК КорНомерСФ,
	    |	ВЫБОР
	    |		КОГДА СчетаФактурыВыписанные.КорНомерБланкаСФ = """"
	    |			ТОГДА """"
	    |		КОГДА СчетаФактурыВыписанные.СерияБланкаСФ = """"
	    |			ТОГДА 2
	    |		ИНАЧЕ 1
	    |	КОНЕЦ КАК ТипКорректировки,
	    |	ВременнаяТаблицаКонтрагенты.КонтрагентНаименование КАК КонтрагентНаименование,
	    |	ВременнаяТаблицаКонтрагенты.ИННКонтрагента КАК ИННКонтрагента,
	    |	ВременнаяТаблицаКонтрагенты.КодГНС КАК КодГНС,
	    |	ВременнаяТаблицаКонтрагенты.КонтрагентСтранаРезидентстваЕАЭС КАК КонтрагентСтранаРезидентстваЕАЭС,
	    |	СчетаФактурыВыписанные.КодПоставкиНДС.Код КАК КодПоставки,
	    |	СчетаФактурыВыписанные.ДатаПоставки КАК ДатаПоставки,
	    |	СУММА(СчетаФактурыВыписанные.Сумма) КАК СтоимостьБезНДС,
	    |	СУММА(СчетаФактурыВыписанные.СуммаНДС) КАК СуммаНДС,
	    |	СУММА(СчетаФактурыВыписанные.СуммаНеоблагаемая) КАК СуммаНСП,
	    |	СчетаФактурыВыписанные.ДатаСФ КАК ДатаВыписки,
	    |	СУММА(ВЫБОР
	    |			КОГДА СчетаФактурыВыписанные.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Освобожденная)
	    |					ИЛИ СчетаФактурыВыписанные.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.Необлагаемая)
	    |				ТОГДА СчетаФактурыВыписанные.Сумма
	    |			КОГДА &НСПВСумме
	    |				ТОГДА СчетаФактурыВыписанные.Сумма + СчетаФактурыВыписанные.СуммаНДС + СчетаФактурыВыписанные.СуммаНеоблагаемая
	    |			ИНАЧЕ СчетаФактурыВыписанные.Сумма + СчетаФактурыВыписанные.СуммаНДС
	    |		КОНЕЦ) КАК ОбщаяСтоимостьСНДС
		//|	ДанныеПервичныхДокументов.Номер КАК ДокументНомер
	    |ИЗ
	    |	РегистрСведений.СчетаФактурыВыписанные КАК СчетаФактурыВыписанные
	    |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКонтрагенты КАК ВременнаяТаблицаКонтрагенты
	    |		ПО (ВЫБОР
	    |				КОГДА СчетаФактурыВыписанные.Контрагент.ГоловнойКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	    |					ТОГДА СчетаФактурыВыписанные.Контрагент = ВременнаяТаблицаКонтрагенты.Контрагент
	    |				ИНАЧЕ СчетаФактурыВыписанные.Контрагент.ГоловнойКонтрагент = ВременнаяТаблицаКонтрагенты.Контрагент
	    |			КОНЕЦ)
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	    |		ПО СчетаФактурыВыписанные.Организация = ДанныеПервичныхДокументов.Организация
	    |			И СчетаФактурыВыписанные.Документ = ДанныеПервичныхДокументов.Документ
	    |ГДЕ
	    |	СчетаФактурыВыписанные.Организация = &Организация
		|	И НЕ СчетаФактурыВыписанные.ПоступлениеОтНерезидента
	    |	И ВЫБОР
	    |			КОГДА &ОтчетПоНДСПоПоставке
	    |				ТОГДА " + ?(Дата < Дата(2020, 07, 01), "СчетаФактурыВыписанные.ДатаПоставки МЕЖДУ &НачалоПериода И &КонецПериода", "СчетаФактурыВыписанные.ДатаОтчета МЕЖДУ &НачалоПериода И &КонецПериода") + " 
	    |			ИНАЧЕ СчетаФактурыВыписанные.ДатаСФ МЕЖДУ &НачалоПериода И &КонецПериода
	    |		КОНЕЦ" +  ?(Дата < Дата(2020, 07, 01), " И СчетаФактурыВыписанные.СерияБланкаСФ <> """"", "") + "
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	СчетаФактурыВыписанные.ДатаПоставки,
	    |	СчетаФактурыВыписанные.ДатаСФ,
	    |	СчетаФактурыВыписанные.КодПоставкиНДС.Код,
	    |	СчетаФактурыВыписанные.СтавкаНДС,
	    |	СчетаФактурыВыписанные.КорСерияБланкаСФ,
	    |	СчетаФактурыВыписанные.КорНомерБланкаСФ,
	    |	СчетаФактурыВыписанные.СерияБланкаСФ,
	    |	ВременнаяТаблицаКонтрагенты.КонтрагентНаименование,
	    |	ВременнаяТаблицаКонтрагенты.ИННКонтрагента,
	    |	ВременнаяТаблицаКонтрагенты.КодГНС,
	    |	ВременнаяТаблицаКонтрагенты.КонтрагентСтранаРезидентстваЕАЭС,
	    |	СчетаФактурыВыписанные.НомерБланкаСФ
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	ДатаВыписки,
	    |	НомерСФ";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	Запрос = Новый Запрос();
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);  
	Запрос.УстановитьПараметр("НСПВСумме", НСПвСумме);
	Запрос.УстановитьПараметр("ОтчетПоНДСПоПоставке", ОтчетПоНДСПоПоставке);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаАвансы 		= МассивРезультатов[2].Выбрать();
	ВыборкаДоотгрузки 	= МассивРезультатов[3].Выбрать();
	ВыборкаОтгрузки 	= МассивРезультатов[4].Выбрать();
	
	// Начало отгрузки.
	Пока ВыборкаОтгрузки.Следующий() Цикл
		
		Если НалоговыйКонтракт Тогда
			НоваяСтрокаАванс = ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Добавить();
		Иначе
			НоваяСтрокаАванс = ОтчетРеестрПоставок.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАванс, ВыборкаОтгрузки);
		
		//Если СтрДлина(ВыборкаОтгрузки.НомерСФ) > 6 Тогда
		//	НоваяСтрокаАванс.НомерСФ = Прав(ВыборкаОтгрузки.НомерСФ, 6);
		//КонецЕсли;
	КонецЦикла;	
	// Конец отгрузки.
	
	// Начало Авансы.
	Пока ВыборкаАвансы.Следующий() Цикл
		
		Если НалоговыйКонтракт Тогда
			НоваяСтрокаАванс = ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Добавить();
		Иначе
			НоваяСтрокаАванс = ОтчетРеестрПоставок.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАванс, ВыборкаАвансы);
		
		Если СтрДлина(ВыборкаАвансы.НомерСФ) > 6 Тогда
			НоваяСтрокаАванс.НомерСФ = Прав(ВыборкаАвансы.НомерСФ, 6);
		КонецЕсли;
	КонецЦикла;	
	// Конец Авансы.
	
	// Начало Доотгрузки.
	Пока ВыборкаДоотгрузки.Следующий() Цикл
		
		Если НалоговыйКонтракт Тогда
			НоваяСтрокаАванс = ОтчетРеестрПоставокНаОсновеНалоговогоКонтракта.Добавить();
		Иначе
			НоваяСтрокаАванс = ОтчетРеестрПоставок.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАванс, ВыборкаДоотгрузки);
		
		Если СтрДлина(ВыборкаДоотгрузки.НомерСФ) > 6 Тогда
			НоваяСтрокаАванс.НомерСФ = Прав(ВыборкаДоотгрузки.НомерСФ, 6);
		КонецЕсли;
	КонецЦикла;	
	// Конец Доотгрузки.
КонецПроцедуры	

Процедура РассчитатьИтогиОтчетаРеестрПоставок(Структура = Неопределено) Экспорт
	ИтогоПоРееструБНДС      		= 0;
	ИтогоПоРееструНДС       		= 0;
	ИтогоПоРееструОбщаяСтоимость  	= 0;
	
	// ОБЛАГАЕМЫЕ ПОСТАВКИ 
	ИтогоСуммаБНДСОбл			= 0;
	ИтогоСуммаНДСОбл			= 0;
	ИтогоОбщаяСтоимостьОбл		= 0;
	
	// С кодом поставки 102 
	ИтогоСуммаБНДСОбл_102		= 0;
	ИтогоСуммаНДСОбл_102		= 0;
	ИтогоОбщаяСтоимостьОбл_102	= 0;
	
	ИтогоСуммаБНДСНул		= 0;
	ИтогоСуммаБНДСОблЕАЭС	= 0;
	ИтогоСуммаБНДСОСВ		= 0;
	
	ТаблицаСтавок = УчетНДС.ПолучитьСтавкиНДССНулевымиЗначениями(Дата);
	СтруктураПоиска = Новый Структура();
	СтруктураПоиска.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
	
	Для каждого СтрокаТабличнойЧасти Из ОтчетРеестрПоставок Цикл
		СтруктураПоиска.СтавкаНДС = СтрокаТабличнойЧасти.СтавкаНДС;
		МассивСтавок = ТаблицаСтавок.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтавок.Количество() = 0 Тогда
				ИтогоСуммаБНДСОбл      	= ИтогоСуммаБНДСОбл + СтрокаТабличнойЧасти.СтоимостьБезНДС;
				ИтогоСуммаНДСОбл      	= ИтогоСуммаНДСОбл + СтрокаТабличнойЧасти.СуммаНДС;
				ИтогоОбщаяСтоимостьОбл	= ИтогоОбщаяСтоимостьОбл + СтрокаТабличнойЧасти.СтоимостьБезНДС + СтрокаТабличнойЧасти.СуммаНДС; 
				
				Если СтрокаТабличнойЧасти.КодПоставки = "102" Тогда
					ИтогоСуммаБНДСОбл_102      	= ИтогоСуммаБНДСОбл_102 + СтрокаТабличнойЧасти.СтоимостьБезНДС;
					ИтогоСуммаНДСОбл_102      	= ИтогоСуммаНДСОбл_102 + СтрокаТабличнойЧасти.СуммаНДС;
					ИтогоОбщаяСтоимостьОбл_102	= ИтогоОбщаяСтоимостьОбл_102 + СтрокаТабличнойЧасти.СтоимостьБезНДС + СтрокаТабличнойЧасти.СуммаНДС;	
				КонецЕсли;	
				
		ИначеЕсли МассивСтавок.Количество() > 0 И СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.Нулевая Тогда
			ИтогоСуммаБНДСОСВ = ИтогоСуммаБНДСОСВ + СтрокаТабличнойЧасти.СтоимостьБезНДС;	
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти.СтавкаНДС = Справочники.СтавкиНДС.Нулевая Тогда
			ИтогоСуммаБНДСНул 		= ИтогоСуммаБНДСНул + СтрокаТабличнойЧасти.СтоимостьБезНДС;
			
			Если СтрокаТабличнойЧасти.КонтрагентСтранаРезидентстваЕАЭС Тогда
				ИтогоСуммаБНДСОблЕАЭС = ИтогоСуммаБНДСОблЕАЭС + СтрокаТабличнойЧасти.СтоимостьБезНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ИтогоПоРееструБНДС      		= ИтогоСуммаБНДСОбл + ИтогоСуммаБНДСНул + ИтогоСуммаБНДСОСВ;
	ИтогоПоРееструНДС       		= ИтогоСуммаНДСОбл;
	ИтогоПоРееструОбщаяСтоимость	= ИтогоОбщаяСтоимостьОбл + ИтогоСуммаБНДСНул + ИтогоСуммаБНДСОСВ;
	
	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = 'ВСЕГО ПО РЕЕСТРУ в том числе:'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоПоРееструБНДС;
	НоваяСтрокаИтогов.СуммаНДС 				= ИтогоПоРееструНДС;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС 	= ИтогоПоРееструОбщаяСтоимость;
	
	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = '1) ОБЛАГАЕМЫЕ ПОСТАВКИ'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоСуммаБНДСОбл;
	НоваяСтрокаИтогов.СуммаНДС 				= ИтогоСуммаНДСОбл;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС 	= ИтогоОбщаяСтоимостьОбл;
		
	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = 'в том числе: ПОСТАВКА ТОВАРОВ ПРОМЫШЛЕННОЙ ПЕРЕРАБОТКИ СЕЛЬСКОХОЗЯЙСТВЕННОЙ ПРОДУКЦИИ ИЗ СЫРЬЯ ОТЕЧЕСТВЕННОГО ПРОИЗВОДСТВА И/ИЛИ ЮВЕЛИРНЫХ ИЗДЕЛИЙ, ПРОИЗВЕДЕННЫХ ИЗ ДРАГОЦЕННЫХ МЕТАЛЛОВ ОТЕЧЕСТВЕННОГО ПРОИЗВОДСТВА И ЛОМА (с кодом поставки 102)'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоСуммаБНДСОбл_102;
	НоваяСтрокаИтогов.СуммаНДС 				= ИтогоСуммаНДСОбл_102;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС 	= ИтогоОбщаяСтоимостьОбл_102;		
	
	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = '2) НУЛЕВЫЕ ПОСТАВКИ'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоСуммаБНДСНул;
	НоваяСтрокаИтогов.СуммаНДС 				= 0;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС 	= ИтогоСуммаБНДСНул;
	
	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = 'в том числе: в государства - члены Евразийского экономического союза'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоСуммаБНДСОблЕАЭС;
	НоваяСтрокаИтогов.СуммаНДС 				= 0;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС 	= ИтогоСуммаБНДСОблЕАЭС;

	НоваяСтрокаИтогов = ОтчетРеестрПоставокИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 			= НСтр("ru = '3) ОСВОБОЖДЕННЫЕ И НЕОБЛАГАЕМЫЕ ПОСТАВКИ'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 		= ИтогоСуммаБНДСОСВ;
	НоваяСтрокаИтогов.СуммаНДС 				= 0;
	НоваяСтрокаИтогов.ОбщаяСтоимостьСНДС  	= ИтогоСуммаБНДСОСВ;
	
	// Структура с итогами для заполнения XML файла.
	Если Структура <> Неопределено Тогда
		Структура.F9Total 		= ИтогоПоРееструБНДС;
		Структура.F10Total 		= ИтогоПоРееструНДС;
		Структура.F11Total 		= ИтогоПоРееструОбщаяСтоимость;
		Структура.F9Total1 		= ИтогоСуммаБНДСОбл;
		Структура.F10Total1 	= ИтогоСуммаНДСОбл;
		Структура.F11Total1 	= ИтогоОбщаяСтоимостьОбл;
		Структура.F9Total1_1 	= ИтогоСуммаБНДСОбл_102;
		Структура.F10Total1_1 	= ИтогоСуммаНДСОбл_102;
		Структура.F11Total1_1 	= ИтогоОбщаяСтоимостьОбл_102;
		Структура.F9Total2 		= ИтогоСуммаБНДСНул;
		Структура.F10Total2 	= 0;
		Структура.F11Total2 	= ИтогоСуммаБНДСНул;
		Структура.F9Total2eeu 	= ИтогоСуммаБНДСОблЕАЭС;
		Структура.F10Total2eeu 	= 0;
		Структура.F11Total2eeu 	= ИтогоСуммаБНДСОблЕАЭС;
		Структура.F9Total3 		= ИтогоСуммаБНДСОСВ;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть Реестр приобретенных мат Ресурсов
// Приложение 2 и Приложение 5 (налоговый контракт)
//
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрПриобретенных(НалоговыйКонтракт, НеУчитыватьЗакупкиБезНДС, ОтчетПоНДСПоПоставке) Экспорт
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("Организация", Организация);
	ПараметрыЗапроса.Вставить("НачалоПериода", НачалоМесяца(Дата));
	ПараметрыЗапроса.Вставить("КонецПериода", КонецМесяца(Дата));
	ПараметрыЗапроса.Вставить("ОтчетПоНДСПоПоставке", ОтчетПоНДСПоПоставке);
	ПараметрыЗапроса.Вставить("НеУчитыватьЗакупкиБезНДС", НеУчитыватьЗакупкиБезНДС);
	ПараметрыЗапроса.Вставить("НалоговыйКонтракт", НалоговыйКонтракт);
	
	СтрокаОтчета = ОтчетОсновной.Найти("053", "Строка");
	
	Если СтрокаОтчета <> Неопределено Тогда
		Сумма053 = СтрокаОтчета.Сумма;
	Иначе
		Сумма053 = 0;
	КонецЕсли;
	
	СтрокаОтчета = ОтчетОсновной.Найти("054", "Строка");
	
	Если СтрокаОтчета <> Неопределено Тогда
		Сумма054 = СтрокаОтчета.Сумма;
	Иначе
		Сумма054 = 0;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ОтчетПоНДС.ДанныеОтчетаРеестраПриобретенныхМатРесурсов(ПараметрыЗапроса, 
						Ложь, Сумма053, Сумма054);
	
	Если РезультатЗапроса.Пустой() Тогда 
		Если НалоговыйКонтракт Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения отчета ""Реестр приобретенных на осн.налогового контракта"".'"), 
											ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения отчета ""Реестр приобретенных материальных Ресурсов"".'"), 
											ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	Иначе 	
		Если НалоговыйКонтракт Тогда 
			ОтчетРеестрПриобретенныхНаОсновеНалоговогоКонтракта.Загрузить(РезультатЗапроса.Выгрузить());
		Иначе 
			ОтчетРеестрПриобретенныхМатРесурсов.Загрузить(РезультатЗапроса.Выгрузить());
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура РассчитатьИтогиОтчетаРеестрПриобретенных() Экспорт
	ИтогоПоРееструБНДС      = 0; 	
	ИтогоПоРееструНДС       = 0; 	
	ИтогоПоРееструНДСЗАчет  = 0;
	
	Для каждого СтрокаТабличнойЧасти Из ОтчетРеестрПриобретенныхМатРесурсов Цикл	
		ИтогоПоРееструБНДС      = ИтогоПоРееструБНДС 	   + СтрокаТабличнойЧасти.СтоимостьБезНДС;
		ИтогоПоРееструНДС       = ИтогоПоРееструНДС  	   + СтрокаТабличнойЧасти.СуммаНДС;
		ИтогоПоРееструНДСЗачет  = ИтогоПоРееструНДСЗачет   + СтрокаТабличнойЧасти.СуммаПодлежащаяКЗачетуНДС;		
	КонецЦикла;
	
	НоваяСтрокаИтогов = ОтчетРеестрПриобретенныхМатРесурсовИтоги.Добавить();
	НоваяСтрокаИтогов.Содержание 				= НСтр("ru = 'ВСЕГО ПО РЕЕСТРУ :'");
	НоваяСтрокаИтогов.СтоимостьБезНДС 			= ИтогоПоРееструБНДС;
	НоваяСтрокаИтогов.СуммаНДС 					= ИтогоПоРееструНДС;
	НоваяСтрокаИтогов.СуммаПодлежащаяКЗачетуНДС = ИтогоПоРееструНДСЗачет;
		
КонецПроцедуры

// Процедура заполняет табличную часть "ОтчетРеестрВвезенных"
//
Процедура ЗаполнитьТабличнуюЧастьОтчетРеестрВвезенных(НеУчитыватьЗакупкиБезНДС) Экспорт
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("Организация", Организация);
	ПараметрыЗапроса.Вставить("НачалоПериода", НачалоМесяца(Дата));
	ПараметрыЗапроса.Вставить("КонецПериода", КонецМесяца(Дата));
	ПараметрыЗапроса.Вставить("НеУчитыватьЗакупкиБезНДС", НеУчитыватьЗакупкиБезНДС);
	
	СтрокаОтчета = ОтчетОсновной.Найти("053", "Строка");
	
	Если СтрокаОтчета <> Неопределено Тогда
		Сумма053 = СтрокаОтчета.Сумма;
	Иначе
		Сумма053 = 0;
	КонецЕсли;
	
	СтрокаОтчета = ОтчетОсновной.Найти("054", "Строка");
	
	Если СтрокаОтчета <> Неопределено Тогда
		Сумма054 = СтрокаОтчета.Сумма;
	Иначе
		Сумма054 = 0;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ОтчетПоНДС.ДанныеОтчетаРеестраВвезенныхМатериальныхРесурсовВКР(ПараметрыЗапроса, 
						Ложь, Сумма053, Сумма054);
	
	Если РезультатЗапроса.Пустой() Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения отчета ""Реестр ГТД"".'"), 
										ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе 	
		ОтчетРеестрВвезенныхМатериальныхРесурсовВКР.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#КонецЕсли