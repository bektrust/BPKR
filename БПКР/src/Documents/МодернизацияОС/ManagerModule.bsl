#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем Ошибки;
	
	// Подготовка данных	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетУчетаМодернизации КАК СчетКт,
		|	ВременнаяТаблицаШапка.ОсновноеСредство КАК ЗначениеСубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК ЗначениеСубконтоДт3,
		|	ВременнаяТаблицаШапка.ОсновноеСредство КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаШапка.СтоимостьМодернизации КАК Сумма,
		|	""Стоимость модернизации"" КАК Содержание,
		|	ВременнаяТаблицаШапка.ОсновноеСредство.Наименование КАК ОсновноеСредствоНаименование,
		|	ЛОЖЬ КАК РаспределятьПоКоэффициентам
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметры КАК ВременнаяТаблицаПараметры
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.СтоимостьМодернизации <> 0
		|	И ВременнаяТаблицаШапка.Событие = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация)
		|	И НЕ ВременнаяТаблицаПараметры.Консервация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметры.СчетУчета,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчета,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации,
		|	""Модернизация - Перенос первоначальной стоимости на новый счет учета"",
		|	ВременнаяТаблицаШапка.ОсновноеСредство.Наименование,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметры КАК ВременнаяТаблицаПараметры
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаПараметры.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|	И ВременнаяТаблицаПараметры.СчетУчета <> ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчета
		|	И ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации <> 0
		|	И НЕ ВременнаяТаблицаПараметры.Консервация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчетаАмортизации,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметры.НакопленныйИзносРазница,
		|	""Накопленный износ"",
		|	ВременнаяТаблицаШапка.ОсновноеСредство.Наименование,
		|	ИСТИНА
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметры КАК ВременнаяТаблицаПараметры
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаПараметры.НакопленныйИзносРазница <> 0
		|	И НЕ ВременнаяТаблицаПараметры.Консервация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчетаАмортизации,
		|	ВременнаяТаблицаПараметры.СчетУчета.ПарныйСчет,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаНакопленныйИзнос.НакопленныйИзнос + ВременнаяТаблицаПараметры.НакопленныйИзносРазница,
		|	""Модернизация - Перенос накопленного износа на новый счет учета"",
		|	ВременнаяТаблицаШапка.ОсновноеСредство.Наименование,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметры КАК ВременнаяТаблицаПараметры
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНакопленныйИзнос КАК ВременнаяТаблицаНакопленныйИзнос
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаПараметры.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|	И ВременнаяТаблицаПараметры.СчетУчета <> ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчета
		|	И ВременнаяТаблицаНакопленныйИзнос.НакопленныйИзнос + ВременнаяТаблицаПараметры.НакопленныйИзносРазница <> 0
		|	И НЕ ВременнаяТаблицаПараметры.Консервация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчетаАмортизации,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ВременнаяТаблицаШапка.АмортизацияЗаМесяц,
		|	""Начисление амортизации"",
		|	ВременнаяТаблицаШапка.ОсновноеСредство.Наименование,
		|	ИСТИНА
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметры КАК ВременнаяТаблицаПараметры
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.АмортизацияЗаМесяц <> 0
		|	И ВременнаяТаблицаПараметры.СпособОтраженияРасходовПоАмортизации <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
		|	И НЕ &НачислениеАмортизацииОСПоМесяцам
		|	И НЕ ВременнаяТаблицаПараметры.Консервация";
	Запрос.УстановитьПараметр("НачислениеАмортизацииОСПоМесяцам", СтруктураДополнительныеСвойства.УчетнаяПолитика.НачислениеАмортизацииОСПоМесяцам);
	РезультатЗапроса = Запрос.Выполнить(); 
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	// Добавляем колонки в ТЗ для записи в рег. бухг.
	ТЗ.Колонки.Добавить("СубконтоДт1");
	ТЗ.Колонки.Добавить("СубконтоДт2");
	ТЗ.Колонки.Добавить("СубконтоДт3");
	
	КэшДанныхСпрСпособыОтрРасхПоАморт = Новый Соответствие();
	
	// Создаем результирующую ТЗ с теми же колонками, что и в запросе.
	ТаблицаХозрасчетный = ТЗ.СкопироватьКолонки();
	
	// Данный цикл перебирает строки ТЗ, полученные из запроса.
	//
	// 1. Если накопленная амортизация не равна нуля, тогда по данной строке идет проверка способа отражения 
	// расходов по амортизации. Обращаемся к табличной части данного справочника и в зависимости от количества 
	// строк в ТЧ строка ТЗ дублируется и записывается в результирующую ТЗ. Записывается счет затрат (СчетДт) и в 
	// зависимости от коэффициентов в строках ТЧ распределяется сумма. А также заполняются созданные колонки "СубконтоДт".
	//
	// 2. В остальных случаях распределять сумму по коэффициенам не нужно, поэтому мы просто копируем строку 
	// в исходную ТЗ и заполняем созданные колонки "СубконтоДт" значениями из колонок "ЗначениеСубконтоДт"
	Для Каждого СтрокаТаблицыЗначений Из ТЗ Цикл
		
		Если НЕ СтрокаТаблицыЗначений.РаспределятьПоКоэффициентам Тогда
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.СубконтоДт1 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт1;
			СтрокаРезультирующейТЗ.СубконтоДт2 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт2;
			СтрокаРезультирующейТЗ.СубконтоДт3 = СтрокаРезультирующейТЗ.ЗначениеСубконтоДт3;		
			Продолжить;
		КонецЕсли;
		
		// В соответствие записывается: 
		// Ключ - ссылка на справочник "СпособыОтраженияРасходовПоАмортизации".
		// Значение - ТЗ из запроса к данному элементу справочника.
		// При каждом шаге основного цикла (перебор ТЗ из данных документа) проверяется наличие строки соответствия 
		// по ссылке на справочник, чтобы не обращаться к запросу каждый раз.
		ТЗСпособаОтражения = КэшДанныхСпрСпособыОтрРасхПоАморт.Получить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации);
		
		Если ТЗСпособаОтражения = Неопределено Тогда
			ТЗСпособаОтражения = УправлениеВнеоборотнымиАктивамиПовтИсп.СпособыОтраженияРасходовПоАмортизации(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации); 
			КэшДанныхСпрСпособыОтрРасхПоАморт.Вставить(СтрокаТаблицыЗначений.СпособОтраженияРасходовПоАмортизации, ТЗСпособаОтражения);
			
			Если ТЗСпособаОтражения.Количество() = 0 Тогда 
				ТекстСообщения = НСтр("ru = 'Расчет амортизации ОС. В способе отражения не заполнены коэффициенты распределения. Основное средство ""%1"".'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаТаблицыЗначений.СубконтоКт1);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Неопределено, ТекстСообщения, Неопределено);
			КонецЕсли;
		КонецЕсли;
		
		МассивКоэффициентов = ТЗСпособаОтражения.ВыгрузитьКолонку("Коэффициент");
		
		МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаТаблицыЗначений.Сумма, МассивКоэффициентов, 2);
		
		Если МассивСумм = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ИндексМассива = 0;
		Для Каждого СтрокаМассива Из МассивСумм Цикл
			СтрокаРезультирующейТЗ = ТаблицаХозрасчетный.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаРезультирующейТЗ, СтрокаТаблицыЗначений);
			
			СтрокаРезультирующейТЗ.Сумма = СтрокаМассива;			
			Если ТЗСпособаОтражения.Количество() > 0 Тогда 
				СтрокаРезультирующейТЗ.СчетДт		= ТЗСпособаОтражения[ИндексМассива].СчетЗатрат;
				СтрокаРезультирующейТЗ.СубконтоДт1  = ТЗСпособаОтражения[ИндексМассива].Субконто1;
				СтрокаРезультирующейТЗ.СубконтоДт2  = ТЗСпособаОтражения[ИндексМассива].Субконто2;
				СтрокаРезультирующейТЗ.СубконтоДт3  = ТЗСпособаОтражения[ИндексМассива].Субконто3;
			КонецЕсли;	
			
			ИндексМассива = ИндексМассива + 1;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", ТаблицаХозрасчетный);
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	 	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ИнвентарныйНомер = """"
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ИнвентарныйНомер
		|		ИНАЧЕ ТаблицаДокумента.ИнвентарныйНомер
		|	КОНЕЦ КАК ИнвентарныйНомер,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчета
		|		ИНАЧЕ ТаблицаДокумента.СчетУчета
		|	КОНЕЦ КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ГруппаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ГруппаНУ
		|		ИНАЧЕ ТаблицаДокумента.ГруппаНУ
		|	КОНЕЦ КАК ГруппаНУ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Событие = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации
		|		ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость
		|	КОНЕЦ КАК ПервоначальнаяСтоимость,
		|	ТаблицаДокумента.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СрокСлужбы = 0
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СрокСлужбы
		|		ИНАЧЕ ТаблицаДокумента.СрокСлужбы
		|	КОНЕЦ КАК СрокСлужбы,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СпособНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации
		|		ИНАЧЕ ТаблицаДокумента.СпособНачисленияАмортизации
		|	КОНЕЦ КАК СпособНачисленияАмортизации,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации
		|		ИНАЧЕ ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации
		|	КОНЕЦ КАК СпособОтраженияРасходовПоАмортизации,  
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.ПараметрыВыработкиОС.ПустаяСсылка)
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПараметрВыработки
		|		ИНАЧЕ ТаблицаДокумента.ПараметрВыработки
		|	КОНЕЦ КАК ПараметрВыработки,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ОбъемПродукции = 0
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ОбъемПродукции
		|		ИНАЧЕ ТаблицаДокумента.ОбъемПродукции
		|	КОНЕЦ КАК ОбъемПродукции,    
		|	ТаблицаДокумента.КоэффициентУскорения КАК КоэффициентУскорения,  		
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СпособПоступления КАК СпособПоступления,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.БазаАмортизацииПослеМодернизации = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаШапка.Событие = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация)
		|						ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации
		|					ИНАЧЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость
		|				КОНЕЦ
		|		ИНАЧЕ ВременнаяТаблицаШапка.БазаАмортизацииПослеМодернизации
		|	КОНЕЦ КАК СтоимостьДляРасчетаАмортизации,
		|	ВременнаяТаблицаПараметрыУчетаОССрезПоследних.ДатаНачисленияНалогаНаИмущество КАК ДатаНачисленияНалогаНаИмущество,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Консервация = НЕОПРЕДЕЛЕНО
		|			ТОГДА ВременнаяТаблицаПараметрыУчетаОССрезПоследних.Консервация
		|		ИНАЧЕ ТаблицаДокумента.Консервация
		|	КОНЕЦ КАК Консервация
		|ИЗ
		|	ВременнаяТаблицаПараметры КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|			ПО (ИСТИНА)
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаДокумента.ФормироватьПараметрыУчетаОС";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.МоментВремени(),ВидГраницы.Исключая));
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПараметрыУчетаОС", РезультатЗапроса.Выгрузить()); 
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаШапка.Событие КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	""Модернизация ОС"" КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.Организация КАК Организация,
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет КАК СчетАмортизации,
		|	ПараметрыУчетаОССрезПоследних.Консервация КАК Консервация
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОС_Предыдущие
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&МоментВремени,
		|			(Организация, ОсновноеСредство) В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаШапка.Организация КАК Организация,
		|					ВременнаяТаблицаШапка.ОсновноеСредство КАК ОсновноеСредство
		|				ИЗ
		|					ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)) КАК ПараметрыУчетаОССрезПоследних
		|ГДЕ
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ <> ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК порядок,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ГруппаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|			ТОГДА ПараметрыУчетаОССрезПоследних.ГруппаНУ
		|		ИНАЧЕ ТаблицаДокумента.ГруппаНУ
		|	КОНЕЦ КАК ГруппаНУ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость < &МинимумСтоимостиОСДляНУ
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации >= &МинимумСтоимостиОСДляНУ
		|									ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации
		|								ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации
		|							КОНЕЦ
		|					ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Поступление,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Дата >= ДАТАВРЕМЯ(2022, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации > 0
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость < &МинимумСтоимостиОСДляНУ
		|									ТОГДА ВЫБОР
		|											КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации >= &МинимумСтоимостиОСДляНУ
		|												ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации
		|											ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации
		|										КОНЕЦ
		|								ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации > 0
		|					ТОГДА ВЫБОР
		|							КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость < &МинимумСтоимостиОСДляНУ
		|								ТОГДА ВЫБОР
		|										КОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации >= &МинимумСтоимостиОСДляНУ
		|											ТОГДА (ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость + ВременнаяТаблицаШапка.СтоимостьМодернизации) * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|										ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|									КОНЕЦ
		|							ИНАЧЕ ВременнаяТаблицаШапка.СтоимостьМодернизации * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК ТекущееПоступление,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации < 0
		|			ТОГДА -ВременнаяТаблицаШапка.СтоимостьМодернизации
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Выбытие,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Дата >= ДАТАВРЕМЯ(2022, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации < 0
		|						ТОГДА -ВременнаяТаблицаШапка.СтоимостьМодернизации
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВременнаяТаблицаШапка.СтоимостьМодернизации < 0
		|					ТОГДА -ВременнаяТаблицаШапка.СтоимостьМодернизации * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК ТекущееВыбытие,
		|	0 КАК СуммаОстатокКт,
		|	0 КАК СуммаОстаток
		|ИЗ
		|	ВременнаяТаблицаПараметры КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОС_Предыдущие КАК ПараметрыУчетаОССрезПоследних
		|			ПО (ИСТИНА)
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаШапка.СтоимостьМодернизации <> 0
		|	И ПараметрыУчетаОССрезПоследних.ГруппаНУ <> ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|	И ТаблицаДокумента.Консервация = ПараметрыУчетаОССрезПоследних.Консервация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Дата,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ГруппаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|			ТОГДА ПараметрыУчетаОССрезПоследних.ГруппаНУ
		|		ИНАЧЕ ТаблицаДокумента.ГруппаНУ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ ТаблицаДокумента.Консервация
		|				И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|			ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Дата >= ДАТАВРЕМЯ(2022, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ТаблицаДокумента.Консервация
		|							И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|						ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ТаблицаДокумента.Консервация
		|						И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|					ТОГДА (ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)) * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Консервация
		|				И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|			ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапка.Дата >= ДАТАВРЕМЯ(2022, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаДокумента.Консервация
		|							И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|						ТОГДА ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаДокумента.Консервация
		|						И ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) > 0
		|					ТОГДА (ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость - ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0)) * (12 - МЕСЯЦ(ВременнаяТаблицаШапка.Дата) + 0.5) / 12
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	ХозрасчетныйОстатки.СуммаОстаток
		|ИЗ
		|	ВременнаяТаблицаПараметры КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаОС_Предыдущие КАК ПараметрыУчетаОССрезПоследних
		|			ПО (ИСТИНА)
		|		ПО (ИСТИНА),
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&МоментВремени,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаПараметрыУчетаОС_Предыдущие.СчетАмортизации КАК СчетАмортизации
		|				ИЗ
		|					ВременнаяТаблицаПараметрыУчетаОС_Предыдущие КАК ВременнаяТаблицаПараметрыУчетаОС_Предыдущие),
		|			,
		|			(Организация, Субконто1) В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаПараметрыУчетаОС_Предыдущие.Организация КАК Организация,
		|					ВременнаяТаблицаПараметрыУчетаОС_Предыдущие.ОсновноеСредство КАК ОсновноеСредство
		|				ИЗ
		|					ВременнаяТаблицаПараметрыУчетаОС_Предыдущие КАК ВременнаяТаблицаПараметрыУчетаОС_Предыдущие)) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ВременнаяТаблицаШапка.СтоимостьМодернизации = 0
		|	И ПараметрыУчетаОССрезПоследних.ГруппаНУ <> ЗНАЧЕНИЕ(Справочник.ГруппыНалоговогоУчетаОС.ПустаяСсылка)
		|	И ТаблицаДокумента.Консервация <> ПараметрыУчетаОССрезПоследних.Консервация";
				
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.МоментВремени(),ВидГраницы.Исключая));	
	
	ДанныеУчетнойПолитики = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьДанныеУчетнойПолитикиОрганизаций(ДокументСсылка.Дата, ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("МинимумСтоимостиОСДляНУ", ДанныеУчетнойПолитики.МинимумСтоимостиОСДляНУ);

	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвижениеОСНУ", РезультатЗапроса.Выгрузить());
		
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСведенияОбИмуществе(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,		
		|	ВременнаяТаблицаШапка.ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ГруппаИмущества = ЗНАЧЕНИЕ(Справочник.ГруппыИмущества.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.ГруппаИмущества
		|		ИНАЧЕ ТаблицаДокумента.ГруппаИмущества
		|	КОНЕЦ КАК ГруппаИмущества,
		|	СведенияОбИмуществеСрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.МатериалСтен = ЗНАЧЕНИЕ(Справочник.ВидыМатериаловСтенНалогНаИмущество.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.МатериалСтен
		|		ИНАЧЕ ТаблицаДокумента.МатериалСтен
		|	КОНЕЦ КАК МатериалСтен,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ЖилаяПлощадь = 0
		|			ТОГДА СведенияОбИмуществеСрезПоследних.ЖилаяПлощадь
		|		ИНАЧЕ ТаблицаДокумента.ЖилаяПлощадь
		|	КОНЕЦ КАК ЖилаяПлощадь,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.НежилаяПлощадь = 0
		|			ТОГДА СведенияОбИмуществеСрезПоследних.НежилаяПлощадь
		|		ИНАЧЕ ТаблицаДокумента.НежилаяПлощадь
		|	КОНЕЦ КАК НежилаяПлощадь,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.РегиональныйКоэффициент = ЗНАЧЕНИЕ(Справочник.РегиональныеКоэффициентыНалогНаИмущество.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.РегиональныйКоэффициент
		|		ИНАЧЕ ТаблицаДокумента.РегиональныйКоэффициент
		|	КОНЕЦ КАК РегиональныйКоэффициент,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ЗональныйКоэффициент = ЗНАЧЕНИЕ(Справочник.ЗональныеКоэффициенты.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.ЗональныйКоэффициент
		|		ИНАЧЕ ТаблицаДокумента.ЗональныйКоэффициент
		|	КОНЕЦ КАК ЗональныйКоэффициент,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ОтраслевойКоэффициент = 0
		|			ТОГДА СведенияОбИмуществеСрезПоследних.ОтраслевойКоэффициент
		|		ИНАЧЕ ТаблицаДокумента.ОтраслевойКоэффициент
		|	КОНЕЦ КАК ОтраслевойКоэффициент,
		|	СведенияОбИмуществеСрезПоследних.КатегорияОбъектаИмущества КАК КатегорияОбъектаИмущества,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КодНазначенияИмущества = ЗНАЧЕНИЕ(Справочник.ОтраслевыеКоэффициентыНалогНаИмущество.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.КодНазначенияИмущества
		|		ИНАЧЕ ТаблицаДокумента.КодНазначенияИмущества
		|	КОНЕЦ КАК КодНазначенияИмущества,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КодПользователяИмущества = ЗНАЧЕНИЕ(Справочник.КодыПользователейИмущества.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.КодПользователяИмущества
		|		ИНАЧЕ ТаблицаДокумента.КодПользователяИмущества
		|	КОНЕЦ КАК КодПользователяИмущества,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КодИмущества = ЗНАЧЕНИЕ(Справочник.КодыИмущества.ПустаяСсылка)
		|			ТОГДА СведенияОбИмуществеСрезПоследних.КодИмущества
		|		ИНАЧЕ ТаблицаДокумента.КодИмущества
		|	КОНЕЦ КАК КодИмущества
		|ИЗ
		|	ВременнаяТаблицаПараметры КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИмуществе.СрезПоследних(&МоментВремени, ) КАК СведенияОбИмуществеСрезПоследних
		|			ПО ВременнаяТаблицаШапка.ОсновноеСредство = СведенияОбИмуществеСрезПоследних.ОсновноеСредство
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаДокумента.ФормироватьСведенияОбИмуществе";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(ДокументСсылка.МоментВремени(),ВидГраницы.Исключая));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСведенияОбИмуществе", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаСведенияОбИмуществе

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	// Предварительно свернутая таблица параметров
	ТаблицаПараметров = ПолучитьВсеПараметры(ДокументСсылка);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтоимостьМодернизации КАК СтоимостьМодернизации,
		|	ТаблицаДокумента.АмортизацияЗаМесяц КАК АмортизацияЗаМесяц,
		|	ТаблицаДокумента.АмортизацияЗаМесяцПослеМодернизации КАК АмортизацияЗаМесяцПослеМодернизации,
		|	ТаблицаДокумента.СчетУчетаМодернизации КАК СчетУчетаМодернизации,
		|	ТаблицаДокумента.НакопленнаяАмортизация КАК НакопленнаяАмортизация,
		|	ТаблицаДокумента.НакопленнаяАмортизацияПослеМодернизации КАК НакопленнаяАмортизацияПослеМодернизации,
		|	ТаблицаДокумента.БазаАмортизацииПослеМодернизации КАК БазаАмортизацииПослеМодернизации,
		|	ТаблицаДокумента.Событие КАК Событие
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.МодернизацияОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ФормироватьПараметрыУчетаОС КАК ФормироватьПараметрыУчетаОС,
		|	ТаблицаДокумента.ФормироватьСведенияОбИмуществе КАК ФормироватьСведенияОбИмуществе,
		|	ТаблицаДокумента.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ТаблицаДокумента.ГруппаНУ КАК ГруппаНУ,
		|	ТаблицаДокумента.НакопленныйИзносРазница КАК НакопленныйИзносРазница,
		|	ТаблицаДокумента.СрокСлужбы КАК СрокСлужбы,
		|	ТаблицаДокумента.ОбъемПродукции КАК ОбъемПродукции,
		|	ТаблицаДокумента.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ТаблицаДокумента.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ТаблицаДокумента.МатериалСтен КАК МатериалСтен,
		|	ТаблицаДокумента.ЖилаяПлощадь КАК ЖилаяПлощадь,
		|	ТаблицаДокумента.НежилаяПлощадь КАК НежилаяПлощадь,
		|	ТаблицаДокумента.РегиональныйКоэффициент КАК РегиональныйКоэффициент,
		|	ТаблицаДокумента.ЗональныйКоэффициент КАК ЗональныйКоэффициент,
		|	ТаблицаДокумента.ОтраслевойКоэффициент КАК ОтраслевойКоэффициент,
		|	ТаблицаДокумента.ГруппаИмущества КАК ГруппаИмущества,
		|	ТаблицаДокумента.КодИмущества КАК КодИмущества,
		|	ТаблицаДокумента.КодНазначенияИмущества КАК КодНазначенияИмущества,
		|	ТаблицаДокумента.КодПользователяИмущества КАК КодПользователяИмущества,
		|	ТаблицаДокумента.Консервация КАК Консервация,
		|	ТаблицаДокумента.ПараметрыВыработки КАК ПараметрВыработки,
		|	ТаблицаДокумента.КоэффициентУскорения КАК КоэффициентУскорения
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметры
		|ИЗ
		|	&ТаблицаПараметров КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет КАК СчетУчетаАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.СрокСлужбы КАК СрокСлужбы,
		|	ПараметрыУчетаОССрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	ПараметрыУчетаОССрезПоследних.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
		|	ПараметрыУчетаОССрезПоследних.ПараметрВыработки КАК ПараметрВыработки,
		|	ПараметрыУчетаОССрезПоследних.ОбъемПродукции КАК ОбъемПродукции,
		|	ПараметрыУчетаОССрезПоследних.СпособПоступления КАК СпособПоступления,
		|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	ПараметрыУчетаОССрезПоследних.СтоимостьДляРасчетаАмортизации КАК СтоимостьДляРасчетаАмортизации,
		|	ПараметрыУчетаОССрезПоследних.Консервация КАК Консервация,
		|	ПараметрыУчетаОССрезПоследних.ДатаНачисленияНалогаНаИмущество КАК ДатаНачисленияНалогаНаИмущество,
		|	ПараметрыУчетаОССрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаОССрезПоследних
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК ПараметрыУчетаОССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК НакопленныйИзнос
		|ПОМЕСТИТЬ ВременнаяТаблицаНакопленныйИзнос
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаПараметрыУчетаОССрезПоследних.СчетУчетаАмортизации КАК СчетУчетаАмортизации
		|				ИЗ
		|					ВременнаяТаблицаПараметрыУчетаОССрезПоследних КАК ВременнаяТаблицаПараметрыУчетаОССрезПоследних),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Субконто1 В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаШапка.ОсновноеСредство КАК ОсновноеСредство
		|				ИЗ
		|					ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)) КАК ХозрасчетныйОстатки";
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ТаблицаПараметров", ТаблицаПараметров);
	Запрос.Выполнить();    		
			
	СформироватьТаблицаПараметрыУчетаОС(ДокументСсылка, СтруктураДополнительныеСвойства); 
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСведенияОбИмуществе(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВсеПараметры(ДокументСсылка)
	МассивСтрока = Новый Массив;
	МассивСтрока.Добавить(Тип("Строка"));
	КвалификаторСтроки9	= Новый КвалификаторыСтроки(9);
	
	МассивЧисло = Новый Массив;
	МассивЧисло.Добавить(Тип("Число"));
	КвалификаторЧисла152 	= Новый КвалификаторыЧисла(15, 2);	
	КвалификаторЧисла102 	= Новый КвалификаторыЧисла(10, 2);
	КвалификаторЧисла10 	= Новый КвалификаторыЧисла(10, 0);
	
	ТаблицаПараметров = Новый ТаблицаЗначений;
	ТаблицаПараметров.Колонки.Добавить("ФормироватьПараметрыУчетаОС",			Новый ОписаниеТипов("Булево"));
	ТаблицаПараметров.Колонки.Добавить("ФормироватьСведенияОбИмуществе",		Новый ОписаниеТипов("Булево"));
	ТаблицаПараметров.Колонки.Добавить("Консервация",							Новый ОписаниеТипов("Булево"));
	ТаблицаПараметров.Колонки.Добавить("ИнвентарныйНомер", 						Новый ОписаниеТипов(МассивСтрока, КвалификаторСтроки9));
	ТаблицаПараметров.Колонки.Добавить("НакопленныйИзносРазница", 				Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла152));
	ТаблицаПараметров.Колонки.Добавить("ГруппаНУ", 								Новый ОписаниеТипов("СправочникСсылка.ГруппыНалоговогоУчетаОС"));
	ТаблицаПараметров.Колонки.Добавить("СрокСлужбы", 							Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла10));
	ТаблицаПараметров.Колонки.Добавить("ОбъемПродукции", 						Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла10));
	ТаблицаПараметров.Колонки.Добавить("СпособНачисленияАмортизации", 			Новый ОписаниеТипов("ПеречислениеСсылка.СпособыНачисленияАмортизацииОС"));
	ТаблицаПараметров.Колонки.Добавить("СпособОтраженияРасходовПоАмортизации", 	Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));
	ТаблицаПараметров.Колонки.Добавить("СчетУчета", 							Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПараметров.Колонки.Добавить("ЛиквидационнаяСтоимость", 				Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла152));
	ТаблицаПараметров.Колонки.Добавить("МатериалСтен", 							Новый ОписаниеТипов("СправочникСсылка.ВидыМатериаловСтенНалогНаИмущество"));
	ТаблицаПараметров.Колонки.Добавить("ЖилаяПлощадь", 							Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла102));
	ТаблицаПараметров.Колонки.Добавить("НежилаяПлощадь", 						Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла102));
	ТаблицаПараметров.Колонки.Добавить("РегиональныйКоэффициент", 				Новый ОписаниеТипов("СправочникСсылка.РегиональныеКоэффициентыНалогНаИмущество"));
	ТаблицаПараметров.Колонки.Добавить("ЗональныйКоэффициент", 					Новый ОписаниеТипов("СправочникСсылка.ЗональныеКоэффициенты"));
	ТаблицаПараметров.Колонки.Добавить("ОтраслевойКоэффициент", 				Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла102));
	ТаблицаПараметров.Колонки.Добавить("ГруппаИмущества", 						Новый ОписаниеТипов("СправочникСсылка.ГруппыИмущества"));
	ТаблицаПараметров.Колонки.Добавить("КодИмущества", 							Новый ОписаниеТипов("СправочникСсылка.КодыИмущества"));
	ТаблицаПараметров.Колонки.Добавить("КодНазначенияИмущества",	 			Новый ОписаниеТипов("СправочникСсылка.ОтраслевыеКоэффициентыНалогНаИмущество"));	
	ТаблицаПараметров.Колонки.Добавить("КодПользователяИмущества", 				Новый ОписаниеТипов("СправочникСсылка.КодыПользователейИмущества"));	
	ТаблицаПараметров.Колонки.Добавить("ПараметрыВыработки", 					Новый ОписаниеТипов("СправочникСсылка.ПараметрыВыработкиОС"));
	ТаблицаПараметров.Колонки.Добавить("КоэффициентУскорения", 					Новый ОписаниеТипов(МассивЧисло, КвалификаторЧисла102));	
	
	СтрокаПараметров = ТаблицаПараметров.Добавить();
	
	Для каждого СтрокаТабличнойЧасти Из ДокументСсылка.ПараметрыОС Цикл
		Если СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ИнвентарныйНомер") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.ИнвентарныйНомер = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.НакопленныйИзнос") Тогда
			СтрокаПараметров.НакопленныйИзносРазница = СтрокаТабличнойЧасти.Значение - СтрокаТабличнойЧасти.СтароеЗначение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ГруппаНУ") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.ГруппаНУ = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.СрокСлужбы") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.СрокСлужбы = СтрокаТабличнойЧасти.Значение;		
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ОбъемПродукции") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.ОбъемПродукции = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.СпособНачисленияАмортизации") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.СпособНачисленияАмортизации = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.СпособОтраженияРасходовПоАмортизации") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.СпособОтраженияРасходовПоАмортизации = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.СчетУчета") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.СчетУчета = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ЛиквидационнаяСтоимость") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.ЛиквидационнаяСтоимость = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.Консервация") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.Консервация = СтрокаТабличнойЧасти.Значение;			
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ПараметрыВыработки") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.ПараметрыВыработки = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.КоэффициентУскорения") Тогда
			СтрокаПараметров.ФормироватьПараметрыУчетаОС = Истина;
			СтрокаПараметров.КоэффициентУскорения = СтрокаТабличнойЧасти.Значение;	
			
		//////////////////////////////////////////////////	
		
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.МатериалСтен") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.МатериалСтен = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ЖилаяПлощадь") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.ЖилаяПлощадь = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.НежилаяПлощадь") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.НежилаяПлощадь = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.РегиональныйКоэффициент") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.РегиональныйКоэффициент = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ЗональныйКоэффициент") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.ЗональныйКоэффициент = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ОтраслевойКоэффициент") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.ОтраслевойКоэффициент = СтрокаТабличнойЧасти.Значение;			
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.ГруппаИмущества") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.ГруппаИмущества = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.КодИмущества") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.КодИмущества = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.КодНазначенияИмущества") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.КодНазначенияИмущества = СтрокаТабличнойЧасти.Значение;
		ИначеЕсли СтрокаТабличнойЧасти.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыМодернизацииОС.КодПользователяИмущества") Тогда
			СтрокаПараметров.ФормироватьСведенияОбИмуществе = Истина;
			СтрокаПараметров.КодПользователяИмущества = СтрокаТабличнойЧасти.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаПараметров;
	
КонецФункции // ПолучитьВсеПараметры()()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли