#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНачисления(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ВременнаяТаблицаШапка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	ВременнаяТаблицаШапка.ДатаНачала КАК ПериодДействияНачало,
		|	КОНЕЦПЕРИОДА(ВременнаяТаблицаШапка.ДатаОкончания, ДЕНЬ) КАК ПериодДействияКонец,
		|	ВременнаяТаблицаШапка.ВидРасчета КАК ВидРасчета,
		|	ВременнаяТаблицаШапка.СпособОтражения КАК СпособОтражения,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Подразделение КАК Подразделение,
		|	ВременнаяТаблицаШапка.Должность КАК Должность,
		|	ВременнаяТаблицаШапка.Результат КАК Размер,
		|	ВременнаяТаблицаШапка.Результат КАК Результат,
		|	ВременнаяТаблицаШапка.Дней КАК ОтработаноДней,
		|	ВременнаяТаблицаШапка.ГрафикРаботы КАК ГрафикРаботы
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНачисления", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаНачисления()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		|	ТаблицаДокумента.Подразделение КАК Подразделение,
		|	ТаблицаДокумента.Должность КАК Должность,
		|	ТаблицаДокумента.ГрафикРаботы КАК ГрафикРаботы,
		|	ТаблицаДокумента.Дней КАК Дней,
		|	ТаблицаДокумента.ДатаНачала КАК ДатаНачала,
		|	ТаблицаДокумента.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаДокумента.ВидРасчета КАК ВидРасчета,
		|	ТаблицаДокумента.СпособОтражения КАК СпособОтражения,
		|	ТаблицаДокумента.Результат КАК Результат
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.НачислениеЗарплатыПоСреднемуЗаработку КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаНачисления(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
Функция ПечатьСправкаПоРасчетуСреднегоЗаработка(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыПоСреднемуЗаработку.Ссылка КАК Ссылка,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Дата КАК ДатаДокумента,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Номер КАК НомерДокумента,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Организация КАК Организация,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	НачислениеЗарплатыПоСреднемуЗаработку.ФизЛицо КАК ФизЛицо,
		|	НачислениеЗарплатыПоСреднемуЗаработку.ФизЛицо.Наименование КАК ФизЛицоПредставление,
		|	НачислениеЗарплатыПоСреднемуЗаработку.ФизЛицо.Код КАК ТабельныйНомер,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Должность.Наименование КАК ДолжностьПредставление,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Подразделение.Наименование КАК ПодразделениеПредставление,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Дней КАК Дней,
		|	НачислениеЗарплатыПоСреднемуЗаработку.Результат КАК Результат,
		|	НачислениеЗарплатыПоСреднемуЗаработку.ДатаНачала КАК ДатаНачала,
		|	НачислениеЗарплатыПоСреднемуЗаработку.ДатаОкончания КАК ДатаОкончания,
		|	НачислениеЗарплатыПоСреднемуЗаработку.СреднийЗаработок.(
		|		НомерСтроки КАК НомерСтроки,
		|		ПериодРегистрации КАК ПериодРегистрации,
		|		ОтработаноДней КАК ОтработаноДней,
		|		Результат КАК СреднийЗаработокРезультат
		|	) КАК СреднийЗаработок
		|ИЗ
		|	Документ.НачислениеЗарплатыПоСреднемуЗаработку КАК НачислениеЗарплатыПоСреднемуЗаработку
		|ГДЕ
		|	НачислениеЗарплатыПоСреднемуЗаработку.Ссылка В(&СписокДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "НачислениеЗарплатыПоСреднемуЗаработку_СправкаПоРасчетуСреднегоЗаработка";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НачислениеЗарплатыПоСреднемуЗаработку.ПФ_MXL_СправкаПоРасчетуСреднегоЗаработка");		
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ДатаНачала", Формат(Шапка.ДатаНачала, "ДЛФ=D"));
		ДанныеПечати.Вставить("ДатаОкончания", Формат(Шапка.ДатаОкончания, "ДЛФ=D"));
		
		ДанныеПечати.Вставить("ОрганизацияПредставление", Шапка.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("ФизЛицоПредставление", Шапка.ФизЛицоПредставление);
		ДанныеПечати.Вставить("ТабельныйНомер", Шапка.ТабельныйНомер);
		ДанныеПечати.Вставить("ПодразделениеПредставление", Шапка.ПодразделениеПредставление);
		ДанныеПечати.Вставить("ДолжностьПредставление", Шапка.ДолжностьПредставление);
		
		ДанныеПечати.Вставить("КоличествоДней", Шапка.Дней);
		ДанныеПечати.Вставить("Результат", Шапка.Результат);
		Если НЕ Шапка.Дней = 0 Тогда 
			РазмерСреднийЗаработок = Шапка.Результат / Шапка.Дней;
			ДанныеПечати.Вставить("РазмерСреднийЗаработок", РазмерСреднийЗаработок);
		КонецЕсли;	

		
		ТаблицаСреднийЗаработок = Шапка.СреднийЗаработок.Выгрузить();
		ДанныеПечати.Вставить("ОтработаноДней", ТаблицаСреднийЗаработок.Итог("ОтработаноДней"));
		ДанныеПечати.Вставить("СреднийЗаработокРезультат", ТаблицаСреднийЗаработок.Итог("СреднийЗаработокРезультат"));
		
		Если ТаблицаСреднийЗаработок.Количество() > 0 Тогда 
			ПериодРегистрацииНачалаРасчетногоПериода = ТаблицаСреднийЗаработок[0].ПериодРегистрации;
			ПериодРегистрацииОкончанияРасчетногоПериода = КонецМесяца(ТаблицаСреднийЗаработок[ТаблицаСреднийЗаработок.Количество()-1].ПериодРегистрации);
			
			ДанныеПечати.Вставить("ПериодРегистрацииНачалаРасчетногоПериода", Формат(ПериодРегистрацииНачалаРасчетногоПериода, "ДЛФ=D"));
			ДанныеПечати.Вставить("ПериодРегистрацииОкончанияРасчетногоПериода", Формат(ПериодРегистрацииОкончанияРасчетногоПериода, "ДЛФ=D"));
		КонецЕсли;
		
		// Области
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("ШапкаСреднийЗаработок");
		МассивОбластейМакета.Добавить("СтрокаСреднийЗаработок");
		МассивОбластейМакета.Добавить("ИтогоСреднийЗаработок");
		МассивОбластейМакета.Добавить("Подписи");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти <> "СтрокаСреднийЗаработок" Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			ИначеЕсли ИмяОбласти = "СтрокаСреднийЗаработок" Тогда 
				Для Каждого СтрокаТаблицы Из ТаблицаСреднийЗаработок Цикл
					ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаПоРасчетуСреднегоЗаработка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"СправкаПоРасчетуСреднегоЗаработка", 
			НСтр("ru = 'Справка'"), 
			ПечатьСправкаПоРасчетуСреднегоЗаработка(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.НачислениеЗарплатыПоСреднемуЗаработку.ПФ_MXL_СправкаПоРасчетуСреднегоЗаработка");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СправкаПоРасчетуСреднегоЗаработка";
	КомандаПечати.Представление = НСтр("ru = 'Справка'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрСправкаПоРасчетуСреднегоЗаработка";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Начисление зарплаты по среднему заработку""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
