#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - ДокументСсылка.ИнвентаризацияОС - Данные заполнения документа.
//	
Процедура ЗаполнитьПоИнвентаризацииОС(ДанныеЗаполнения) Экспорт

	ДокументОснование 	= ДанныеЗаполнения;
	МОЛ 				= ДанныеЗаполнения.МОЛ;
	Подразделение 		= ДанныеЗаполнения.Подразделение;
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.ОС Цикл
		Если СтрокаТабличнойЧасти.НедостачаСумма = 0 Тогда 
			Продолжить;
		КонецЕсли;	
		НоваяСтрокаТабличнойЧасти = ОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, СтрокаТабличнойЧасти);
		НоваяСтрокаТабличнойЧасти.СчетЗатрат = ПланыСчетов.Хозрасчетный.РасходыПоВыбытиюАктивов; // 9540
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Комиссия Цикл
		НоваяСтрокаТабличнойЧасти = Комиссия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, СтрокаТабличнойЧасти);
	КонецЦикла;

	УправлениеВнеоборотнымиАктивами.ЗаполнитьДанныеОсновныхСредствВТабличнойЧасти(Ссылка, ДанныеЗаполнения.Дата, ДанныеЗаполнения.Организация, ОС);
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - ДокументСсылка.ПоступлениеТоваровУслуг - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюТоваров(ДанныеЗаполнения) Экспорт
	ДокументОснование = ДанныеЗаполнения;
	
	Организация = ДанныеЗаполнения.Организация;

	Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.ОС Цикл
		НоваяСтрока = ОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
	
#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ИнвентаризацияОС")] = "ЗаполнитьПоИнвентаризацииОС";
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеТоваровУслуг")] = "ЗаполнитьПоПоступлениюТоваров";
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ПроверяемыеРеквизиты.Добавить("ОС");
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ВидОперации = Перечисления.ВидыОперацийСписанияОС.НеПринятыеКУчетуОС Тогда		
		МассивНепроверяемыхРеквизитов.Добавить("МОЛ");
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");		
	КонецЕсли;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДанные(Отказ, РежимПроведения);
	
	ОтразитьДвижения(Отказ, РежимПроведения);
	
	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбработкаПроведения

// Процедура инициализирует данные документа
// и подготавливает таблицы для движения в регистры
//
Процедура ИнициализироватьДанные(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.СписаниеОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
КонецПроцедуры
	
// Процедура заполняет регистры данными
//
Процедура ОтразитьДвижения(Отказ, РежимПроведения)

	// Отражение в разделах учета.
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписанияОС.НеПринятыеКУчетуОС") Тогда
		УправлениеВнеоборотнымиАктивами.СформироватьДвиженияСписаниеОСПриобретенныхИНеПринятыхКУчету(ДополнительныеСвойства, Движения, Отказ, Истина);
	Иначе
		УправлениеВнеоборотнымиАктивами.СформироватьДвиженияСписаниеОС(ДополнительныеСвойства, Движения, Отказ, Истина);	
	КонецЕсли;	
	БухгалтерскийУчетСервер.ОтразитьСобытияОС(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьСостоянияОС(ДополнительныеСвойства, Движения, Отказ); 
	БухгалтерскийУчетСервер.ОтразитьСоставОС(ДополнительныеСвойства, Движения, Отказ);
	
	НалоговыйУчет.СформироватьДвиженияКорректировкаНУ(ДополнительныеСвойства, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.СчетЗатрат КАК СчетЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОССрезПоследних.НомерСтроки КАК НомерСтроки,
		|	СостоянияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)
		|				И НЕ Регистратор = &Ссылка) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	НЕ СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОССрезПоследних.НомерСтроки КАК НомерСтроки,
		|	СостоянияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	РегистрСведений.СостоянияОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)
		|				И НЕ Регистратор = &Ссылка) КАК СостоянияОССрезПоследних
		|ГДЕ
		|	НЕ СостоянияОССрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.Поступило)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОССрезПоследних.НомерСтроки КАК НомерСтроки,
		|	МестонахождениеОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	РегистрСведений.МестонахождениеОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)
		|				И НЕ Регистратор = &Ссылка) КАК МестонахождениеОССрезПоследних
		|ГДЕ
		|	НЕ(МестонахождениеОССрезПоследних.МОЛ = &МОЛ
		|				И МестонахождениеОССрезПоследних.Подразделение = &Подразделение)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ТаблицаОСДублиСтрок.НомерСтроки) КАК НомерСтроки,
		|	ТаблицаОСДублиСтрок.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ТаблицаОСДублиСтрок
		|		ПО ВременнаяТаблицаОС.НомерСтроки <> ТаблицаОСДублиСтрок.НомерСтроки
		|			И ВременнаяТаблицаОС.ОсновноеСредство = ТаблицаОСДублиСтрок.ОсновноеСредство
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОСДублиСтрок.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ВременнаяТаблицаОС.ОсновноеСредство КАК Справочник.ОсновныеСредства).Представление КАК ОсновноеСредствоПредставление,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СостоянияОССрезПоследних.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|				И ЕСТЬNULL(ПараметрыУчетаОССрезПоследних.Консервация, ЛОЖЬ)
		|				И ВременнаяТаблицаОС.СчетЗатрат <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыПоВыбытиюНеамортизируемыхАктивов)
		|			ТОГДА 1
		|		КОГДА ЕСТЬNULL(СостоянияОССрезПоследних.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|				И НЕ ЕСТЬNULL(ПараметрыУчетаОССрезПоследних.Консервация, ЛОЖЬ)
		|				И ВременнаяТаблицаОС.СчетЗатрат = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыПоВыбытиюНеамортизируемыхАктивов)
		|			ТОГДА 2
		|		КОГДА ЕСТЬNULL(СостоянияОССрезПоследних.Состояние, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.ПринятоКУчету)
		|				И ВременнаяТаблицаОС.СчетЗатрат <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыПоВыбытиюНеамортизируемыхАктивов)
		|			ТОГДА 3
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КодОшибки,
		|	СостоянияОССрезПоследних.Состояние КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОС)
		|					И НЕ Регистратор = &Ссылка) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ВременнаяТаблицаОС.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство,
		|	РегистрСведений.СостоянияОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС)
		|				И НЕ Регистратор = &Ссылка) КАК СостоянияОССрезПоследних";                          	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("Период",	Дата);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("МОЛ", МОЛ);
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	Запрос.Параметры.Вставить("ТаблицаОС", ОС.Выгрузить());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Регистр "Состояния ОС".
	Если ВидОперации = Перечисления.ВидыОперацийСписанияОС.ПринятыеКУчетуОС Тогда
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Нельзя списывать основное средство не принятое к учету. Строка %1 списка ""Основные средства"".'"), 
								ВыборкаИзРезультатаЗапроса.НомерСтроки);
				БухгалтерскийУчетСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"ОС",
					ВыборкаИзРезультатаЗапроса.НомерСтроки,
					"ОсновноеСредство",
					Отказ);
			КонецЦикла;
		КонецЕсли;
	
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийСписанияОС.НеПринятыеКУчетуОС Тогда
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Можно списывать только основное средство с состоянием ""Поступило"". Строка %1 списка ""Основные средства"".'"), 
								ВыборкаИзРезультатаЗапроса.НомерСтроки);
				БухгалтерскийУчетСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"ОС",
					ВыборкаИзРезультатаЗапроса.НомерСтроки,
					"ОсновноеСредство",
					Отказ);
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли;
	
	// Регистр "Местонахождение ОС".
	Если НЕ МассивРезультатов[3].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство протеворечит указанному местонахождению. Строка %1 списка ""Основные средства"".'"), 
							ВыборкаИзРезультатаЗапроса.НомерСтроки);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"ОС",
				ВыборкаИзРезультатаЗапроса.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЦикла;
	КонецЕсли;

	// Дубли строк.
	Если НЕ МассивРезультатов[4].Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство указывается повторно в строке %1 списка ""Основные средства"".'"), 
							ВыборкаИзРезультатаЗапроса.НомерСтроки);
			БухгалтерскийУчетСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				ТекстСообщения,
				"ОС",
				ВыборкаИзРезультатаЗапроса.НомерСтроки,
				"ОсновноеСредство",
				Отказ);
		КонецЦикла;
	КонецЕсли;	
	
	Выборка = МассивРезультатов[5].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КодОшибки = 1 Тогда	
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство %1 законсервировано и для него необходиом указать счет затрат 9541'"), 
								Выборка.ОсновноеСредствоПредставление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			Продолжить;
			
		ИначеЕсли Выборка.КодОшибки = 2 Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство %1 не законсервировано и для него невозможно указать счет затрат 9541'"), 
								Выборка.ОсновноеСредствоПредставление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			Продолжить;
			
		ИначеЕсли Выборка.КодОшибки = 3 
			И ВидОперации = Перечисления.ВидыОперацийСписанияОС.ПринятыеКУчетуОС Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство %1 не принято к учету и для него необходимо указать счет затрат 9541'"), 
								Выборка.ОсновноеСредствоПредставление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли