#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// Подготовка данных	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ВидОперации КАК ВидОперации
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаОС.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаОС.СтатьяЗатрат КАК СтатьяЗатрат
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС";
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = МассивРезультатов[0].Выгрузить();
	ТаблицаОС = МассивРезультатов[1].Выгрузить();
	
	ТаблицаСписанныеОС = УправлениеВнеоборотнымиАктивами.ПодготовитьТаблицуСписанныеОС(ТаблицаОС, СтруктураДополнительныеСвойства);
	ТаблицаРаспределениеПоСпособуОтражения = УправлениеВнеоборотнымиАктивами.ПодготовитьТаблицуРаспределениеПоСпособуОтраженияРасходовПоАмортизации(ТаблицаОС, СтруктураДополнительныеСвойства, Неопределено);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеОС", ТаблицаСписанныеОС);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРаспределениеПоСпособуОтражения", ТаблицаРаспределениеПоСпособуОтражения);
	
КонецПроцедуры 

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСостоянияОС", РезультатЗапроса.Выгрузить()); 
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Списание) КАК Событие,
		|	ВременнаяТаблицаШапка.Номер КАК НомерДокумента,
		|	""Списание ОС"" КАК НазваниеДокумента
		|ИЗ
		|	ВременнаяТаблицаОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСобытияОС", РезультатЗапроса.Выгрузить());
КонецПроцедуры     

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСоставОС(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ВременнаяТаблицаОС.СостояниеВСоставеОС КАК СостояниеВСоставеОС
		|ПОМЕСТИТЬ ВременнаяТаблицаОСВсе
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	СоставОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СоставОССрезПоследних.ОсновноеСредствоВСоставеКомплекта КАК ОсновноеСредствоВСоставеКомплекта,
		|	ВременнаяТаблицаОСВсе.СостояниеВСоставеОС КАК СостояниеВСоставеОС
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставОС.СрезПоследних(
		|				&Период,
		|				ОсновноеСредствоВСоставеКомплекта В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаОСВсе.ОсновноеСредство КАК ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОСВсе КАК ВременнаяТаблицаОСВсе)
		|					И НЕ Регистратор = &ДокументСсылка) КАК СоставОССрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОСВсе КАК ВременнаяТаблицаОСВсе
		|			ПО СоставОССрезПоследних.ОсновноеСредствоВСоставеКомплекта = ВременнаяТаблицаОСВсе.ОсновноеСредство
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(СоставОССрезПоследних.СостояниеВСоставеОС = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Комплектация)
		|			ИЛИ СоставОССрезПоследних.СостояниеВСоставеОС = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Добавление))";
	Запрос.Параметры.Вставить("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);	
	Запрос.Параметры.Вставить("ДокументСсылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСоставОС", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	ТаблицаОСВходящихВКомплекты = ТаблицаОСВходящихВКомплекты(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВидОперации КАК ВидОперации,
		|	ТаблицаДокумента.Номер КАК Номер,
		|	ТаблицаДокумента.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.СписаниеОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаОСКомплектов
		|ИЗ
		|	&ТаблицаОСВходящихВКомплекты КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.ВыводИзКомплекта) КАК СостояниеВСоставеОС
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И НЕ ТаблицаДокумента.ОсновноеСредство.ЭтоКомплект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ОсновноеСредство,
		|	ТаблицаДокумента.СчетЗатрат,
		|	ТаблицаДокумента.СтатьяЗатрат,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Ликвидация)
		|ИЗ
		|	ВременнаяТаблицаОСКомплектов КАК ТаблицаДокумента		
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПараметрыУчетаОССрезПоследних.ГруппаНУ КАК ГруппаНУ
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчета
		|ИЗ
		|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|					ИЗ
		|						ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)) КАК ПараметрыУчетаОССрезПоследних";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ТаблицаОСВходящихВКомплекты", ТаблицаОСВходящихВКомплекты);
	Запрос.Выполнить();      	
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);			 
	СформироватьТаблицаСостоянияОС(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСобытияОС(ДокументСсылка, СтруктураДополнительныеСвойства); 	
	//СформироватьТаблицаДвижениеОСНУ(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСоставОС(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьФормыОС4(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СписаниеОС.Ссылка КАК Ссылка,
		|	СписаниеОС.Дата КАК Дата,
		|	СписаниеОС.Организация КАК Организация,
		|	СписаниеОС.Организация.Наименование КАК ОрганизацияНаименование,
		|	СписаниеОС.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	СписаниеОС.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
		|	СписаниеОС.МОЛ КАК МОЛ,
		|	СписаниеОС.МОЛ.ФИО КАК МОЛ_ФИО,
		|	СписаниеОС.ТехническоеСостояние КАК ТехническоеСостояние,
		|	СписаниеОС.ДокументОснованиеВид КАК ДокументОснованиеВид,
		|	СписаниеОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	СписаниеОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	СписаниеОС.ОС.(
		|		НомерСтроки КАК НП,
		|		ОсновноеСредство КАК ОсновноеСредство,
		|		СчетЗатрат КАК СчетДт,
		|		ИнвентарныйНомер КАК ИнвентарныйНомер,
		|		ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
		|	) КАК ОС,
		|	СписаниеОС.Комиссия.(
		|		ФизЛицо КАК ФизЛицо,
		|		ФизЛицо.ФИО КАК ФизЛицоФИО,
		|		Председатель КАК Председатель
		|	) КАК Комиссия
		|ИЗ
		|	Документ.СписаниеОС КАК СписаниеОС
		|ГДЕ
		|	СписаниеОС.Ссылка В(&МассивОбъектов)";	
	Запрос = Новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);		
	РезультатЗапроса = Запрос.Выполнить();
	Шапка = РезультатЗапроса.Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати 	= "СписаниеОС_ФормаОС4";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеОС.ПФ_MXL_ФормаОС4");
	
	Пока Шапка.Следующий() Цикл		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации", ?(ЗначениеЗаполнено(Шапка.ОрганизацияНаименованиеПолное), Шапка.ОрганизацияНаименованиеПолное, Шапка.ОрганизацияНаименование));
		ДанныеПечати.Вставить("ОрганизацияПоОКПО", Шапка.ОрганизацияПоОКПО);
		ДанныеПечати.Вставить("ДатаДокумента", Шапка.Дата);
		
		ДанныеПечати.Вставить("ДокументОснованиеВид", Шапка.ДокументОснованиеВид);
		Если Шапка.ДокументОснованиеДата <> Дата(1, 1, 1) Тогда
			ДанныеПечати.Вставить("ДокументОснованиеДата", Шапка.ДокументОснованиеДата);
		Иначе
			ДанныеПечати.Вставить("ДокументОснованиеДата", "");
		КонецЕсли;	
		ДанныеПечати.Вставить("ДокументОснованиеНомер", Шапка.ДокументОснованиеНомер);
		ДанныеПечати.Вставить("ТехническоеСостояние", Шапка.ТехническоеСостояние);
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.Дата);
		ДанныеПечати.Вставить("РасшифровкаПодписиГлавБух", Руководители.ГлавныйБухгалтер);

		// Параметры учета ОС.
		ВременнаяТаблицаОС = Шапка.ОС.Выгрузить();
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПараметрыУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
			|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
			|	ПараметрыУчетаОССрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
			|	ПараметрыУчетаОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК НакопленнаяАмортизация
			|ИЗ
			|	РегистрСведений.ПараметрыУчетаОС.СрезПоследних(
			|			&Период,
			|			Организация = &Организация
			|				И ОсновноеСредство В (&ОсновноеСредство)) КАК ПараметрыУчетаОССрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
			|				&Период,
			|				,
			|				ЗНАЧЕНИЕ(ПланвидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
			|				Организация = &Организация
			|					И Субконто1 В (&ОсновноеСредство)) КАК ХозрасчетныйОстатки
			|		ПО ПараметрыУчетаОССрезПоследних.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
			|			И ПараметрыУчетаОССрезПоследних.СчетУчета.ПарныйСчет = ХозрасчетныйОстатки.Счет";
		Запрос.УстановитьПараметр("Период", Шапка.Дата);
		Запрос.УстановитьПараметр("Организация", Шапка.Организация);
		Запрос.УстановитьПараметр("Организация", Шапка.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ВременнаяТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство"));
		ТаблицаОС = Запрос.Выполнить().Выгрузить();
		ТаблицаОС.Индексы.Добавить("ОсновноеСредство");
		
		ВременнаяТаблицаКомиссия = Шапка.Комиссия.Выгрузить();
		
		МассивФизЛиц = ВременнаяТаблицаКомиссия.ВыгрузитьКолонку("ФизЛицо");
		МассивФизЛиц.Добавить(Шапка.МОЛ);
		
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
			|	СотрудникиСрезПоследних.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.Сотрудники.СрезПоследних(
			|			&Период,
			|			Организация = &Организация
			|				И ФизЛицо В (&ФизЛицо)) КАК СотрудникиСрезПоследних";
		Запрос.УстановитьПараметр("Период", 	 Шапка.Дата);
		Запрос.УстановитьПараметр("Организация", Шапка.Организация);
		Запрос.УстановитьПараметр("ФизЛицо", 	 МассивФизЛиц);
		ТаблицаДолжности = Запрос.Выполнить().Выгрузить();
		ТаблицаДолжности.Индексы.Добавить("ФизЛицо");

		ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
		ДанныеПечати.Вставить("ЗаголовокРазделаКомиссии", НСтр("ru = 'Председатель комиссии'"));
		
		СтрокаФизЛицо  = ВременнаяТаблицаКомиссия.Найти(Истина, "Председатель");
		Если ТаблицаДолжности.Количество() > 0 И СтрокаФизЛицо <> Неопределено Тогда
			СтрокаДожность = ТаблицаДолжности.Найти(СтрокаФизЛицо.ФизЛицо, "ФизЛицо");
			Если СтрокаДожность <> Неопределено Тогда 
				ДанныеПечати.Вставить("Должность", СтрокаДожность.Должность);
			Иначе
				ДанныеПечати.Вставить("Должность", "");	
			КонецЕсли;	
		Иначе
			ДанныеПечати.Вставить("Должность", "");
		КонецЕсли;	
		
		Если СтрокаФизЛицо <> Неопределено Тогда
			ДанныеПечати.Вставить("РасшифровкаПодписи", СтрокаФизЛицо.ФизЛицоФИО);
		Иначе 
			ДанныеПечати.Вставить("РасшифровкаПодписи", "");
		КонецЕсли;	
		
		// Инициализация массива областей макета
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Шапка");
		МассивОбластейМакета.Добавить("ЗаголовокТаблицы1");
		МассивОбластейМакета.Добавить("СтрокаТаблицы1");
		МассивОбластейМакета.Добавить("ИтогоТаблицы1");
		МассивОбластейМакета.Добавить("ЗаголовокТаблицы2");
		МассивОбластейМакета.Добавить("Комиссия");
		МассивОбластейМакета.Добавить("ЗаголовокТаблицы3");
		МассивОбластейМакета.Добавить("СтрокаТаблицы3");
		МассивОбластейМакета.Добавить("ИтогоТаблицы3");
		МассивОбластейМакета.Добавить("Подвал");
		
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти = "ЗаголовокТаблицы1"
				ИЛИ ИмяОбласти = "СтрокаТаблицы3"
				ИЛИ ИмяОбласти = "ИтогоТаблицы3" Тогда
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли ИмяОбласти = "ЗаголовокТаблицы3" Тогда
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли ИмяОбласти = "Шапка"
				ИЛИ ИмяОбласти = "ИтогоТаблицы1"
				ИЛИ ИмяОбласти = "ЗаголовокТаблицы2"
				ИЛИ ИмяОбласти = "Подвал" Тогда
				
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли ИмяОбласти = "СтрокаТаблицы1" Тогда
				
				ВыборкаОС = Шапка.ОС.Выбрать();
				
				ИтогоНачальнаяАмортизация = 0;
				СтрокаОсновныхСредств = "";
				ОСДляПринятияКУчету = Неопределено;
				ПервыйШаг = Истина;
				
				Пока ВыборкаОС.Следующий() Цикл		
					ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы1");
					ОбластьМакета.Параметры.Заполнить(ВыборкаОС);
					
					ДанныеПечатиСтроки = Новый Структура("СчетКт, НачальнаяСтоимость, НакопленнаяАмортизация", "", "", "");
					НайденнаяСтрока = ТаблицаОС.Найти(ВыборкаОС.ОсновноеСредство, "ОсновноеСредство");
					Если НЕ НайденнаяСтрока = Неопределено Тогда 
						ДанныеПечатиСтроки.СчетКт = НайденнаяСтрока.СчетУчета;	
						ДанныеПечатиСтроки.НачальнаяСтоимость = НайденнаяСтрока.ПервоначальнаяСтоимость;	
						ДанныеПечатиСтроки.НакопленнаяАмортизация = НайденнаяСтрока.НакопленнаяАмортизация;	
						ДанныеПечати.Вставить("ДатаВводаВЭксплуатацию", Формат(НайденнаяСтрока.ДатаВводаВЭксплуатацию, "ДЛФ=D"));
						
						ИтогоНачальнаяАмортизация = ИтогоНачальнаяАмортизация + НайденнаяСтрока.НакопленнаяАмортизация;
					КонецЕсли;	
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтроки);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					Если ОСДляПринятияКУчету = Неопределено Тогда
						ОСДляПринятияКУчету = ВыборкаОС.ОсновноеСредство;
					КонецЕсли;	
					
					Если ПервыйШаг Тогда
						СтрокаОсновныхСредств = Строка(ВыборкаОС.ОсновноеСредство);
					Иначе	
						СтрокаОсновныхСредств = СтрШаблон("%1, %2", СтрокаОсновныхСредств, ВыборкаОС.ОсновноеСредство);
					КонецЕсли;
					ПервыйШаг = Ложь;
				КонецЦикла;
				
				ДанныеПечати.Вставить("ИтогоНачальнаяАмортизация", ИтогоНачальнаяАмортизация);
				ДанныеПечати.Вставить("ОсновноеСредство", СтрокаОсновныхСредств);
				
			ИначеЕсли ИмяОбласти = "Комиссия" Тогда
				
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ВыборкаСтрокКомиссия = Шапка.Комиссия.Выбрать();
				Пока ВыборкаСтрокКомиссия.Следующий() Цикл 
					Если ВыборкаСтрокКомиссия.Председатель Тогда
						Продолжить;	
					КонецЕсли;
					
					СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(Шапка.Организация, ВыборкаСтрокКомиссия.ФизЛицо, Шапка.Дата);
					ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = НСтр("ru = 'Члены комиссии'");
					ОбластьМакета.Параметры.Должность 			= СведенияОФизЛице.Должность;
					ОбластьМакета.Параметры.РасшифровкаПодписи	= СведенияОФизЛице.ФамилияИнициалы;
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				КонецЦикла;
								
				ДанныеПечати.ЗаголовокРазделаКомиссии = НСтр("ru = 'Материально-ответственное лицо'");
				
				Если ТаблицаДолжности.Количество() > 0 И Шапка.Мол <> Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					СтрокаДожность = ТаблицаДолжности.Найти(Шапка.Мол, "ФизЛицо");
					Если СтрокаДожность <> Неопределено Тогда 
						ДанныеПечати.Должность = СтрокаДожность.Должность;
					Иначе
						ДанныеПечати.Должность = "";	
					КонецЕсли;
				Иначе
					ДанныеПечати.Должность = "";	
				КонецЕсли;
				
				Если Шапка.Мол <> Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					ДанныеПечати.РасшифровкаПодписи = Шапка.МОЛ_ФИО;	
				Иначе
					ДанныеПечати.РасшифровкаПодписи = "";
				КонецЕсли;	
				
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;		
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);													   
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции // ПечатнаяФорма()

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаОС4") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ФормаОС4", 
			НСтр("ru = 'Форма ОС-4'"), 
			ПечатьФормыОС4(МассивОбъектов, ОбъектыПечати),,
			"Документ.СписаниеОС.ПФ_MXL_ФормаОС4");
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ФормаОС4";
	КомандаПечати.Представление = НСтр("ru = 'Форма ОС-4'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрСписаниеОС";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Списание ОС""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаОСВходящихВКомплекты(ДокументСсылка, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка, 
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
		|	ТаблицаДокумента.СчетЗатрат КАК СчетЗатрат,
		|	ТаблицаДокумента.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ ВременнаяТаблицаКомплекты
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаОС.СрезПоследних(&Период, Организация = &Организация) КАК ПараметрыУчетаОССрезПоследних
		|		ПО ТаблицаДокумента.ОсновноеСредство = ПараметрыУчетаОССрезПоследних.ОсновноеСредство
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.ОсновноеСредство.ЭтоКомплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоставОССрезПоследних.ОсновноеСредствоВСоставеКомплекта КАК ОсновноеСредство,
		|	ВременнаяТаблицаКомплекты.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаКомплекты.СчетУчета КАК СчетУчета,
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка) КАК СпособОтраженияРасходовПоАмортизации,
		|	ВременнаяТаблицаКомплекты.СчетЗатрат КАК СчетЗатрат,
		|	ВременнаяТаблицаКомплекты.СтатьяЗатрат КАК СтатьяЗатрат
		|ИЗ
		|	ВременнаяТаблицаКомплекты КАК ВременнаяТаблицаКомплекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставОС.СрезПоследних(
		|				&Период,
		|				НЕ Регистратор = &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаКомплекты.ОсновноеСредство КАК ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаКомплекты КАК ВременнаяТаблицаКомплекты)) КАК СоставОССрезПоследних
		|		ПО ВременнаяТаблицаКомплекты.ОсновноеСредство = СоставОССрезПоследних.ОсновноеСредство
		|			И (СоставОССрезПоследних.СостояниеВСоставеОС = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Комплектация)
		|				ИЛИ СоставОССрезПоследних.СостояниеВСоставеОС = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияОС.Добавление))";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли