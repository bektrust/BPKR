#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ)	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.СчетДт КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетКт КАК СчетКт,
		|	ВременнаяТаблицаШапка.СубконтоДт1 КАК СубконтоДт1,
		|	ВременнаяТаблицаШапка.СубконтоДт2 КАК СубконтоДт2,
		|	ВременнаяТаблицаШапка.СубконтоДт3 КАК СубконтоДт3,
		|	ВременнаяТаблицаШапка.СубконтоКт1 КАК СубконтоКт1,
		|	ВременнаяТаблицаШапка.СубконтоКт2 КАК СубконтоКт2,
		|	ВременнаяТаблицаШапка.СубконтоКт3 КАК СубконтоКт3,
		|	ВременнаяТаблицаШапка.СуммаДокумента КАК Сумма,
		|	&Содержание КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	НЕ ВременнаяТаблицаШапка.СуммаДокумента = 0";
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Роялти'")); 
	РезультатЗапроса = Запрос.Выполнить();		
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаХозрасчетный()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СчетДт КАК СчетДт,
		|	ТаблицаДокумента.СчетКт КАК СчетКт,
		|	ТаблицаДокумента.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаДокумента.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаДокумента.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаДокумента.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаДокумента.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаДокумента.СубконтоКт3 КАК СубконтоКт3,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ОтчетПоРоялти КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой Роялти
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетПоРоялти(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОтчетПоРоялти.Ссылка КАК Ссылка,
		|	ОтчетПоРоялти.Дата КАК Дата,
		|	ОтчетПоРоялти.Организация КАК Организация,
		|	ОтчетПоРоялти.ВидОтчета КАК ВидОтчета,
		|	ОтчетПоРоялти.Налоги.(
		|		НомерСтроки КАК НомерСтроки,
		|		НаименованиеПолезныхИскопаемых КАК НаименованиеПолезныхИскопаемых,
		|		ОбъемВоды КАК ОбъемВоды,
		|		СуммаВыручки КАК СуммаВыручки,
		|		СтавкаРоялти КАК СтавкаРоялти,
		|		Сумма КАК Сумма
		|	) КАК Налоги
		|ИЗ
		|	Документ.ОтчетПоРоялти КАК ОтчетПоРоялти
		|ГДЕ
		|	ОтчетПоРоялти.Ссылка В(&МассивОбъектов)";		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	
	Шапка = РезультатЗапроса.Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоРоялти_ОтчетПоРоялти";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоРоялти.ПФ_MXL_STI_140");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных.
		ДанныеПечати = Новый Структура;
		Если Шапка.ВидОтчета = 0 Тогда 
			ДанныеПечати.Вставить("ВидОтчета0", "Х");
		ИначеЕсли Шапка.ВидОтчета = 1 Тогда 	
			ДанныеПечати.Вставить("ВидОтчета1", "Х");
		ИначеЕсли Шапка.ВидОтчета = 2 Тогда 
			ДанныеПечати.Вставить("ВидОтчета2", "Х");
		КонецЕсли;			

		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.Дата);
		
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", СведенияОбОрганизации.НаименованиеПолное);
		ДанныеПечати.Вставить("ГНСНаименование", СведенияОбОрганизации.ГНСНаименование);

		// ИНН.
		ИНН = СведенияОбОрганизации.ИНН;
		ДанныеПечати.Вставить("ИНН1", Сред(ИНН,1,1));
		ДанныеПечати.Вставить("ИНН2", Сред(ИНН,2,1));
		ДанныеПечати.Вставить("ИНН3", Сред(ИНН,3,1));
		ДанныеПечати.Вставить("ИНН4", Сред(ИНН,4,1));
		ДанныеПечати.Вставить("ИНН5", Сред(ИНН,5,1));
		ДанныеПечати.Вставить("ИНН6", Сред(ИНН,6,1));
		ДанныеПечати.Вставить("ИНН7", Сред(ИНН,7,1));
		ДанныеПечати.Вставить("ИНН8", Сред(ИНН,8,1));
		ДанныеПечати.Вставить("ИНН9", Сред(ИНН,9,1));
		ДанныеПечати.Вставить("ИНН10", Сред(ИНН,10,1));
		ДанныеПечати.Вставить("ИНН11", Сред(ИНН,11,1));
		ДанныеПечати.Вставить("ИНН12", Сред(ИНН,12,1));
		ДанныеПечати.Вставить("ИНН13", Сред(ИНН,13,1));
		ДанныеПечати.Вставить("ИНН4", Сред(ИНН,14,1));
		
		// Код ГНС.
		ГНСКод = СведенияОбОрганизации.ГНСКод;
		ДанныеПечати.Вставить("КодГНС1", Сред(ГНСКод,1,1));
		ДанныеПечати.Вставить("КодГНС2", Сред(ГНСКод,2,1));
		ДанныеПечати.Вставить("КодГНС3", Сред(ГНСКод,3,1));
		
		// ОКПО.
		ОКПО = СведенияОбОрганизации.ОКПО;
		ДанныеПечати.Вставить("ОКПО1", Сред(ОКПО,1,1));
		ДанныеПечати.Вставить("ОКПО2", Сред(ОКПО,2,1));
		ДанныеПечати.Вставить("ОКПО3", Сред(ОКПО,3,1));
		ДанныеПечати.Вставить("ОКПО4", Сред(ОКПО,4,1));
		ДанныеПечати.Вставить("ОКПО5", Сред(ОКПО,5,1));
		ДанныеПечати.Вставить("ОКПО6", Сред(ОКПО,6,1));
		ДанныеПечати.Вставить("ОКПО7", Сред(ОКПО,7,1));
		ДанныеПечати.Вставить("ОКПО8", Сред(ОКПО,8,1));
		
		// Почтовый индекс.
		Индекс = СведенияОбОрганизации.Индекс;
		ДанныеПечати.Вставить("ПОЧТА1", Сред(Индекс,1,1));
		ДанныеПечати.Вставить("ПОЧТА2", Сред(Индекс,2,1));
		ДанныеПечати.Вставить("ПОЧТА3", Сред(Индекс,3,1));
		ДанныеПечати.Вставить("ПОЧТА4", Сред(Индекс,4,1));
		ДанныеПечати.Вставить("ПОЧТА5", Сред(Индекс,5,1));
		ДанныеПечати.Вставить("ПОЧТА6", Сред(Индекс,6,1));
		
		// Контактная информация.
		АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
			+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
			+ ?(СведенияОбОрганизации.Город  = "","", " " + СведенияОбОрганизации.Город + ",") 
			+ ?(СведенияОбОрганизации.НаселенныйПункт  = "","", " " + СведенияОбОрганизации.НаселенныйПункт);
		ДанныеПечати.Вставить("АдрОбластьГород", АдрОбластьГород);
		ДанныеПечати.Вставить("ЮрАдрес", СведенияОбОрганизации.АдрЮР);
		ДанныеПечати.Вставить("Телефон", СведенияОбОрганизации.Тел);
		ДанныеПечати.Вставить("ЕМайл", СведенияОбОрганизации.Email);
		
		// Период.
		ПериодНачало = Формат(НачалоМесяца(Шапка.Дата), "ДФ=ddMMyyyy");
		ПериодКонец = Формат(КонецМесяца(Шапка.Дата), "ДФ=ddMMyyyy");
		// Начало периода.
		ДанныеПечати.Вставить("ПериодН1", Сред(Строка(ПериодНачало),1,1));
		ДанныеПечати.Вставить("ПериодН2", Сред(Строка(ПериодНачало),2,1));
		ДанныеПечати.Вставить("ПериодН3", Сред(Строка(ПериодНачало),3,1));
		ДанныеПечати.Вставить("ПериодН4", Сред(Строка(ПериодНачало),4,1));
		ДанныеПечати.Вставить("ПериодН5", Сред(Строка(ПериодНачало),5,1));
		ДанныеПечати.Вставить("ПериодН6", Сред(Строка(ПериодНачало),6,1));
		ДанныеПечати.Вставить("ПериодН7", Сред(Строка(ПериодНачало),7,1));
		ДанныеПечати.Вставить("ПериодН8", Сред(Строка(ПериодНачало),8,1));		
		// Конец периода.
		ДанныеПечати.Вставить("ПериодК1", Сред(Строка(ПериодКонец),1,1));
		ДанныеПечати.Вставить("ПериодК2", Сред(Строка(ПериодКонец),2,1));
		ДанныеПечати.Вставить("ПериодК3", Сред(Строка(ПериодКонец),3,1));
		ДанныеПечати.Вставить("ПериодК4", Сред(Строка(ПериодКонец),4,1));
		ДанныеПечати.Вставить("ПериодК5", Сред(Строка(ПериодКонец),5,1));
		ДанныеПечати.Вставить("ПериодК6", Сред(Строка(ПериодКонец),6,1));
		ДанныеПечати.Вставить("ПериодК7", Сред(Строка(ПериодКонец),7,1));
		ДанныеПечати.Вставить("ПериодК8", Сред(Строка(ПериодКонец),8,1));
		
		// Таблица.
		СуммаВыручкиИтого = 0;
		СуммаИтого = 0;
		
		ВыборкаНалоги = Шапка.Налоги.Выбрать();
		Пока ВыборкаНалоги.Следующий() Цикл
			ДанныеПечати.Вставить("ОбъемВоды" + Строка(ВыборкаНалоги.НомерСтроки), ВыборкаНалоги.ОбъемВоды);
			ДанныеПечати.Вставить("СуммаВыручки" + Строка(ВыборкаНалоги.НомерСтроки), ВыборкаНалоги.СуммаВыручки);	
			ДанныеПечати.Вставить("СтавкаРоялти" + Строка(ВыборкаНалоги.НомерСтроки), ВыборкаНалоги.СтавкаРоялти);	
			ДанныеПечати.Вставить("Сумма" + Строка(ВыборкаНалоги.НомерСтроки), ВыборкаНалоги.Сумма);	

			СуммаВыручкиИтого = СуммаВыручкиИтого + ВыборкаНалоги.СуммаВыручки;
			СуммаИтого = СуммаИтого + ВыборкаНалоги.Сумма;
		КонецЦикла;
		
		// Итоги.
		ДанныеПечати.Вставить("СуммаВыручкиИтого",СуммаВыручкиИтого);
		ДанныеПечати.Вставить("СуммаИтого",СуммаИтого);
		
		// Области.
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Заголовок");
		МассивОбластейМакета.Добавить("Шапка");
		МассивОбластейМакета.Добавить("ОбластьПериод");
		МассивОбластейМакета.Добавить("ЗаголовокТаблицы");
		МассивОбластейМакета.Добавить("Таблица");
		МассивОбластейМакета.Добавить("Итоги");
		МассивОбластейМакета.Добавить("Подвал");

		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоРоялти") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетПоРоялти", 
		НСтр("ru = 'Отчет по роялти'"), 
		ПечатьОтчетПоРоялти(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоРоялти.ПФ_MXL_STI_140");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоРоялти";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по роялти'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
