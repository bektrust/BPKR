#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ФормаИнвентаризационнаяОписьИНВ19
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатнаяФормаИнвентаризационнаяОписьИНВ19(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИнвентаризацияТоваров.Ссылка,
		|	ИнвентаризацияТоваров.Номер КАК НомерДокумента,
		|	ИнвентаризацияТоваров.Дата КАК ДатаДокумента,
		|	ИнвентаризацияТоваров.Организация,
		|	ИнвентаризацияТоваров.Склад КАК Подразделение,
		|	ИнвентаризацияТоваров.ДатаНачала КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияТоваров.ДатаОкончания КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияТоваров.НаОсновании КАК ДокументОснованиеВид,
		|	ИнвентаризацияТоваров.ДатаОснования КАК ДокументОснованиеДата,
		|	ИнвентаризацияТоваров.НомерОснования КАК ДокументОснованиеНомер,
		|	ИнвентаризацияТоваров.Товары.(
		|		Номенклатура.Наименование КАК ТоварНаименование,
		|		Номенклатура.Код КАК КодНоменклатуры,
		|		Номенклатура.ЕдиницаИзмерения.Представление КАК ЕИ,
		|		Количество КАК ФактКоличество,
		|		УчетноеКоличество КАК БухКоличество,
		|		Цена,
		|		ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.Товары.Отклонение > 0
		|					ТОГДА ИнвентаризацияТоваров.Товары.Отклонение
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатИзлишекКол,
		|		ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.Товары.Отклонение < 0
		|					ТОГДА -1*ИнвентаризацияТоваров.Товары.Отклонение
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатНедостачаКол,
		|		ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.Товары.Отклонение > 0 
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма < 0
		|								ТОГДА -1*(ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма)
		|							ИНАЧЕ ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатИзлишекСумма,
		|		ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.Товары.Отклонение < 0 
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма < 0
		|								ТОГДА -1*(ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма)
		|							ИНАЧЕ ИнвентаризацияТоваров.Товары.УчетнаяСумма - ИнвентаризацияТоваров.Товары.Сумма
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатНедостачаСумма
		|	),
		|	ИнвентаризацияТоваров.МБП.(
		|		Номенклатура.Наименование КАК ТоварНаименование,
		|		Номенклатура.Код КАК КодНоменклатуры,
		|		Номенклатура.ЕдиницаИзмерения.Представление КАК ЕИ,
		|		Количество КАК ФактКоличество,
		|		УчетноеКоличество КАК БухКоличество,
		|		Цена,
		|		ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.МБП.Отклонение > 0
		|					ТОГДА ИнвентаризацияТоваров.МБП.Отклонение
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатИзлишекКол,
		|		ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.МБП.Отклонение < 0
		|					ТОГДА -1*ИнвентаризацияТоваров.МБП.Отклонение
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатНедостачаКол,
		|		ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.МБП.Отклонение > 0 
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма < 0
		|								ТОГДА -1*(ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма)
		|							ИНАЧЕ ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатИзлишекСумма,
		|		ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА ИнвентаризацияТоваров.МБП.Отклонение < 0 
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма < 0
		|								ТОГДА -1*(ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма)
		|							ИНАЧЕ ИнвентаризацияТоваров.МБП.УчетнаяСумма - ИнвентаризацияТоваров.МБП.Сумма
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ЧИСЛО) КАК РезультатНедостачаСумма
		|	),
		|	ИнвентаризацияТоваров.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Документ.ИнвентаризацияТоваров КАК ИнвентаризацияТоваров
		|ГДЕ
		|	ИнвентаризацияТоваров.Ссылка В(&СписокДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументОснованиеНомер
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	ВыборкаЗаголовок = Запрос.Выполнить().Выбрать();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ИнвентаризацияТоваров_ИнвентаризационнаяОписьИНВ19";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваров.ПФ_MXL_ИнвентаризационнаяОписьИНВ19");		
	
	Пока ВыборкаЗаголовок.Следующий()  Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли; 
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		ДанныеПечати.Вставить("ДокументНомер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаголовок.НомерДокумента));
		ДанныеПечати.Вставить("ДокументДата", ВыборкаЗаголовок.ДатаДокумента);
		ДанныеПечати.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаголовок.НомерДокумента));
		
		ФамилияИОГлавногоБухгалтера = "";
		ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.ДатаДокумента);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(ФамилияИОГлавногоБухгалтера, ОтветственныеЛица.ГлавныйБухгалтер);
		ДанныеПечати.Вставить("РасшифровкаПодписиБухгалтер", ФамилияИОГлавногоБухгалтера);
		
		СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(ВыборкаЗаголовок.Организация, ВыборкаЗаголовок.ФизЛицо, ВыборкаЗаголовок.ДатаДокумента); 
		ДанныеПечати.Вставить("МОЛДолжность", 	СведенияОФизЛице.Должность);
		ДанныеПечати.Вставить("МОЛФИО", 		СведенияОФизЛице.ФамилияИнициалы);
		
		ДанныеПечати.Вставить("ДатаДень", День(ВыборкаЗаголовок.ДатаДокумента));
		ДанныеПечати.Вставить("ДатаГод",  Формат(Год(ВыборкаЗаголовок.ДатаДокумента), "ЧГ=0"));
		
		Месяц = Месяц(ВыборкаЗаголовок.ДатаДокумента);
		
		Если Месяц = 1 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Января'"));	
		ИначеЕсли Месяц = 2 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Февраля'"));
		ИначеЕсли Месяц = 3 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Марта'"));
		ИначеЕсли Месяц = 4 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Апреля'"));
		ИначеЕсли Месяц = 5 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Мая'"));
		ИначеЕсли Месяц = 6 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Июня'"));
		ИначеЕсли Месяц = 7 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Июля'"));
		ИначеЕсли Месяц = 8 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Августа'"));
		ИначеЕсли Месяц = 9 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Сентября'"));
		ИначеЕсли Месяц = 10 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Октября'"));
		ИначеЕсли Месяц = 11 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Ноября'"));
		ИначеЕсли Месяц = 12 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Декабря'"));
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаВерх");
		ОбластьМакета.Параметры.Заполнить(ВыборкаЗаголовок);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаВедомость");
		ОбластьМакета.Параметры.Заполнить(ВыборкаЗаголовок);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаМОЛ");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаТовары 	= ВыборкаЗаголовок.Товары.Выбрать();
		ВыборкаМБП 		= ВыборкаЗаголовок.МБП.Выбрать();
		
		КоличествоСтрок = 0;
		
		Пока ВыборкаТовары.Следующий() Цикл
			Если ВыборкаТовары.РезультатИзлишекКол = 0 И ВыборкаТовары.РезультатИзлишекСумма = 0 
				И ВыборкаТовары.РезультатНедостачаКол = 0 И ВыборкаТовары.РезультатНедостачаСумма = 0 Тогда
				Продолжить;
			Иначе	
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;	
		КонецЦикла;	
		
		Пока ВыборкаМБП.Следующий() Цикл
			Если ВыборкаМБП.РезультатИзлишекКол = 0 И ВыборкаМБП.РезультатИзлишекСумма = 0 
				И ВыборкаМБП.РезультатНедостачаКол = 0 И ВыборкаМБП.РезультатНедостачаСумма = 0 Тогда
				Продолжить;
			Иначе	
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;	
		КонецЦикла;
		
		ОбластьИтогиСтрок 			= Макет.ПолучитьОбласть("ИтогиСтрок");
		ОбластьПодписьГлБухгалтера 	= Макет.ПолучитьОбласть("ПодписьГлБухгалтера");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьИтогиСтрок);
		МассивПроверки.Добавить(ОбластьПодписьГлБухгалтера);
		
		ВыборкаТовары.Сбросить();
		ВыборкаМБП.Сбросить();
		НомерСтроки = 1;

		ДанныеПечати.Вставить("РезультатИзлишекКолИтого", 	  0);
		ДанныеПечати.Вставить("РезультатИзлишекСуммаИтого",	  0);
		ДанныеПечати.Вставить("РезультатНедостачаКолИтого",	  0);
		ДанныеПечати.Вставить("РезультатНедостачаСуммаИтого", 0);
		
		Пока ВыборкаТовары.Следующий() Цикл
			Если ВыборкаТовары.РезультатИзлишекКол = 0 И ВыборкаТовары.РезультатИзлишекСумма = 0 
				И ВыборкаТовары.РезультатНедостачаКол = 0 И ВыборкаТовары.РезультатНедостачаСумма = 0 Тогда
				Продолжить;
				
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.Заполнить(ВыборкаТовары);
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ДанныеПечати.РезультатИзлишекКолИтого 		= ДанныеПечати.РезультатИзлишекКолИтого + ВыборкаТовары.РезультатИзлишекКол;
				ДанныеПечати.РезультатИзлишекСуммаИтого 	= ДанныеПечати.РезультатИзлишекСуммаИтого + ВыборкаТовары.РезультатИзлишекСумма;
				ДанныеПечати.РезультатНедостачаКолИтого 	= ДанныеПечати.РезультатНедостачаКолИтого + ВыборкаТовары.РезультатНедостачаКол;
				ДанныеПечати.РезультатНедостачаСуммаИтого 	= ДанныеПечати.РезультатНедостачаСуммаИтого + ВыборкаТовары.РезультатНедостачаСумма;
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивПроверки.Добавить(ОбластьМакета);
					
					Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивПроверки) Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					ОбластьИтогиСтрок.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьИтогиСтрок);

					ОбластьПодписьГлБухгалтера.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьПодписьГлБухгалтера);

				ИначеЕсли ТабличныйДокумент.ПроверитьВывод(ОбластьМакета) Тогда
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				Иначе	
					ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;				
				
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;	
		КонецЦикла;
		
		Пока ВыборкаМБП.Следующий() Цикл
			Если ВыборкаМБП.РезультатИзлишекКол = 0 И ВыборкаМБП.РезультатИзлишекСумма = 0 
				И ВыборкаМБП.РезультатНедостачаКол = 0 И ВыборкаМБП.РезультатНедостачаСумма = 0 Тогда
				Продолжить;
				
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.Заполнить(ВыборкаМБП);
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ДанныеПечати.РезультатИзлишекКолИтого 		= ДанныеПечати.РезультатИзлишекКолИтого + ВыборкаМБП.РезультатИзлишекКол;
				ДанныеПечати.РезультатИзлишекСуммаИтого 	= ДанныеПечати.РезультатИзлишекСуммаИтого + ВыборкаМБП.РезультатИзлишекСумма;
				ДанныеПечати.РезультатНедостачаКолИтого 	= ДанныеПечати.РезультатНедостачаКолИтого + ВыборкаМБП.РезультатНедостачаКол;
				ДанныеПечати.РезультатНедостачаСуммаИтого 	= ДанныеПечати.РезультатНедостачаСуммаИтого + ВыборкаМБП.РезультатНедостачаСумма;
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивПроверки.Добавить(ОбластьМакета);
					
					Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивПроверки) Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					ОбластьИтогиСтрок.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьИтогиСтрок);

					ОбластьПодписьГлБухгалтера.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьПодписьГлБухгалтера);

				ИначеЕсли ТабличныйДокумент.ПроверитьВывод(ОбластьМакета) Тогда
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				Иначе	
					ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;				
				
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;	
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаЗаголовок.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабличныйДокумент;

КонецФункции

// Функция формирует табличный документ с печатной формой ИнвентаризацияТоваров_ИНВ3
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьИнвентаризацияТоваров_ИНВ3(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ИнвентаризацияТоваров_ИнвентаризацияТоваров_ИНВ3";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаКомиссии = Новый Структура();
	ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", НСтр("ru = 'Председатель комиссии'"));
	ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        НСтр("ru = 'Члены комиссии'"));
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваров.Ссылка,
	|	ИнвентаризацияТоваров.Номер КАК НомерДокумента,
	|	ИнвентаризацияТоваров.Дата КАК ДатаДокумента,
	|	ИнвентаризацияТоваров.Организация,
	|	ИнвентаризацияТоваров.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	ИнвентаризацияТоваров.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ИнвентаризацияТоваров.Склад,
	|	ИнвентаризацияТоваров.ДатаНачала КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваров.ДатаОкончания КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваров.НаОсновании КАК ДокументОснованиеВид,
	|	ИнвентаризацияТоваров.ДатаОснования КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваров.НомерОснования КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваров.ФизЛицо КАК ФизЛицо,
	|	ИнвентаризацияТоваров.НепрерывнаяПечать КАК НепрерывнаяПечать,
	|	ИнвентаризацияТоваров.Комиссия.(
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия,
	|	ИнвентаризацияТоваров.Товары.(
	|		Номенклатура.Наименование КАК ТоварНаименование,
	|		Номенклатура.Код КАК ТоварКод,
	|		Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|		Количество КАК ФактКоличество,
	|		УчетноеКоличество КАК БухКоличество,
	|		Сумма КАК ФактСумма,
	|		УчетнаяСумма КАК БухСумма,
	|		СчетУчета КАК СубСчет,
	|		Цена
	|	),
	|	ИнвентаризацияТоваров.МБП.(
	|		Номенклатура.Наименование КАК ТоварНаименование,
	|		Номенклатура.Код КАК ТоварКод,
	|		Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|		Количество КАК ФактКоличество,
	|		УчетноеКоличество КАК БухКоличество,
	|		Цена,
	|		Сумма КАК ФактСумма,
	|		УчетнаяСумма КАК БухСумма,
	|		""1750"" КАК СубСчет
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТоваров КАК ИнвентаризацияТоваров
	|ГДЕ
	|	ИнвентаризацияТоваров.Ссылка В(&СписокДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснованиеНомер
	|АВТОУПОРЯДОЧИВАНИЕ";

				
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	РезультатЗапроса 	= Запрос.Выполнить();
	ВыборкаДок 			= РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДок.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных
		ВременнаяТаблицаТовары 	= ВыборкаДок.Товары.Выгрузить();
		ВременнаяТаблицаМБП 	= ВыборкаДок.МБП.Выгрузить();
		ОбщееКоличествоСтрок 	= ВременнаяТаблицаТовары.Количество() + ВременнаяТаблицаМБП.Количество();
		ОбщееКоличествоФакт 	= ВременнаяТаблицаТовары.Итог("ФактКоличество") + ВременнаяТаблицаМБП.Итог("ФактКоличество");
		ОбщееСуммаФакт 			= ВременнаяТаблицаТовары.Итог("ФактСумма") 		+ ВременнаяТаблицаМБП.Итог("ФактСумма");
		ОбщееБухКоличество 		= ВременнаяТаблицаТовары.Итог("БухКоличество") 	+ ВременнаяТаблицаМБП.Итог("БухКоличество");
		ОбщееБухСумма 			= ВременнаяТаблицаТовары.Итог("БухСумма") 		+ ВременнаяТаблицаМБП.Итог("БухСумма");
		
		ВидЦенностей = "";
		Если ВременнаяТаблицаТовары.Количество() Тогда
			ВидЦенностей = НСтр("ru = 'Товары (материалы)'");	
		КонецЕсли;
		Если ВременнаяТаблицаМБП.Количество() Тогда
			ВидЦенностей = ВидЦенностей + ?(ЗначениеЗаполнено(ВидЦенностей), ", ", "") + НСтр("ru = 'МБП'");	
		КонецЕсли;

		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", ВыборкаДок.ОрганизацияНаименованиеПолное);
		ДанныеПечати.Вставить("ОрганизацияПоОКПО", 			ВыборкаДок.КодПоОКПО);
		ДанныеПечати.Вставить("Подразделение", 				ВыборкаДок.Склад);
		ДанныеПечати.Вставить("ДатаДокумента", 				ВыборкаДок.ДатаДокумента);
		ДанныеПечати.Вставить("НомерДокумента", 			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДок.НомерДокумента));		
		ДанныеПечати.Вставить("ДокументОснованиеДата", 		Формат(ВыборкаДок.ДокументОснованиеДата,"ДЛФ=DD"));
		ДанныеПечати.Вставить("ДатаНачалаИнвентаризации", 	Формат(ВыборкаДок.ДатаНачалаИнвентаризации,"ДЛФ=DD"));
		ДанныеПечати.Вставить("ДатаОкончанияИнвентаризации",Формат(ВыборкаДок.ДатаОкончанияИнвентаризации,"ДЛФ=DD"));
		ДанныеПечати.Вставить("ДатаДок",					Формат(ВыборкаДок.ДатаДокумента,"ДЛФ=DD"));
		ДанныеПечати.Вставить("ВидЦенностей", 				ВидЦенностей);
		ДанныеПечати.Вставить("ДеньДатаДок",				День(ВыборкаДок.ДатаДокумента));
		ДанныеПечати.Вставить("ГодДатаДок",					Формат(Год(ВыборкаДок.ДатаДокумента), "ЧГ=0"));
		
		Месяц = Месяц(ВыборкаДок.ДатаДокумента);
		
		Если Месяц = 1 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Января'"));	
		ИначеЕсли Месяц = 2 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Февраля'"));
		ИначеЕсли Месяц = 3 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Марта'"));
		ИначеЕсли Месяц = 4 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Апреля'"));
		ИначеЕсли Месяц = 5 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Мая'"));
		ИначеЕсли Месяц = 6 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Июня'"));
		ИначеЕсли Месяц = 7 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Июля'"));
		ИначеЕсли Месяц = 8 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Августа'"));
		ИначеЕсли Месяц = 9 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Сентября'"));
		ИначеЕсли Месяц = 10 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Октября'"));
		ИначеЕсли Месяц = 11 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Ноября'"));
		ИначеЕсли Месяц = 12 Тогда
			ДанныеПечати.Вставить("ДатаМесяц", НСтр("ru = 'Декабря'"));
		КонецЕсли;
		
		СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(ВыборкаДок.Организация, ВыборкаДок.ФизЛицо, ВыборкаДок.ДатаДокумента); 
		ДанныеПечати.Вставить("ДолжностьФизЛица", 	СведенияОФизЛице.Должность);
		ДанныеПечати.Вставить("ФИОФизЛица", 		СведенияОФизЛице.ФамилияИнициалы);
		
		ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", Строка(ОбщееКоличествоСтрок) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(ОбщееКоличествоСтрок) + ")");
		ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", Строка(ОбщееКоличествоФакт) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(ОбщееКоличествоФакт) + ")");		
		ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", Строка(Цел(ОбщееСуммаФакт)) + "(" + БухгалтерскийУчетСервер.СформироватьСуммуПрописью(Цел(ОбщееСуммаФакт),,Истина) + ")");
		ДанныеПечати.Вставить("Тыйын", Окр(ОбщееСуммаФакт - Цел(ОбщееСуммаФакт), 2) * 100);
		ДанныеПечати.Вставить("НачальныйНомерПоПорядку", 1);	
		ДанныеПечати.Вставить("НомерКонца", ОбщееКоличествоСтрок);
		
		ДанныеПечати.Вставить("ФактКоличествоИтог", ОбщееКоличествоФакт);
		ДанныеПечати.Вставить("ФактСуммаИтог", 		ОбщееСуммаФакт);
		ДанныеПечати.Вставить("БухКоличествоИтог", 	ОбщееБухКоличество);
		ДанныеПечати.Вставить("БухСуммаИтог", 		ОбщееБухСумма);
			
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваров.ПФ_MXL_ИнвентаризацияТоваров_ИНВ3");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ВыборкаДок);
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ОбластьИтогиТаблицы  = Макет.ПолучитьОбласть("ИтогиТаблицы");
		ОбластьИтогиСтраницы = Макет.ПолучитьОбласть("ИтогиСтраницы");
		
		МассивПроверки = Новый Массив();
		МассивПроверки.Добавить(ОбластьИтогиТаблицы);
		МассивПроверки.Добавить(ОбластьИтогиСтраницы);
		
		КоличествоНомеров 	= 0;
		ФактКоличество 		= 0;
		ФактСумма 			= 0;
		БухКоличество		= 0;
		БухСумма			= 0;
		
		ВыборкаСтрокТовары 	= ВыборкаДок.Товары.Выбрать();
		ВыборкаСтрокМБП 	= ВыборкаДок.МБП.Выбрать();
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество() + ВыборкаСтрокМБП.Количество();
		
		МассивВыборки = Новый Массив();
		МассивВыборки.Добавить(ВыборкаСтрокТовары);
		МассивВыборки.Добавить(ВыборкаСтрокМБП);
		
		НомерСтроки = 0;
		
		Для Каждого Выборка Из МассивВыборки Цикл
			Пока Выборка.Следующий() Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.Заполнить(Выборка);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.Номер = НомерСтроки;
				
				МассивПроверки.Добавить(ОбластьМакета);
				
				Если ТабличныйДокумент.ПроверитьВывод(МассивПроверки) Тогда
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					КоличествоНомеров 	= КоличествоНомеров + 1;
					ФактКоличество 		= ФактКоличество  	+ Выборка.ФактКоличество;
					ФактСумма 			= ФактСумма  		+ Выборка.ФактСумма;
					БухКоличество		= БухКоличество 	+ Выборка.БухКоличество;
					БухСумма			= БухСумма 			+ Выборка.БухСумма;
					
					Если КоличествоСтрок = НомерСтроки Тогда
						ОбластьИтогиТаблицы.Параметры.ФактКоличествоИтог 	= ФактКоличество;
						ОбластьИтогиТаблицы.Параметры.ФактСуммаИтог 		= ФактСумма;
						ОбластьИтогиТаблицы.Параметры.БухКоличествоИтог 	= БухКоличество;
						ОбластьИтогиТаблицы.Параметры.БухСуммаИтог 			= БухСумма;
						
						ТабличныйДокумент.Вывести(ОбластьИтогиТаблицы);
						
						ОбластьИтогиСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = 
								Строка(КоличествоНомеров) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(КоличествоНомеров) + ")";
						ОбластьИтогиСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
								Строка(ФактКоличество) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(ФактКоличество) + ")";
						ОбластьИтогиСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = 
								Строка(Цел(ФактСумма)) + "(" + БухгалтерскийУчетСервер.СформироватьСуммуПрописью(Цел(ФактСумма),,Истина) + ")";
						ОбластьИтогиСтраницы.Параметры.Тыйын = Окр(ФактСумма - Цел(ФактСумма), 2) * 100;
						
						ТабличныйДокумент.Вывести(ОбластьИтогиСтраницы);	
					КонецЕсли;	
					
				Иначе
					ОбластьИтогиТаблицы.Параметры.ФактКоличествоИтог 	= ФактКоличество;
					ОбластьИтогиТаблицы.Параметры.ФактСуммаИтог 		= ФактСумма;
					ОбластьИтогиТаблицы.Параметры.БухКоличествоИтог 	= БухКоличество;
					ОбластьИтогиТаблицы.Параметры.БухСуммаИтог 			= БухСумма;
					
					ТабличныйДокумент.Вывести(ОбластьИтогиТаблицы);
					
					ОбластьИтогиСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = 
							Строка(КоличествоНомеров) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(КоличествоНомеров) + ")";
					ОбластьИтогиСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
							Строка(ФактКоличество) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(ФактКоличество) + ")";
					ОбластьИтогиСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = 
							Строка(Цел(ФактСумма)) + "(" + БухгалтерскийУчетСервер.СформироватьСуммуПрописью(Цел(ФактСумма),,Истина) + ")";
					ОбластьИтогиСтраницы.Параметры.Тыйын = Окр(ФактСумма - Цел(ФактСумма), 2) * 100;
					
					ТабличныйДокумент.Вывести(ОбластьИтогиСтраницы);
					
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					Если КоличествоСтрок = НомерСтроки Тогда
						ОбластьИтогиТаблицы.Параметры.ФактКоличествоИтог 	= Выборка.ФактКоличество;
						ОбластьИтогиТаблицы.Параметры.ФактСуммаИтог 		= Выборка.ФактСумма;
						ОбластьИтогиТаблицы.Параметры.БухКоличествоИтог 	= Выборка.БухКоличество;
						ОбластьИтогиТаблицы.Параметры.БухСуммаИтог 			= Выборка.БухСумма;
						
						ТабличныйДокумент.Вывести(ОбластьИтогиТаблицы);
						
						ОбластьИтогиСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = 
								"1" + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(1) + ")";
						ОбластьИтогиСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = 
								Строка(Выборка.ФактКоличество) + "(" + БухгалтерскийУчетСервер.КоличествоПрописью(Выборка.ФактКоличество) + ")";
						ОбластьИтогиСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = 
								Строка(Цел(Выборка.ФактСумма)) + "(" + БухгалтерскийУчетСервер.СформироватьСуммуПрописью(Цел(Выборка.ФактСумма),,Истина) + ")";
						ОбластьИтогиСтраницы.Параметры.Тыйын = Окр(Выборка.ФактСумма - Цел(Выборка.ФактСумма), 2) * 100;
						
						ТабличныйДокумент.Вывести(ОбластьИтогиСтраницы);
					Иначе	
						КоличествоНомеров 	= 1;
						ФактКоличество 		= Выборка.ФактКоличество;
						ФактСумма 			= Выборка.ФактСумма;
						БухКоличество		= Выборка.БухКоличество;
						БухСумма			= Выборка.БухСумма;
					КонецЕсли;
				КонецЕсли;
				
				МассивПроверки.Удалить(2);
			КонецЦикла;
		КонецЦикла;	

		Если НЕ ВыборкаДок.НепрерывнаяПечать Тогда		
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
		МассивОбластейПоследнейСтраницы = Новый Массив();
		МассивОбластейПоследнейСтраницы.Добавить("Итоги");
		МассивОбластейПоследнейСтраницы.Добавить("Комиссия");
		МассивОбластейПоследнейСтраницы.Добавить("ПодвалОписи");
		
		
		ВременнаяТаблицаКомиссия = ВыборкаДок.ИнвентаризационнаяКомиссия.Выгрузить();
		
		МассивФизЛиц = ВременнаяТаблицаКомиссия.ВыгрузитьКолонку("ФизЛицо");
		
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
			|	СотрудникиСрезПоследних.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.Сотрудники.СрезПоследних(
			|			&Период,
			|			Организация = &Организация
			|				И ФизЛицо В (&ФизЛицо)) КАК СотрудникиСрезПоследних";
		Запрос.УстановитьПараметр("Период", 	 ВыборкаДок.ДатаДокумента);
		Запрос.УстановитьПараметр("Организация", ВыборкаДок.Организация);
		Запрос.УстановитьПараметр("ФизЛицо", 	 МассивФизЛиц);
		ТаблицаДолжности = Запрос.Выполнить().Выгрузить();
		ТаблицаДолжности.Индексы.Добавить("ФизЛицо");

		ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ЗаголовокРазделаКомиссии", НСтр("ru = 'Председатель комиссии'"));
		
		СтрокаФизЛицо  = ВременнаяТаблицаКомиссия.Найти(Истина, "Председатель");
		Если ТаблицаДолжности.Количество() > 0 И СтрокаФизЛицо <> Неопределено Тогда
			СтрокаДолжность = ТаблицаДолжности.Найти(СтрокаФизЛицо.ФизЛицо, "ФизЛицо");
			Если СтрокаДолжность <> Неопределено Тогда 
				ДанныеПечати.Вставить("Должность", СтрокаДолжность.Должность);
			Иначе
				ДанныеПечати.Вставить("Должность", "");	
			КонецЕсли;	
		Иначе
			ДанныеПечати.Вставить("Должность", "");
		КонецЕсли;	
		Если СтрокаФизЛицо <> Неопределено Тогда
			ДанныеПечати.Вставить("РасшифровкаПодписи", СтрокаФизЛицо.ФизЛицо);
		Иначе 
			ДанныеПечати.Вставить("РасшифровкаПодписи", "");
		КонецЕсли;
		
		Для Каждого ИмяОбласти Из МассивОбластейПоследнейСтраницы Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ИмяОбласти = "Комиссия" Тогда
				ВыборкаСтрокКомиссия = ВыборкаДок.ИнвентаризационнаяКомиссия.Выбрать();
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Пока ВыборкаСтрокКомиссия.Следующий() Цикл 
					Если ВыборкаСтрокКомиссия.Председатель Тогда
						Продолжить;	
					КонецЕсли;
					
					СведенияОФизЛице = БухгалтерскийУчетСервер.ПолучитьСведенияОФизЛице(ВыборкаДок.Организация, ВыборкаСтрокКомиссия.ФизЛицо, ВыборкаДок.ДатаДокумента);
					ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = НСтр("ru = 'Члены комиссии'");
					ОбластьМакета.Параметры.Должность 			= СведенияОФизЛице.Должность;
					ОбластьМакета.Параметры.РасшифровкаПодписи	= СведенияОФизЛице.ФамилияИнициалы;
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				КонецЦикла;
			Иначе
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ВыборкаДок);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДок.Ссылка);		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияТоваров_ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ИнвентаризацияТоваров_ИНВ3", 
		НСтр("ru = 'ИНВ-3 (Инвентаризационная опись товаров)'"), 
		ПечатьИнвентаризацияТоваров_ИНВ3(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.Доверенность.ПФ_MXL_ИнвентаризацияТоваров_ИНВ3");
	КонецЕсли;
	
		// печать Инвентаризационная опись ИНВ-19
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризационнаяОписьИНВ19");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ИнвентаризационнаяОписьИНВ19",
		НСтр("ru = 'Инвентаризационная опись ИНВ-19'"),
		ПечатнаяФормаИнвентаризационнаяОписьИНВ19(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ИнвентаризацияТоваров.ПФ_MXL_ИнвентаризационнаяОписьИНВ19");
	КонецЕсли; 

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияТоваров_ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-3 (Инвентаризационная опись товаров)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
		// Инвентаризационная Инвентаризационная опись ИНВ-18 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризационнаяОписьИНВ19";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись ИНВ-19'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли