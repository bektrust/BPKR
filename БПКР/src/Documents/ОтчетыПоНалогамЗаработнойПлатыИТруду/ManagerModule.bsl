#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает данные о файле xml.
// Параметры:
//	Параметры - Структура - данные для заполнения. 
//		* МассивСсылок - Массив - массив ссылок документов "ОтчетыПоНалогамЗаработнойПлатыИТруду"
//		* УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор.
//
// Возвращаемое значение:
//	Структура - реквизиты юридического лица.
//		* ИмяФайла - Строка - наименование сформированного файла.
//		* АдресВременногоХранилища - Строка - адерс в хранилище.
//
Функция ФормированиеФайлаXML(Параметры) Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ИмяФайла", "");
	СтруктураДанных.Вставить("АдресВременногоХранилища", "");
			
	Дата = Формат(ТекущаяДатаСеанса(), "ДФ=yyyy-MM-dd-hh-mm-ss");	
	ШаблонИмениФайла = СтрШаблон("payrollForm161 %1", Дата);
	ИмяФайла = ШаблонИмениФайла + ".xml";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Ссылка КАК Ссылка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Дата КАК Дата,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Организация КАК Организация,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ВидОтчета КАК ВидОтчета,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоНовыхРабочихМест КАК КоличествоНовыхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоЛиквидированныхРабочихМест КАК КоличествоЛиквидированныхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоСвободныхРабочихМест КАК КоличествоСвободныхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоПринятых КАК КоличествоПринятых,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоВнешнихСовместителей КАК КоличествоВнешнихСовместителей,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоУволенныхПоСобственномуЖеланию КАК КоличествоУволенныхПоСобственномуЖеланию,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоУволенныхПоСтатье КАК КоличествоУволенныхПоСтатье,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПремий КАК СуммаПремий,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПрочихВыплат КАК СуммаПрочихВыплат,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПрямыхНачислений КАК СуммаПрямыхНачислений,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаЗаНеотработанноеВремя КАК СуммаЗаНеотработанноеВремя,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход1 КАК ПрочийРасход1,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход2 КАК ПрочийРасход2,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход3 КАК ПрочийРасход3,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход4 КАК ПрочийРасход4,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход5 КАК ПрочийРасход5,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход6 КАК ПрочийРасход6,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход7 КАК ПрочийРасход7,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход8 КАК ПрочийРасход8,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход9 КАК ПрочийРасход9,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход10 КАК ПрочийРасход10,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.РеквизитыПлательщика КАК РеквизитыПлательщика,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ГНС, ЗНАЧЕНИЕ(Справочник.ГНС.ПустаяСсылка)) КАК РеквизитыПлательщикаГНС,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ГНС.Код, """") КАК РеквизитыПлательщикаГНСКод,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ВидТарифовСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ВидыТарифовСтраховыхВзносов.ПустаяСсылка)) КАК РеквизитыПлательщикаВидТарифа,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.РегНомерСоцФонда, """") КАК РеквизитыПлательщикаРегНомерСоцФонда,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.АдресГород, """") КАК РеквизитыПлательщикаАдресГород,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.АдресУлица, """") КАК РеквизитыПлательщикаАдресУлица,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.Индекс, """") КАК РеквизитыПлательщикаИндекс,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.Телефон, """") КАК РеквизитыПлательщикаТелефон,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ЭлектроннаяПочта, """") КАК РеквизитыПлательщикаЭлектроннаяПочта,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.СОАТО, """") КАК РеквизитыПлательщикаСОАТО,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодГКЭД, """") КАК РеквизитыПлательщикаКодГКЭД,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ИНН, """") КАК РеквизитыПлательщикаИНН,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодПравовойФормы, """") КАК РеквизитыПлательщикаКодПравовойФормы,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодПоОКПО, """") КАК РеквизитыПлательщикаКодПоОКПО
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду КАК ОтчетыПоНалогамЗаработнойПлатыИТруду
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РеквизитыПлательщикаДляОтчетовПоНалогам КАК РеквизитыПлательщикаДляОтчетовПоНалогам
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТруду.РеквизитыПлательщика = РеквизитыПлательщикаДляОтчетовПоНалогам.Ссылка
		|ГДЕ
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Ссылка В(&Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Ссылка КАК Ссылка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.НомерСтроки КАК НомерСтроки,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо КАК ФизЛицо,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус.ВидЗанятости В ИЕРАРХИИ(&Соместители)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВидЗанятости,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Совместитель КАК Совместитель,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ДатаНачала КАК ДатаНачала,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ДатаОкончания КАК ДатаОкончания,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.НормаДней КАК НормаДней,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОтработаноДней КАК ОтработаноДней,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОтработаноЧасов КАК ОтработаноЧасов,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаНачислено КАК СуммаНачислено,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДСФ КАК ОДСФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФР КАК СуммаПФР,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаГНПФР КАК СуммаГНПФР,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФФ КАК СуммаПФФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаМСФ КАК СуммаМСФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаФОТФ КАК СуммаФОТФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФФКорректировка КАК СуммаПФФКорректировка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаМСФКорректировка КАК СуммаМСФКорректировка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаФОТФКорректировка КАК СуммаФОТФКорректировка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДПН КАК ОДПН,
		|	ВЫБОР
		|		КОГДА ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.Прочие)
		|			ТОГДА 0
		|		ИНАЧЕ ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДПН
		|	КОНЕЦ КАК ОДПНБезКатегории109,
		|	ВЫБОР
		|		КОГДА ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.ИностранныеГраждане)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Резидент,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФРДляРасчетаПН КАК СуммаПФРДляРасчетаПН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаГНПФРДляРасчетаПН КАК СуммаГНПФРДляРасчетаПН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Вычеты КАК Вычеты,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПНсСотрудника КАК СуммаПНсСотрудника,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПНсМРД КАК СуммаПНсМРД,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПН КАК СуммаПН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаВыплачено КАК СуммаВыплачено,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОстатокПН КАК ОстатокПН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ДопВычет КАК ДопВычет,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ПриведеннаяСЗП КАК ПриведеннаяСЗП,
		|	ЕСТЬNULL(ГражданствоФизическихЛицСрезПоследних.Страна.КодАльфа3, """") КАК ГражданствоКодАльфа3,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ПризнакРезидентства КАК ПризнакРезидентства,
		|	ЕСТЬNULL(СотрудникиСрезПоследних.Подразделение, СотрудникиПоТрудовымСоглашениямСрезПоследних.Подразделение) КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СотрудникиСрезПоследних.Период, СотрудникиПоТрудовымСоглашениямСрезПоследних.Период) МЕЖДУ &НачалоПериода И &КонецПериода
		|			И (ЕСТЬNULL(СотрудникиСрезПоследних.ВидСобытия, СотрудникиПоТрудовымСоглашениямСрезПоследних.ВидСобытия) = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием)
		|				ИЛИ ЕСТЬNULL(СотрудникиСрезПоследних.ВидСобытия, СотрудникиПоТрудовымСоглашениямСрезПоследних.ВидСобытия) = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение))
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПрибылУволен,
		|	ЕСТЬNULL(СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаПФР, 0) КАК СтавкаПФР,
		|	ЕСТЬNULL(СтавкиНалоговЗаработнойПлатыСрезПоследних.СтавкаГНПФР, 0) КАК СтавкаГНПФР
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду.Налоги КАК ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо = ГражданствоФизическихЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники.СрезПоследних(&Период, Организация = &Организация) КАК СотрудникиСрезПоследних
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо = СотрудникиСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПоследних(&Период, Организация = &Организация) КАК СотрудникиПоТрудовымСоглашениямСрезПоследних
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо = СотрудникиПоТрудовымСоглашениямСрезПоследних.ФизЛицо		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСотрудников.СрезПоследних(&Период, Организация = &Организация) КАК СтатусыСотрудниковСрезПоследних
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо = СтатусыСотрудниковСрезПоследних.ФизЛицо		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалоговЗаработнойПлаты.СрезПоследних(&Период) КАК СтавкиНалоговЗаработнойПлатыСрезПоследних
		|			ПО СтатусыСотрудниковСрезПоследних.Статус = СтавкиНалоговЗаработнойПлатыСрезПоследних.Статус		
		|ГДЕ
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Ссылка В(&Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Дата		= Параметры.Ссылка.Дата;
	Организация	= Параметры.Ссылка.Организация;
	Контрагент	= Параметры.Ссылка.Контрагент;
	
	Запрос.УстановитьПараметр("Ссылка", 	 	Параметры.Ссылка);
	Запрос.УстановитьПараметр("Период", 	 	Дата);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Контрагент",  	Контрагент);
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",	КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Соместители",	Справочники.ВидыЗанятости.Совместители);
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаНалоги = МассивРезультатовЗапроса[1].Выгрузить();
	
	Отказ = Ложь;
	ТекущаяДата = ТекущаяДатаСеанса();
	
	// Учетная политика по персоналу.
	ДанныеУчетнойПолитикиПоПерсоналу = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(ТекущаяДата, Параметры.Ссылка.Организация);
		
	ВыборкаДетальныеЗаписи = МассивРезультатовЗапроса[0].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
		
		// Реквизиты организации.
		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(ВыборкаДетальныеЗаписи.Организация, ТекущаяДата);

		Если ДанныеУчетнойПолитикиПоПерсоналу.ПределыПоПодразделениям 
			И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.РеквизитыПлательщика) Тогда
			АдресГород 					= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаАдресГород;
			АдресУлица 					= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаАдресУлица;
			Индекс 						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаИндекс;
			ГНС							= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаГНС;
			ГНСКод						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаГНСКод;
			Телефон						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаТелефон;
			ЭлектроннаяПочта 			= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаЭлектроннаяПочта;
			РегНомерСоцФонда			= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаРегНомерСоцФонда;
			ВидТарифовСтраховыхВзносов	= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаВидТарифа;
			СОАТО						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаСОАТО;
			КодГКЭД						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаКодГКЭД;
			ИНН							= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаИНН;
			КодПравовойФормы			= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаКодПравовойФормы;
			ОКПО						= ВыборкаДетальныеЗаписи.РеквизитыПлательщикаКодПоОКПО;
		КонецЕсли;
		
		АдресГород 					= ?(ЗначениеЗаполнено(АдресГород), АдресГород, СведенияОбОрганизации.АдрЮР);
		АдресУлица 					= ?(ЗначениеЗаполнено(АдресУлица), АдресУлица, СведенияОбОрганизации.Улица);
		Индекс 						= ?(ЗначениеЗаполнено(Индекс), Индекс, СведенияОбОрганизации.Индекс);
		ГНС							= ?(ЗначениеЗаполнено(ГНС), ГНС, СведенияОбОрганизации.ГНС);
		ГНСКод						= ?(ЗначениеЗаполнено(ГНСКод), ГНСКод, СведенияОбОрганизации.ГНСКод);
		Телефон						= ?(ЗначениеЗаполнено(Телефон), Телефон, СведенияОбОрганизации.Тел);
		ЭлектроннаяПочта 			= ?(ЗначениеЗаполнено(ЭлектроннаяПочта), ЭлектроннаяПочта, СведенияОбОрганизации.Email);
		РегНомерСоцФонда			= ?(ЗначениеЗаполнено(РегНомерСоцФонда), РегНомерСоцФонда, СведенияОбОрганизации.РегНомерСоцФонда);
		ВидТарифовСтраховыхВзносов	= ?(ЗначениеЗаполнено(ВидТарифовСтраховыхВзносов), ВидТарифовСтраховыхВзносов, ДанныеУчетнойПолитикиПоПерсоналу.ВидТарифовСтраховыхВзносов);
		СОАТО						= ?(ЗначениеЗаполнено(СОАТО), СОАТО, СведенияОбОрганизации.СОАТО);
		КодГКЭД						= ?(ЗначениеЗаполнено(КодГКЭД), КодГКЭД, СведенияОбОрганизации.КодГКЭД);
		ИНН							= ?(ЗначениеЗаполнено(ИНН), ИНН, СведенияОбОрганизации.ИНН);		
		КодПравовойФормы			= ?(ЗначениеЗаполнено(КодПравовойФормы), КодПравовойФормы, СведенияОбОрганизации.КодПравовойФормы);		
		ОКПО						= ?(ЗначениеЗаполнено(ОКПО), ОКПО, СведенияОбОрганизации.ОКПО);		
		
		
		// Параметры опеределяемые пределами по подразделениям.
		МРД = 0;
		СЗП = 0;
		
		Если ДанныеУчетнойПолитикиПоПерсоналу.ПределыПоПодразделениям Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ПределыПоПодразделениямСрезПоследних.МинимальныйРасчетныйДоход КАК МинимальныйРасчетныйДоход,
				|	ПределыПоПодразделениямСрезПоследних.СреднемесячнаяЗПСФ КАК СреднемесячнаяЗПСФ
				|ИЗ
				|	РегистрСведений.ПределыПоПодразделениям.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|				И УГНС = &Контрагент
				|				И Подразделение В (&СписокПодразделений)) КАК ПределыПоПодразделениямСрезПоследних
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПределыПоПодразделениямСрезПоследних.Период УБЫВ";
			Запрос.УстановитьПараметр("Период", Дата);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
			Запрос.УстановитьПараметр("СписокПодразделений", ТаблицаНалоги.ВыгрузитьКолонку("Подразделение"));
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				МРД = Выборка.МинимальныйРасчетныйДоход;
				СЗП = Выборка.СреднемесячнаяЗПСФ;
			КонецЕсли;
		Иначе
			МРД = ДанныеУчетнойПолитикиПоПерсоналу.МинимальныйРасчетныйДоход;
			СЗП = ДанныеУчетнойПолитикиПоПерсоналу.СреднемесячнаяЗПСФ;
		КонецЕсли;
		
		// Поле ""%1"" не заполнено
		Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен ИНН.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СведенияОбОрганизации.ФормаСобственности) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации не заполнена форма собственности.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СведенияОбОрганизации.КодПравовойФормы) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации не заполнен ОПФ.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СведенияОбОрганизации.ОКПО) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации не заполнен ОКПО.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ГНС) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен ГНС.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Индекс) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен Индекс.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СОАТО) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен СОАТО.'"),,,, Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(КодГКЭД) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен Код ГКЭД.'"),,,, Отказ);
		КонецЕсли;		
		Если НЕ ЗначениеЗаполнено(РегНомерСоцФонда) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'У организации(или в ""Параметры плательщика"") не заполнен Рег.номер СФ.'"),,,, Отказ);
		КонецЕсли;					
		Если НЕ ЗначениеЗаполнено(ВидТарифовСтраховыхВзносов) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'В учетной политики по персоналу(или в ""Параметры плательщика"") не заполнен Вид тарифов страховых взносов.'"),,,, Отказ);
		КонецЕсли;		
		
		Для Каждого СтрокаТаблицыНалоги Из ТаблицаНалоги Цикл 
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицыНалоги.ГражданствоКодАльфа3) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнено гражданство в строке №%1.'"), СтрокаТаблицыНалоги.НомерСтроки);
				ПолеСообщения = СтрШаблон("Объект.Налоги[%1].ФизЛицо", СтрокаТаблицыНалоги.НомерСтроки-1);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, ПолеСообщения,, Отказ);		
			КонецЕсли;
		КонецЦикла;		
		
		Если Отказ Тогда 
			Продолжить;
		КонецЕсли;	
		
		// FORM
		ОбъектXDTO = СоздатьОбъектXDTO("FORM");
		ОбъектXDTO.DATEREPORT = Формат(ТекущаяДата, "ДЛФ=D");
		ОбъектXDTO.NOMDOC = 1;
		ОбъектXDTO.IDFORM = "161";
		ОбъектXDTO.VERSFORM = "1.01";
		ОбъектXDTO.CHECKSUM = "КонтрольнаяСумма";
		
		// PART1
		ОбъектXDTO_PART1 = СоздатьОбъектXDTO("PART1");
		
		// Тип отчета.
		Если ВыборкаДетальныеЗаписи.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Первоначальный Тогда 
			ВидОтчета = "0";
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Уточненный Тогда 
			ВидОтчета = "1";
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Ликвидационный Тогда 
			ВидОтчета = "2";
		КонецЕсли;
		ОбъектXDTO_PART1.FTYPE = ВидОтчета;
		
		// Дата начала отчетного периода.
		ОбъектXDTO_PART1.STARTDATE = Формат(НачалоМесяца(ВыборкаДетальныеЗаписи.Дата), "ДЛФ=D");
		
		// Дата окончания отчетного периода.
		ОбъектXDTO_PART1.ENDDATE = Формат(КонецМесяца(ВыборкаДетальныеЗаписи.Дата), "ДЛФ=D");
		
		ОбъектXDTO.PART1 = ОбъектXDTO_PART1;
		// Конец PART1
		
		// PART2
		ОбъектXDTO_PART2 = СоздатьОбъектXDTO("PART2");
		
		// Наименование налогоплательщика.
		ОбъектXDTO_PART2.FULLNAME = СведенияОбОрганизации.НаименованиеПолное;
		
		// Почтовый индекс.
		ОбъектXDTO_PART2.ZIP = Индекс;
		
		// Улица/мкр.
		ОбъектXDTO_PART2.ADDRESSSTREET = АдресУлица;
		
		// Номер телефона.
		ОбъектXDTO_PART2.PHONE = Телефон;
		
		// Область, район, город, село.
		ОбъектXDTO_PART2.ADDRESSOBL = АдресГород;
		
		// Электронная почта.
		ОбъектXDTO_PART2.MAIL = ЭлектроннаяПочта;
		
		// ИНН.
		ОбъектXDTO_PART2.TIN = ИНН;
		
		// Код ОКПО.
		ОбъектXDTO_PART2.GOSKOMSTATCODE = ОКПО;
		
		// Код ГНС.
		ОбъектXDTO_PART2.RAYONCODE = ГНСКод;
		
		// Размер МРД.
		ОбъектXDTO_PART2.STI161X215 = МРД;
		// Сотрудники списочного состава.
		ОбъектXDTO_PART2.STI161X301 = ТаблицаНалоги.Количество();
		// Количество отработанных человеко-часов за месяц.
		ОбъектXDTO_PART2.STI161X302 = ТаблицаНалоги.Итог("ОтработаноЧасов");
		// Внешние совместители (человек).
		ОбъектXDTO_PART2.STI161X303 = ВыборкаДетальныеЗаписи.КоличествоВнешнихСовместителей;
		
		// Число свободных мест (единиц).
		ОбъектXDTO_PART2.STI161X304 = ВыборкаДетальныеЗаписи.КоличествоСвободныхРабочихМест;
		// Число вновь созданных рабочих мест.
		ОбъектXDTO_PART2.STI161X305 = ВыборкаДетальныеЗаписи.КоличествоНовыхРабочихМест;
		// Число ликвидированных рабочих мест (единиц).
		ОбъектXDTO_PART2.STI161X306 = ВыборкаДетальныеЗаписи.КоличествоЛиквидированныхРабочихМест;
		
		// Принято работников (человек).
		ОбъектXDTO_PART2.STI161X307 = ВыборкаДетальныеЗаписи.КоличествоПринятых;
		// Выбыло работников в связи с высвобождением (человек).
		ОбъектXDTO_PART2.STI161X308 = 0;
		// Выбыло работников по собственному желанию (человек).
		ОбъектXDTO_PART2.STI161X309 = ВыборкаДетальныеЗаписи.КоличествоУволенныхПоСобственномуЖеланию;
		// Выбыло работников по другим причинам (человек).
		ОбъектXDTO_PART2.STI161X310 = ВыборкаДетальныеЗаписи.КоличествоУволенныхПоСтатье;
		
		// Прямая заработная плата (сом).
		ОбъектXDTO_PART2.STI161X311 = ВыборкаДетальныеЗаписи.СуммаПрямыхНачислений;
		// Оплата за неотработанное время (сом).
		ОбъектXDTO_PART2.STI161X312 = ВыборкаДетальныеЗаписи.СуммаЗаНеотработанноеВремя;
		// Премии и поощрения (сом).
		ОбъектXDTO_PART2.STI161X313 = ВыборкаДетальныеЗаписи.СуммаПремий;
		// Выплаты на питание, жилье, и т.п., включаемы в зарплату (сом).
		ОбъектXDTO_PART2.STI161X314 = ВыборкаДетальныеЗаписи.СуммаПрочихВыплат;
		
		// Расходы по обеспечению работников жильем.
		ОбъектXDTO_PART2.STI161X401 = ВыборкаДетальныеЗаписи.ПрочийРасход1;
		// Расходы на социальное обеспечение работников.
		ОбъектXDTO_PART2.STI161X402 = ВыборкаДетальныеЗаписи.ПрочийРасход2;
		// Начисления на фонд заработной платы по всем видам социального страхования (социального, пенсионного, медицинского, занятости и др.).
		ОбъектXDTO_PART2.STI161X403 = ВыборкаДетальныеЗаписи.ПрочийРасход3;
		// Социальные пособия за счет средств предприятия.
		ОбъектXDTO_PART2.STI161X404 = ВыборкаДетальныеЗаписи.ПрочийРасход4;
		// Пособия в связи с потерей трудоспособности из-за производственных травм, компенсация работникам морального вреда.
		ОбъектXDTO_PART2.STI161X405 = ВыборкаДетальныеЗаписи.ПрочийРасход5;
		// Расходы на профессиональное обучение.
		ОбъектXDTO_PART2.STI161X406 = ВыборкаДетальныеЗаписи.ПрочийРасход6;
		// Расходы на культурно-бытовые обслуживание.
		ОбъектXDTO_PART2.STI161X407 = ВыборкаДетальныеЗаписи.ПрочийРасход7;
		// Прочие расходы.
		ОбъектXDTO_PART2.STI161X408 = ВыборкаДетальныеЗаписи.ПрочийРасход8;
		// Из них суточные.
		ОбъектXDTO_PART2.STI161X409 = ВыборкаДетальныеЗаписи.ПрочийРасход9;
		// Кроме того, суммы, начисленные по акциям и вкладам (дивиденды, проценты).
		ОбъектXDTO_PART2.STI161X410 = ВыборкаДетальныеЗаписи.ПрочийРасход10;
		
		// Сумма СМЗ.
		ОбъектXDTO_PART2.STI161X120 = СЗП;
		
		// Регистрационный номер СФ.
		ОбъектXDTO_PART2.STI161X117 = РегНомерСоцФонда;
		// Коэффициент высокогорья/отдаленности (всегда 1).
		ОбъектXDTO_PART2.STI161X118 = 1;
		
		// Код вида тарифа страховых взносов.
		ОбъектXDTO_PART2.STI161X119 = ПолучитьКодВидаТарифовСтраховыхВзносов(ВидТарифовСтраховыхВзносов);		
		
		// СОАТЕ.
		ОбъектXDTO_PART2.STI161X130 = СОАТО;
		// Код ГКЭД.
		ОбъектXDTO_PART2.STI161X131 = КодГКЭД;
		// ОПФ.
		ОбъектXDTO_PART2.STI161X132 = Строка(КодПравовойФормы);
		// Форма собственности.
		ОбъектXDTO_PART2.STI161X133 = ПолучитьКодФормыСобственности(СведенияОбОрганизации.ФормаСобственности);
		// Количество рабочих дней.
		//ОбъектXDTO_PART2.STI161X134 = ТаблицаНалоги.Итог("ОтработаноДней");- нуден единый календарь для организации.
		ОбъектXDTO_PART2.STI161X134 = 22;
		
		// Количество сотрудников.
		ОбъектXDTO_PART2.STI161X203 = ТаблицаНалоги.Количество();
		// Общая сумма начисления доходов.
		СуммаНачислено = ТаблицаНалоги.Итог("СуммаНачислено");
		ОбъектXDTO_PART2.STI161X204 = СуммаНачислено;
		// Доходы, не облагаемые подоходным налогом.
		ОбъектXDTO_PART2.STI161X205 = СуммаНачислено - ТаблицаНалоги.Итог("ОДПНБезКатегории109");
		// Общая сумма стандартных вычетов (ПФР. ГНПФР, и персониалые вычеты).
		СуммаСтандартныхВычетов = ТаблицаНалоги.Итог("СуммаПФРДляРасчетаПН") + ТаблицаНалоги.Итог("СуммаГНПФРДляРасчетаПН") + ТаблицаНалоги.Итог("Вычеты") * 100;
		ОбъектXDTO_PART2.STI161X206 = СуммаСтандартныхВычетов;
		// Общая сумма доходов, подлежащих налогообложению.
		ОбъектXDTO_PART2.STI161X207 = ТаблицаНалоги.Итог("ОДПН") - СуммаСтандартныхВычетов;
		// Сумма ПН с ОДПН.
		ОбъектXDTO_PART2.STI161X208 = ТаблицаНалоги.Итог("СуммаПНсСотрудника");
		// Сумма ПН С Минимального расчетного дохода.
		ОбъектXDTO_PART2.STI161X209 = ТаблицаНалоги.Итог("СуммаПНсМРД");
		// Сумма ПН.
		ОбъектXDTO_PART2.STI161X210 = ТаблицаНалоги.Итог("СуммаПН");
		// Сумма выплаченных доходов.
		ОбъектXDTO_PART2.STI161X211 = ТаблицаНалоги.Итог("СуммаВыплачено");
		//ОбъектXDTO_PART2.STI161X211 = СуммаНачислено - ТаблицаНалоги.Итог("СуммаПФР") -ТаблицаНалоги.Итог("СуммаГНПФР") - ТаблицаНалоги.Итог("СуммаПН");
		// Сумма подоходного налога, подлежащая к уплате.
		ОбъектXDTO_PART2.STI161X212 = ТаблицаНалоги.Итог("ОстатокПН");
		
		// Сумма начисленных страховых взносов.
		ОбъектXDTO_PART2.STI161X213 = ТаблицаНалоги.Итог("СуммаПФР") + ТаблицаНалоги.Итог("СуммаПФФ") + ТаблицаНалоги.Итог("СуммаМСФ") + ТаблицаНалоги.Итог("СуммаФОТФ");
		
		// Сумма начисленных взносов по НПФ.
		ОбъектXDTO_PART2.STI161X214 = ТаблицаНалоги.Итог("СуммаГНПФР");
		
		Для Каждого СтрокаТаблицыНалоги Из ТаблицаНалоги Цикл 
			ОбъектXDTO_STI161DECLARATIONDETAIL = СоздатьОбъектXDTO("STI161DECLARATIONDETAIL", "PART2");
			
			// По совместительству.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X270 = СтрокаТаблицыНалоги.ВидЗанятости; 
			// Количество рабочих дней.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X271 = СтрокаТаблицыНалоги.НормаДней; 
			// Количество иждивенцев.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X272 = СтрокаТаблицыНалоги.ДопВычет; 
			// Сумма страховых взносов, удержанных с работодателя.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X273 = СтрокаТаблицыНалоги.СуммаПФФ + СтрокаТаблицыНалоги.СуммаМСФ + СтрокаТаблицыНалоги.СуммаФОТФ
				+ СтрокаТаблицыНалоги.СуммаПФФКорректировка + СтрокаТаблицыНалоги.СуммаМСФКорректировка + СтрокаТаблицыНалоги.СуммаФОТФКорректировка; 
			// Сумма вычета по иждивенцам.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X274 = СтрокаТаблицыНалоги.ДопВычет * 100; 
			// Персональный вычет.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X275 = СтрокаТаблицыНалоги.Вычеты * 100 - СтрокаТаблицыНалоги.ДопВычет * 100; 
			// На гос. Соц. удержание и страхование.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X276 = Окр((СтрокаТаблицыНалоги.ОДСФ 
				- (СтрокаТаблицыНалоги.СуммаНачислено - СтрокаТаблицыНалоги.ОДПНБезКатегории109)) 
				* (СтрокаТаблицыНалоги.СтавкаПФР / 100 + СтрокаТаблицыНалоги.СтавкаГНПФР / 100), 2); 			
			// Удержанные в не государственный пен. фонд.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X277 = 0; 
			// Вновь прибыл/уволен 0-нет, 1-да.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X278 = СтрокаТаблицыНалоги.ПрибылУволен;
			// Доп. ФОТ.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X279 = ?(СтрокаТаблицыНалоги.ПриведеннаяСЗП > СтрокаТаблицыНалоги.ОДСФ,
				СтрокаТаблицыНалоги.ПриведеннаяСЗП - СтрокаТаблицыНалоги.ОДСФ, 0);
			
			//// Сумма стандартных вычетов.
			//ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X280 = СтрокаТаблицыНалоги.СуммаПФР + СтрокаТаблицыНалоги.СуммаГНПФР + СтрокаТаблицыНалоги.Вычеты * 100 - СтрокаТаблицыНалоги.ДопВычет * 100; 			
			
			// Порядковый номер.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X250 = СтрокаТаблицыНалоги.НомерСтроки; 
			// ПИН сотрудника.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X251 = СтрокаТаблицыНалоги.ФизЛицо.ИНН; 
			// ФИО сотрудника.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X252 = СтрокаТаблицыНалоги.ФизЛицо.ФИО; 
			// Категория сотрудника.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X253 = ?(ЗначениеЗаполнено(СтрокаТаблицыНалоги.Статус), СтрокаТаблицыНалоги.Статус.Категория.Код, ""); 
			// Гражданство.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X254 = СтрокаТаблицыНалоги.ГражданствоКодАльфа3; 
			// Резидент.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X255 = СтрокаТаблицыНалоги.Резидент; 
			// Дата начала.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X256 = Формат(?(ЗначениеЗаполнено(СтрокаТаблицыНалоги.ДатаНачала), СтрокаТаблицыНалоги.ДатаНачала, НачалоМесяца(ВыборкаДетальныеЗаписи.Дата)), "ДЛФ=D");
			//Формат(СтрокаТаблицыНалоги.ДатаНачала, "ДЛФ=D"); 
			// Дата окончания.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X257 = Формат(?(ЗначениеЗаполнено(СтрокаТаблицыНалоги.ДатаОкончания), СтрокаТаблицыНалоги.ДатаОкончания, КонецМесяца(ВыборкаДетальныеЗаписи.Дата)), "ДЛФ=D");
			//Формат(КонецДня(СтрокаТаблицыНалоги.ДатаОкончания), "ДЛФ=D"); 
			// Дней фактически.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X258 = СтрокаТаблицыНалоги.ОтработаноДней; 
			// Код дохода.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X259 = "001"; 
			// Сумма начислено.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X260 = СтрокаТаблицыНалоги.СуммаНачислено;
			// Доход, на который начислены страховые взносы.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X261 = СтрокаТаблицыНалоги.ОДСФ; 
			// Доход, не облагаемый подоходным налогом.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X262 = СтрокаТаблицыНалоги.СуммаНачислено - СтрокаТаблицыНалоги.ОДПНБезКатегории109; 
			// Сумма стандартных вычетов.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X263 = СтрокаТаблицыНалоги.СуммаПФРДляРасчетаПН + СтрокаТаблицыНалоги.СуммаГНПФРДляРасчетаПН + СтрокаТаблицыНалоги.Вычеты * 100; 			
			// Сумма доходов подлежащих обложению подоходным налогом.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X264 = СтрокаТаблицыНалоги.ОДПН - СтрокаТаблицыНалоги.СуммаПФРДляРасчетаПН - СтрокаТаблицыНалоги.СуммаГНПФРДляРасчетаПН - СтрокаТаблицыНалоги.Вычеты * 100; 
			// Сумма ПН с ОДПН.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X265 = СтрокаТаблицыНалоги.СуммаПНсСотрудника; 
			// Сумма ПН с минимального расчетного показателя.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X266 = СтрокаТаблицыНалоги.СуммаПНсМРД; 
			// Сумма ПН.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X267 = СтрокаТаблицыНалоги.СуммаПН; 
			// Сумма начисленных страховых взносов.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X268 = СтрокаТаблицыНалоги.СуммаПФР + СтрокаТаблицыНалоги.СуммаПФФ + СтрокаТаблицыНалоги.СуммаМСФ + СтрокаТаблицыНалоги.СуммаФОТФ
				+ СтрокаТаблицыНалоги.СуммаПФФКорректировка + СтрокаТаблицыНалоги.СуммаМСФКорректировка + СтрокаТаблицыНалоги.СуммаФОТФКорректировка; 
			// Сумма начисленных взносов по НПФ.
			ОбъектXDTO_STI161DECLARATIONDETAIL.STI161_1X269 = СтрокаТаблицыНалоги.СуммаГНПФР; 
			
			ОбъектXDTO_PART2.STI161DECLARATIONDETAIL.Добавить(ОбъектXDTO_STI161DECLARATIONDETAIL);
		КонецЦикла;	
		
		ОбъектXDTO.PART2 = ОбъектXDTO_PART2;
		// Конец PART2 
		
	КонецЦикла;	
	
	Если Отказ Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	// Создание файла.
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Ложь);	
	ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла, ПараметрыЗаписиXML);
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO, "FORM");
	ЗаписьXML.Закрыть();
	
	// Удаление описания пространства имен из xml файла.
	ТекстДокумент = Новый ТекстовыйДокумент;
	ТекстДокумент.Прочитать(ИмяВременногоФайла);
	ТекстФайла = ТекстДокумент.ПолучитьТекст();
	ТекстФайла = СтрЗаменить(
		ТекстФайла,
		" xmlns=""http://sti.gov.kg/reports/payroll/161"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""",
		"");
	ТекстДокумент.УстановитьТекст(ТекстФайла);	
	ТекстДокумент.Записать(ИмяВременногоФайла);	
	
	Двоичное = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Двоичное, Параметры.УникальныйИдентификатор);
	
	// Удаление временного файла
	ФайловаяСистема.УдалитьВременныйФайл(ИмяВременногоФайла);
	
	СтруктураДанных.ИмяФайла = ИмяФайла;
	СтруктураДанных.АдресВременногоХранилища = АдресВременногоХранилища;
	
	Возврат СтруктураДанных;
	
КонецФункции // ФормированиеФайла()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьОбъектXDTO(ИмяСвойства, ИмяКорневогоСвойства = "FORM")
	// Пакет.
	Пакет_payroll = ФабрикаXDTO.Пакеты.Получить("http://sti.gov.kg/reports/payroll/161");
	
	// Свойство.
	КорневоеСвойствоXDTO = Пакет_payroll.КорневыеСвойства.Получить("FORM");
	
	// Получение вложенных свойств.
	Если ИмяСвойства = ИмяКорневогоСвойства Тогда 
		СвойствоXDTO = КорневоеСвойствоXDTO;
	ИначеЕсли ИмяКорневогоСвойства = "FORM" Тогда 
		СвойствоXDTO = КорневоеСвойствоXDTO.Тип.Свойства.Получить(ИмяСвойства);
	Иначе 	
		КорневоеСвойствоXDTO = КорневоеСвойствоXDTO.Тип.Свойства.Получить(ИмяКорневогоСвойства);
		СвойствоXDTO = КорневоеСвойствоXDTO.Тип.Свойства.Получить(ИмяСвойства);
	КонецЕсли;	
	
	// Объект.
	Возврат ФабрикаXDTO.Создать(СвойствоXDTO.Тип);
КонецФункции // СоздатьОбъектXDTO()

Функция ПолучитьКодВидаТарифовСтраховыхВзносов(ВидТарифовСтраховыхВзносов)
	КодВидаТарифовСтраховыхВзносов = "";
	
	Если ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.Основной Тогда 
		КодВидаТарифовСтраховыхВзносов = "ОСН"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ГосУчреждения Тогда 
		КодВидаТарифовСтраховыхВзносов = "БЮД"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.МеждународныеДоговоры Тогда 
		КодВидаТарифовСтраховыхВзносов = "ОРГМЕЖД"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.МеждународныеСоглашения Тогда 
		КодВидаТарифовСтраховыхВзносов = "МЕЖП"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.НекоммерческиеОрганизации Тогда 
		КодВидаТарифовСтраховыхВзносов = "ОБЩ"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ОбществоСлепыхИГлухих Тогда 
		КодВидаТарифовСтраховыхВзносов = "КОСГ"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ОрганизацииТекстильнойОтрасли49 Тогда 
		КодВидаТарифовСтраховыхВзносов = "ЮШТП"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ОрганизацииТекстильнойОтрасли50 Тогда 
		КодВидаТарифовСтраховыхВзносов = "ЮЛШП"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ПВТ Тогда 
		КодВидаТарифовСтраховыхВзносов = "ПВТ"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.СельскохозяйственныеКооперативы Тогда 
		КодВидаТарифовСтраховыхВзносов = "СК"	
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ОрганизацииДипломатическихСлужб Тогда 
		КодВидаТарифовСтраховыхВзносов = "ОРГДС"		
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.НаемныеРаботники Тогда 
		КодВидаТарифовСтраховыхВзносов = "ФЗШП"
	ИначеЕсли ВидТарифовСтраховыхВзносов = Перечисления.ВидыТарифовСтраховыхВзносов.ИндивидуальныйПредприниматель Тогда 
		КодВидаТарифовСтраховыхВзносов = "ФЛСВ"	
	КонецЕсли;	
	
	Возврат КодВидаТарифовСтраховыхВзносов;
КонецФункции // ПолучитьВидТарифовСтраховыхВзносов()

Функция ПолучитьКодФормыСобственности(ФормаСобственности)
	КодФормыСобственности = "";
	
	Если ФормаСобственности = Перечисления.ФормыСобственности.ГосударственнаяСобственность Тогда 
		КодФормыСобственности = 11;
	ИначеЕсли ФормаСобственности = Перечисления.ФормыСобственности.МуниципальнаяСобственность Тогда 
		КодФормыСобственности = 12;
	ИначеЕсли ФормаСобственности = Перечисления.ФормыСобственности.ЧастнаяСобственность Тогда 
		КодФормыСобственности = 20;
	ИначеЕсли ФормаСобственности = Перечисления.ФормыСобственности.ИныеФормыСобственности Тогда 
		КодФормыСобственности = 30;
	КонецЕсли;	
	
	Возврат КодФормыСобственности;
КонецФункции // ПолучитьКодФормыСобственности()

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой НДС
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчета(МассивОбъектов, ОбъектыПечати)	
	
	Запрос = Новый Запрос;		
	Запрос.Текст =	
		"ВЫБРАТЬ
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Ссылка КАК Ссылка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Дата КАК Дата,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Организация КАК Организация,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Контрагент КАК Контрагент,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ВидОтчета КАК ВидОтчета,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоНовыхРабочихМест КАК КоличествоНовыхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоЛиквидированныхРабочихМест КАК КоличествоЛиквидированныхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоСвободныхРабочихМест КАК КоличествоСвободныхРабочихМест,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоПринятых КАК КоличествоПринятых,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоВнешнихСовместителей КАК КоличествоВнешнихСовместителей,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоУволенныхПоСобственномуЖеланию КАК КоличествоУволенныхПоСобственномуЖеланию,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.КоличествоУволенныхПоСтатье КАК КоличествоУволенныхПоСтатье,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПремий КАК СуммаПремий,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПрочихВыплат КАК СуммаПрочихВыплат,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаПрямыхНачислений КАК СуммаПрямыхНачислений,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.СуммаЗаНеотработанноеВремя КАК СуммаЗаНеотработанноеВремя,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход1 КАК ПрочийРасход1,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход2 КАК ПрочийРасход2,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход3 КАК ПрочийРасход3,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход4 КАК ПрочийРасход4,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход5 КАК ПрочийРасход5,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход6 КАК ПрочийРасход6,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход7 КАК ПрочийРасход7,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход8 КАК ПрочийРасход8,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход9 КАК ПрочийРасход9,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.ПрочийРасход10 КАК ПрочийРасход10,
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.РеквизитыПлательщика КАК РеквизитыПлательщика,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ГНС, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаГНС,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ГНС.Код, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаГНСКод,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ВидТарифовСтраховыхВзносов, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаВидТарифа,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.РегНомерСоцФонда, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаРегНомерСоцФонда,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.АдресГород, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаАдресГород,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.АдресУлица, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаАдресУлица,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.Индекс, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаИндекс,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.Телефон, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаТелефон,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ЭлектроннаяПочта, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаЭлектроннаяПочта,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.СОАТО, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаСОАТО,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодГКЭД, НЕОПРЕДЕЛЕНО) КАК РеквизитыПлательщикаКодГКЭД,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.ИНН, """") КАК РеквизитыПлательщикаИНН,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодПравовойФормы, """") КАК РеквизитыПлательщикаКодПравовойФормы,
		|	ЕСТЬNULL(РеквизитыПлательщикаДляОтчетовПоНалогам.КодПоОКПО, """") КАК РеквизитыПлательщикаКодПоОКПО
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду КАК ОтчетыПоНалогамЗаработнойПлатыИТруду
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РеквизитыПлательщикаДляОтчетовПоНалогам КАК РеквизитыПлательщикаДляОтчетовПоНалогам
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТруду.РеквизитыПлательщика = РеквизитыПлательщикаДляОтчетовПоНалогам.Ссылка
		|ГДЕ
		|	ОтчетыПоНалогамЗаработнойПлатыИТруду.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Ссылка КАК Ссылка,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.НомерСтроки КАК НомерСтроки,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо КАК ФизЛицо,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо.ИНН КАК ИНН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо.ФИО КАК ФИО,
		|	ВЫБОР
		|		КОГДА ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус = ЗНАЧЕНИЕ(Справочник.Статусы.ПустаяСсылка)
		|			ТОГДА """"
		|		ИНАЧЕ ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус.Категория.Код
		|	КОНЕЦ КАК Категория,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ДатаНачала КАК ДатаНачала,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ДатаОкончания КАК ДатаОкончания,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОтработаноДней КАК ОтработаноДней,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОтработаноЧасов КАК ОтработаноЧасов,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ПризнакРезидентства КАК ПризнакРезидентства,
		|	""001"" КАК КодДохода,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаНачислено КАК СуммаНачислено,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДСФ КАК СуммаДоходовВозмещение,
		|	ВЫБОР
		|		КОГДА ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Статус.Категория = ЗНАЧЕНИЕ(Справочник.КатегорииСотрудников.Прочие)
		|			ТОГДА 0
		|		ИНАЧЕ ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаНачислено - ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДПН
		|	КОНЕЦ КАК ДоходНеОблагаемый,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФРДляРасчетаПН + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаГНПФРДляРасчетаПН + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Вычеты * 100 КАК СтандартныеВычеты,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОДПН - ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФРДляРасчетаПН - ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаГНПФРДляРасчетаПН - ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Вычеты * 100 КАК ДоходОблагаемый,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПНсСотрудника КАК ПНСОблагаемого,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПНсМРД КАК ПНСМРД,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПН КАК ПНВсего,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФР + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФФ + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаМСФ + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаФОТФ + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФФКорректировка + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаМСФКорректировка + ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаФОТФКорректировка КАК СтраховыеВзносы,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ОстатокПН КАК ОстатокПН,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаГНПФР КАК СуммаГНПФР,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФР КАК СуммаПФР,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаПФФ КАК СуммаПФФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаМСФ КАК СуммаМСФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаФОТФ КАК СуммаФОТФ,
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.СуммаВыплачено КАК СуммаВыплачено,
		|	ЕСТЬNULL(ГражданствоФизическихЛицСрезПоследних.Страна.КодАльфа3, """") КАК Гражданство
		|ИЗ
		|	Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду.Налоги КАК ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
		|		ПО ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.ФизЛицо = ГражданствоФизическихЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	ОтчетыПоНалогамЗаработнойПлатыИТрудуНалоги.Ссылка В(&МассивОбъектов)";	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты 	= Запрос.ВыполнитьПакет();	
	Шапка 		= Результаты[0].Выбрать();
	Налоги 		= Результаты[1].Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетыПоНалогамЗаработнойПлатыИТруду_ОтчетПоЗПиТруду";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду.ПФ_MXL_ОтчетПоНалогамЗП");

	Пока Шапка.Следующий() Цикл		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеУчетнойПолитикиПоПерсоналу = БухгалтерскийУчетСервер.ПолучитьДанныеУчетнойПолитикиПоПерсоналу(Шапка.Дата, Шапка.Организация);
		
		СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Шапка.Организация);
		
		Если ДанныеУчетнойПолитикиПоПерсоналу.ПределыПоПодразделениям 
			И ЗначениеЗаполнено(Шапка.РеквизитыПлательщика) Тогда
			АдресГород 			= Шапка.РеквизитыПлательщикаАдресГород;
			АдресУлица 			= Шапка.РеквизитыПлательщикаАдресУлица;
			Индекс 				= Шапка.РеквизитыПлательщикаИндекс;
			ГНС					= Шапка.РеквизитыПлательщикаГНС;
			ГНСКод				= Шапка.РеквизитыПлательщикаГНСКод;
			РегНомерСоцФонда	= Шапка.РеквизитыПлательщикаРегНомерСоцФонда;
			Телефон				= Шапка.РеквизитыПлательщикаТелефон;
			ЭлектроннаяПочта 	= Шапка.РеквизитыПлательщикаЭлектроннаяПочта;
			СОАТО				= Шапка.РеквизитыПлательщикаСОАТО;
			КодГКЭД				= Шапка.РеквизитыПлательщикаКодГКЭД;
			ИНН					= Шапка.РеквизитыПлательщикаИНН;
			КодПравовойФормы	= Шапка.РеквизитыПлательщикаКодПравовойФормы;
			ОКПО				= Шапка.РеквизитыПлательщикаКодПоОКПО;
		КонецЕсли;	
				
		// Соберем последовательно АдресГород.
		ЧастиАдреса = Новый Массив;
		ЧастиАдреса.Добавить(СведенияОбОрганизации.Регион);
		ЧастиАдреса.Добавить(СведенияОбОрганизации.Район);
		ЧастиАдреса.Добавить(СведенияОбОрганизации.Город);
		ЧастиАдреса.Добавить(СведенияОбОрганизации.НаселенныйПункт);		
		АдресГород = ?(ЗначениеЗаполнено(АдресГород), АдресГород, ОбщегоНазначенияБПКлиентСервер.МассивВСтроку(ЧастиАдреса));
		
		// Соберем последовательно АдресУлица.
		ЧастиАдреса = Новый Массив;
		ЧастиАдреса.Добавить(?(СведенияОбОрганизации.Улица = "", "", "ул. " + СведенияОбОрганизации.Улица));
		ЧастиАдреса.Добавить(?(СведенияОбОрганизации.Дом = "", "", "дом " + СведенияОбОрганизации.Дом));
		ЧастиАдреса.Добавить(?(СведенияОбОрганизации.Корпус = "", "", "корпус " + СведенияОбОрганизации.Корпус));
		ЧастиАдреса.Добавить(?(СведенияОбОрганизации.Квартира = "", "", "квартира " + СведенияОбОрганизации.Квартира));		
		АдресУлица = ?(ЗначениеЗаполнено(АдресУлица), АдресУлица, ОбщегоНазначенияБПКлиентСервер.МассивВСтроку(ЧастиАдреса));
		
		Индекс 				= ?(ЗначениеЗаполнено(Индекс), Индекс, СведенияОбОрганизации.Индекс);
		ГНС					= ?(ЗначениеЗаполнено(ГНС), ГНС, СведенияОбОрганизации.ГНС);
		ГНСКод				= ?(ЗначениеЗаполнено(ГНСКод), ГНСКод, СведенияОбОрганизации.ГНСКод);
		РегНомерСоцФонда	= ?(ЗначениеЗаполнено(РегНомерСоцФонда), РегНомерСоцФонда, СведенияОбОрганизации.РегНомерСоцФонда);
		Телефон				= ?(ЗначениеЗаполнено(Телефон), Телефон, СведенияОбОрганизации.Тел);
		ЭлектроннаяПочта 	= ?(ЗначениеЗаполнено(ЭлектроннаяПочта), ЭлектроннаяПочта, СведенияОбОрганизации.Email);
		СОАТО				= ?(ЗначениеЗаполнено(СОАТО), СОАТО, СведенияОбОрганизации.СОАТО);
		КодГКЭД				= ?(ЗначениеЗаполнено(КодГКЭД), КодГКЭД, СведенияОбОрганизации.КодГКЭД);
		ИНН					= ?(ЗначениеЗаполнено(ИНН), ИНН, СведенияОбОрганизации.ИНН);
		КодПравовойФормы	= ?(ЗначениеЗаполнено(КодПравовойФормы), КодПравовойФормы, СведенияОбОрганизации.КодПравовойФормы);		
		ОКПО				= ?(ЗначениеЗаполнено(ОКПО), ОКПО, СведенияОбОрганизации.ОКПО);		

		// Параметры опеределяемые пределами по подразделениям.
		СЗП = 0;
		
		Если ДанныеУчетнойПолитикиПоПерсоналу.ПределыПоПодразделениям Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ПределыПоПодразделениямСрезПоследних.СреднемесячнаяЗПСФ КАК СреднемесячнаяЗПСФ
				|ИЗ
				|	РегистрСведений.ПределыПоПодразделениям.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|				И УГНС = &Контрагент
				|				И Подразделение В
				|					(ВЫБРАТЬ
				|						СотрудникиСрезПоследних.Подразделение
				|					ИЗ
				|						РегистрСведений.Сотрудники.СрезПоследних(&Период, Организация = &Организация
				|							И ФизЛицо В (&СписокФизЛиц)) КАК СотрудникиСрезПоследних
				|			
				|					ОБЪЕДИНИТЬ ВСЕ
				|			
				|					ВЫБРАТЬ
				|						СотрудникиПоТрудовымСоглашениямСрезПоследних.Подразделение
				|					ИЗ
				|						РегистрСведений.СотрудникиПоТрудовымСоглашениям.СрезПоследних(&Период, Организация = &Организация
				|							И ФизЛицо В (&СписокФизЛиц)) КАК СотрудникиПоТрудовымСоглашениямСрезПоследних)) КАК ПределыПоПодразделениямСрезПоследних
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПределыПоПодразделениямСрезПоследних.Период УБЫВ";
			Запрос.УстановитьПараметр("Период", Шапка.Дата);
			Запрос.УстановитьПараметр("Организация", Шапка.Организация);
			Запрос.УстановитьПараметр("Контрагент", Шапка.Контрагент);
			
			Отбор = Новый Структура();
			Отбор.Вставить("Ссылка", Шапка.Ссылка);
			
			СписокФизЛиц = Новый СписокЗначений();
			
			Пока Налоги.НайтиСледующий(Отбор) Цикл
				СписокФизЛиц.Добавить(Налоги.ФизЛицо);
			КонецЦикла;	
			
			Налоги.Сбросить();
			
			Запрос.УстановитьПараметр("СписокФизЛиц", СписокФизЛиц);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				СЗП = Выборка.СреднемесячнаяЗПСФ;
			КонецЕсли;
		Иначе
			СЗП = ДанныеУчетнойПолитикиПоПерсоналу.СреднемесячнаяЗПСФ;	
		КонецЕсли;	
		
		ДанныеПечати = Новый Структура();
		
		// Раздел 1
		ДанныеПечати.Вставить("ОрганизацияНаименованиеПолное", 	СведенияОбОрганизации.НаименованиеПолное);		
		ДанныеПечати.Вставить("АдресГород", 					АдресГород);
		ДанныеПечати.Вставить("АдресУлица", 					АдресУлица);
		ДанныеПечати.Вставить("Телефон", 						Телефон);
		ДанныеПечати.Вставить("ЭлектроннаяПочта", 				ЭлектроннаяПочта);
				
		Если ЗначениеЗаполнено(Индекс) ТОгда
			
			ДанныеПечати.Вставить("ИНД1", Сред(Индекс,1,1));
			ДанныеПечати.Вставить("ИНД2", Сред(Индекс,2,1));
			ДанныеПечати.Вставить("ИНД3", Сред(Индекс,3,1));
			ДанныеПечати.Вставить("ИНД4", Сред(Индекс,4,1));
			ДанныеПечати.Вставить("ИНД5", Сред(Индекс,5,1));
			ДанныеПечати.Вставить("ИНД6", Сред(Индекс,6,1));
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ДанныеПечати.Вставить("ОКПО1", Сред(ОКПО,1,1));
			ДанныеПечати.Вставить("ОКПО2", Сред(ОКПО,2,1));
			ДанныеПечати.Вставить("ОКПО3", Сред(ОКПО,3,1));
			ДанныеПечати.Вставить("ОКПО4", Сред(ОКПО,4,1));
			ДанныеПечати.Вставить("ОКПО5", Сред(ОКПО,5,1));
			ДанныеПечати.Вставить("ОКПО6", Сред(ОКПО,6,1));
			ДанныеПечати.Вставить("ОКПО7", Сред(ОКПО,7,1));
			ДанныеПечати.Вставить("ОКПО8", Сред(ОКПО,8,1));
		КонецЕсли;
		
		ДанныеПечати.Вставить("ИНН1", Сред(ИНН, 1, 1));
		ДанныеПечати.Вставить("ИНН2", Сред(ИНН, 2, 1));
		ДанныеПечати.Вставить("ИНН3", Сред(ИНН, 3, 1));                           
		ДанныеПечати.Вставить("ИНН4", Сред(ИНН, 4, 1));
		ДанныеПечати.Вставить("ИНН5", Сред(ИНН, 5, 1));
		ДанныеПечати.Вставить("ИНН6", Сред(ИНН, 6, 1));
		ДанныеПечати.Вставить("ИНН7", Сред(ИНН, 7, 1));
		ДанныеПечати.Вставить("ИНН8", Сред(ИНН, 8, 1));
		ДанныеПечати.Вставить("ИНН9", Сред(ИНН, 9, 1));
		ДанныеПечати.Вставить("ИНН10", Сред(ИНН, 10, 1));
		ДанныеПечати.Вставить("ИНН11", Сред(ИНН, 11, 1));
		ДанныеПечати.Вставить("ИНН12", Сред(ИНН, 12, 1));
		ДанныеПечати.Вставить("ИНН13", Сред(ИНН, 13, 1));
		ДанныеПечати.Вставить("ИНН14", Сред(ИНН, 14, 1));
		
		ДанныеПечати.Вставить("НаименованиеНалоговой", ГНС);
		
		ДанныеПечати.Вставить("ГНС1", Сред(ГНСКод, 1, 1));
		ДанныеПечати.Вставить("ГНС2", Сред(ГНСКод, 2, 1));
		ДанныеПечати.Вставить("ГНС3", Сред(ГНСКод, 3, 1));
		
		Если ЗначениеЗаполнено(РегНомерСоцФонда) Тогда
			ДанныеПечати.Вставить("РегНомер1", Сред(РегНомерСоцФонда,1,1));
			ДанныеПечати.Вставить("РегНомер2", Сред(РегНомерСоцФонда,2,1));
			ДанныеПечати.Вставить("РегНомер3", Сред(РегНомерСоцФонда,3,1));
			ДанныеПечати.Вставить("РегНомер4", Сред(РегНомерСоцФонда,4,1));
			ДанныеПечати.Вставить("РегНомер5", Сред(РегНомерСоцФонда,5,1));
			ДанныеПечати.Вставить("РегНомер6", Сред(РегНомерСоцФонда,6,1));
			ДанныеПечати.Вставить("РегНомер7", Сред(РегНомерСоцФонда,7,1));
			ДанныеПечати.Вставить("РегНомер8", Сред(РегНомерСоцФонда,8,1));
			ДанныеПечати.Вставить("РегНомер9", Сред(РегНомерСоцФонда,9,1));
			ДанныеПечати.Вставить("РегНомер10", Сред(РегНомерСоцФонда,10,1));
			ДанныеПечати.Вставить("РегНомер11", Сред(РегНомерСоцФонда,11,1));
			ДанныеПечати.Вставить("РегНомер12", Сред(РегНомерСоцФонда,12,1));			
		КонецЕсли;	
		
		ДанныеПечати.Вставить("КоэфВысокогорья1", 1);
		
		Если ДанныеУчетнойПолитикиПоПерсоналу.ПределыПоПодразделениям 
			И ЗначениеЗаполнено(Шапка.РеквизитыПлательщика) Тогда
			КодТарифаСВЗ = ПолучитьКодВидаТарифовСтраховыхВзносов(Шапка.РеквизитыПлательщикаВидТарифа);	
		Иначе	
			КодТарифаСВЗ = ПолучитьКодВидаТарифовСтраховыхВзносов(ДанныеУчетнойПолитикиПоПерсоналу.ВидТарифовСтраховыхВзносов);	
		КонецЕсли;		
		
		Если ЗначениеЗаполнено(КодТарифаСВЗ) Тогда
			
			Если СтрДлина(КодТарифаСВЗ) = 1 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 2 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 3 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ3", Сред(КодТарифаСВЗ,3,1));
			
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 4 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ3", Сред(КодТарифаСВЗ,3,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ4", Сред(КодТарифаСВЗ,4,1));
				
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 5 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ3", Сред(КодТарифаСВЗ,3,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ4", Сред(КодТарифаСВЗ,4,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ5", Сред(КодТарифаСВЗ,5,1));
				
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 6 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ3", Сред(КодТарифаСВЗ,3,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ4", Сред(КодТарифаСВЗ,4,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ5", Сред(КодТарифаСВЗ,5,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ6", Сред(КодТарифаСВЗ,6,1));
				
			ИначеЕсли СтрДлина(КодТарифаСВЗ) = 7 Тогда 
				ДанныеПечати.Вставить("КодТарифаСВЗ1", Сред(КодТарифаСВЗ,1,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ2", Сред(КодТарифаСВЗ,2,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ3", Сред(КодТарифаСВЗ,3,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ4", Сред(КодТарифаСВЗ,4,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ5", Сред(КодТарифаСВЗ,5,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ6", Сред(КодТарифаСВЗ,6,1));
				ДанныеПечати.Вставить("КодТарифаСВЗ7", Сред(КодТарифаСВЗ,7,1));
			КонецЕсли;	
		КонецЕсли;	
		
		СреднемесячнаяЗПСФ = Формат(СЗП, "ЧГ=0");
		
		Если ЗначениеЗаполнено(СреднемесячнаяЗПСФ) Тогда
			ДанныеПечати.Вставить("СМЗ1", Сред(СреднемесячнаяЗПСФ,1,1));
			ДанныеПечати.Вставить("СМЗ2", Сред(СреднемесячнаяЗПСФ,2,1));
			ДанныеПечати.Вставить("СМЗ3", Сред(СреднемесячнаяЗПСФ,3,1));
			ДанныеПечати.Вставить("СМЗ4", Сред(СреднемесячнаяЗПСФ,4,1));
			ДанныеПечати.Вставить("СМЗ5", Сред(СреднемесячнаяЗПСФ,5,1));
			ДанныеПечати.Вставить("СМЗ6", Сред(СреднемесячнаяЗПСФ,6,1));	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СОАТО) Тогда 
			ДанныеПечати.Вставить("СОАТЕ1", Сред(СОАТО,1,1));
			ДанныеПечати.Вставить("СОАТЕ2", Сред(СОАТО,2,1));
			ДанныеПечати.Вставить("СОАТЕ3", Сред(СОАТО,3,1));
			ДанныеПечати.Вставить("СОАТЕ4", Сред(СОАТО,4,1));
			ДанныеПечати.Вставить("СОАТЕ5", Сред(СОАТО,5,1));
			ДанныеПечати.Вставить("СОАТЕ6", Сред(СОАТО,6,1));
			ДанныеПечати.Вставить("СОАТЕ7", Сред(СОАТО,7,1));
			ДанныеПечати.Вставить("СОАТЕ8", Сред(СОАТО,8,1));
			ДанныеПечати.Вставить("СОАТЕ9", Сред(СОАТО,9,1));
			ДанныеПечати.Вставить("СОАТЕ10", Сред(СОАТО,10,1));
			ДанныеПечати.Вставить("СОАТЕ11", Сред(СОАТО,11,1));
			ДанныеПечати.Вставить("СОАТЕ12", Сред(СОАТО,12,1));
			ДанныеПечати.Вставить("СОАТЕ13", Сред(СОАТО,13,1));
			ДанныеПечати.Вставить("СОАТЕ14", Сред(СОАТО,14,1));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КодГКЭД) Тогда
			ДанныеПечати.Вставить("ГКЭД1", Сред(КодГКЭД,1,1));
			ДанныеПечати.Вставить("ГКЭД2", Сред(КодГКЭД,2,1));
			ДанныеПечати.Вставить("ГКЭД3", Сред(КодГКЭД,4,1));
			ДанныеПечати.Вставить("ГКЭД4", Сред(КодГКЭД,5,1));
			ДанныеПечати.Вставить("ГКЭД5", Сред(КодГКЭД,7,1));	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(КодПравовойФормы) Тогда
			ДанныеПечати.Вставить("ОПФ1", Сред(КодПравовойФормы,1,1));
			ДанныеПечати.Вставить("ОПФ2", Сред(КодПравовойФормы,2,1));
			ДанныеПечати.Вставить("ОПФ3", Сред(КодПравовойФормы,3,1));
			ДанныеПечати.Вставить("ОПФ4", Сред(КодПравовойФормы,4,1));
			ДанныеПечати.Вставить("ОПФ5", Сред(КодПравовойФормы,5,1));
		КонецЕсли;	
		
		Если СведенияОбОрганизации.ФормаСобственности = Перечисления.ФормыСобственности.ГосударственнаяСобственность Тогда
			ДанныеПечати.Вставить("ФС1", "1");
			ДанныеПечати.Вставить("ФС2", "1");
			
		ИначеЕсли СведенияОбОрганизации.ФормаСобственности = Перечисления.ФормыСобственности.МуниципальнаяСобственность Тогда	
			ДанныеПечати.Вставить("ФС1", "1");
			ДанныеПечати.Вставить("ФС2", "2");
			
		ИначеЕсли СведенияОбОрганизации.ФормаСобственности = Перечисления.ФормыСобственности.ЧастнаяСобственность Тогда	
			ДанныеПечати.Вставить("ФС1", "2");
			ДанныеПечати.Вставить("ФС2", "0");
			
		ИначеЕсли СведенияОбОрганизации.ФормаСобственности = Перечисления.ФормыСобственности.ИныеФормыСобственности Тогда	
			ДанныеПечати.Вставить("ФС1", "3");
			ДанныеПечати.Вставить("ФС2", "0");
		КонецЕсли;
		
		ДанныеПечати.Вставить("РабочийДень1", "2");
		ДанныеПечати.Вставить("РабочийДень2", "2");
		
		НачалоПериода 	= НачалоМесяца(Шапка.Дата);
		КонецПериода 	= КонецМесяца(Шапка.Дата);
		
		ДанныеПечати.Вставить("ДатаН1", Сред(НачалоПериода, 1, 1));	
		ДанныеПечати.Вставить("ДатаН2", Сред(НачалоПериода, 2, 1));	
		ДанныеПечати.Вставить("ДатаН3", Сред(НачалоПериода, 4, 1));	
		ДанныеПечати.Вставить("ДатаН4", Сред(НачалоПериода, 5, 1));	
		ДанныеПечати.Вставить("ДатаН5", Сред(НачалоПериода, 7, 1));	
		ДанныеПечати.Вставить("ДатаН6", Сред(НачалоПериода, 8, 1));	
		ДанныеПечати.Вставить("ДатаН7", Сред(НачалоПериода, 9, 1));	
		ДанныеПечати.Вставить("ДатаН8", Сред(НачалоПериода, 10, 1));	
		
		ДанныеПечати.Вставить("ДатаК1", Сред(КонецПериода, 1, 1));	
		ДанныеПечати.Вставить("ДатаК2", Сред(КонецПериода, 2, 1));	
		ДанныеПечати.Вставить("ДатаК3", Сред(КонецПериода, 4, 1));	
		ДанныеПечати.Вставить("ДатаК4", Сред(КонецПериода, 5, 1));	
		ДанныеПечати.Вставить("ДатаК5", Сред(КонецПериода, 7, 1));	
		ДанныеПечати.Вставить("ДатаК6", Сред(КонецПериода, 8, 1));	
		ДанныеПечати.Вставить("ДатаК7", Сред(КонецПериода, 9, 1));	
		ДанныеПечати.Вставить("ДатаК8", Сред(КонецПериода, 10, 1));
		
		// Раздел 2
		Отбор = Новый Структура();
		Отбор.Вставить("Ссылка", Шапка.Ссылка);
		
		КоличествоСтрок 			= 0;
		СуммаНачисленныхДоходов 	= 0;
		ДоходыНеоблагаемыеПН 		= 0;
		Вычеты 						= 0;
		ДоходыОблагаемые 			= 0;
		НачисленныйПНСДоходов 		= 0;
		НачисленныйПНсМРД 			= 0;
		НачисленныйПНВсего 			= 0;
		СуммаВыплаченныхДоходов 	= 0;
		СуммаПНКУплате 				= 0;
		СуммаСтраховыхВзновов 		= 0;
		СуммаНачисленныхВзносовНПФ 	= 0;
		ОтработаноЧеловекЧасов 		= 0;
		
		Пока Налоги.НайтиСледующий(Отбор) Цикл
			КоличествоСтрок 			= КоличествоСтрок + 1;
			СуммаНачисленныхДоходов 	= СуммаНачисленныхДоходов + Налоги.СуммаНачислено;
			ДоходыНеоблагаемыеПН 		= ДоходыНеоблагаемыеПН + Налоги.ДоходНеОблагаемый;
			Вычеты 						= Вычеты + Налоги.СтандартныеВычеты;
			ДоходыОблагаемые 			= ДоходыОблагаемые + Налоги.ДоходОблагаемый;
			НачисленныйПНСДоходов 		= НачисленныйПНСДоходов + Налоги.ПНСОблагаемого;
			НачисленныйПНсМРД 			= НачисленныйПНсМРД + Налоги.ПНСМРД;
			НачисленныйПНВсего 			= НачисленныйПНВсего + Налоги.ПНВсего;
			СуммаВыплаченныхДоходов 	= СуммаВыплаченныхДоходов + Налоги.СуммаВыплачено;
			СуммаПНКУплате 				= СуммаПНКУплате + Налоги.ОстатокПН;
			СуммаСтраховыхВзновов		= СуммаСтраховыхВзновов + Налоги.СтраховыеВзносы;
			СуммаНачисленныхВзносовНПФ 	= СуммаНачисленныхВзносовНПФ + Налоги.СуммаГНПФР;
			ОтработаноЧеловекЧасов 		= ОтработаноЧеловекЧасов + Налоги.ОтработаноЧасов;
		КонецЦикла;	
		
		Налоги.Сбросить();
				
		ДанныеПечати.Вставить("КоличествоРаботников", 		КоличествоСтрок);
		ДанныеПечати.Вставить("СуммаНачисленныхДоходов", 	СуммаНачисленныхДоходов);	
		ДанныеПечати.Вставить("ДоходыНеоблагаемыеПН", 		ДоходыНеоблагаемыеПН);
		ДанныеПечати.Вставить("Вычеты", 					Вычеты);
		ДанныеПечати.Вставить("ДоходыОблагаемые", 			ДоходыОблагаемые);		
		ДанныеПечати.Вставить("НачисленныйПНСДоходов", 		НачисленныйПНСДоходов);	
		ДанныеПечати.Вставить("НачисленныйПНсМРД", 			НачисленныйПНсМРД);		
		ДанныеПечати.Вставить("НачисленныйПНВсего", 		НачисленныйПНВсего);
		ДанныеПечати.Вставить("СуммаВыплаченныхДоходов", 	СуммаВыплаченныхДоходов);
		ДанныеПечати.Вставить("СуммаПНКУплате", 			СуммаПНКУплате);
		ДанныеПечати.Вставить("СуммаСтраховыхВзновов", 		СуммаСтраховыхВзновов);
		ДанныеПечати.Вставить("СуммаНачисленныхВзносовНПФ",	СуммаНачисленныхВзносовНПФ);
		
		// Раздел 3
		ДанныеПечати.Вставить("СписочныйСостав", 				КоличествоСтрок);
		ДанныеПечати.Вставить("ОтработаноЧеловекЧасов", 		ОтработаноЧеловекЧасов);
		ДанныеПечати.Вставить("ВнешниеСовместители", 			Шапка.КоличествоВнешнихСовместителей);
		ДанныеПечати.Вставить("СвободныеРабочиеМеста", 			Шапка.КоличествоСвободныхРабочихМест);
		ДанныеПечати.Вставить("СозданныеРабочиеМеста", 			Шапка.КоличествоНовыхРабочихМест);
		ДанныеПечати.Вставить("ЛиквидированныеРабочиеМеста", 	Шапка.КоличествоЛиквидированныхРабочихМест);
		ДанныеПечати.Вставить("ПринятоРаботников", 				Шапка.КоличествоПринятых);
		ДанныеПечати.Вставить("ВыбылоВСвязиСВысвобождением", 	0);
		ДанныеПечати.Вставить("ВыбылоПоСобственномуЖеланию", 	Шапка.КоличествоУволенныхПоСобственномуЖеланию);
		ДанныеПечати.Вставить("ВыбылоПоДругимПричинам", 		Шапка.КоличествоУволенныхПоСтатье);
		ДанныеПечати.Вставить("ПрямаяЗаработнаяПлата",			Шапка.СуммаПрямыхНачислений);
		ДанныеПечати.Вставить("ОплатаЗаНеотработанноеВремя", 	Шапка.СуммаЗаНеотработанноеВремя);
		ДанныеПечати.Вставить("ПремииИПоощрения", 				Шапка.СуммаПремий);
		ДанныеПечати.Вставить("Выплаты", 						Шапка.СуммаПрочихВыплат);
		
		// Раздел 4
		ДанныеПечати.Вставить("РасходыНаЖилье", 				Шапка.ПрочийРасход1);
		ДанныеПечати.Вставить("РасходыНаСоцОбеспечение", 		Шапка.ПрочийРасход2);
		ДанныеПечати.Вставить("НачисленияФондЗаработнойПлаты", 	Шапка.ПрочийРасход3);
		ДанныеПечати.Вставить("СоциальныеПособия", 				Шапка.ПрочийРасход4);
		ДанныеПечати.Вставить("ПособияПотериТрудоспособности", 	Шапка.ПрочийРасход5);
		ДанныеПечати.Вставить("РасходыНаПрофОбучение", 			Шапка.ПрочийРасход6);
		ДанныеПечати.Вставить("РасходыКультурноБытовые", 		Шапка.ПрочийРасход7);
		ДанныеПечати.Вставить("ПрочиеРасходы", 					Шапка.ПрочийРасход8);
		ДанныеПечати.Вставить("СуточныеРасходы", 				Шапка.ПрочийРасход9);
		ДанныеПечати.Вставить("НачисленияПоАкциямИВкладам", 	Шапка.ПрочийРасход10);
		
		// Области		
		Если Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Первоначальный Тогда
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПервоначальный");
			
		ИначеЕсли Шапка.ВидОтчета = Перечисления.ВидыОтчетаПоНалогам.Уточненный Тогда
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокУточненный");		
		Иначе
			ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокЛиквидационный");
		КонецЕсли;
		
		ОбластьШапка1Часть = Макет.ПолучитьОбласть("Шапка1Часть");
		ОбластьШапка2Часть = Макет.ПолучитьОбласть("Шапка2Часть");
		ОбластьШапка3Часть = Макет.ПолучитьОбласть("Шапка3Часть");
		
		Если СтрДлина(КодТарифаСВЗ) = 4 Тогда
			ОбластьКодТарифаСВЗ = Макет.ПолучитьОбласть("КодТарифаСВЗ4");
			
		ИначеЕсли СтрДлина(КодТарифаСВЗ) = 5 Тогда
			ОбластьКодТарифаСВЗ = Макет.ПолучитьОбласть("КодТарифаСВЗ5");
			
		ИначеЕсли СтрДлина(КодТарифаСВЗ) = 6 Тогда
			ОбластьКодТарифаСВЗ = Макет.ПолучитьОбласть("КодТарифаСВЗ6");
			
		ИначеЕсли СтрДлина(КодТарифаСВЗ) = 7 Тогда
			ОбластьКодТарифаСВЗ = Макет.ПолучитьОбласть("КодТарифаСВЗ7");		
		Иначе
			ОбластьКодТарифаСВЗ = Макет.ПолучитьОбласть("КодТарифаСВЗ3");	
		КонецЕсли;
		
		ОбластьЗаголовокПриложения 	= Макет.ПолучитьОбласть("ЗаголовокПриложения");
		ОбластьШапкаТаблицы 		= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрокаТаблицы 		= Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьНижняяГраницаТаблицы	= Макет.ПолучитьОбласть("НижняяГраницаТаблицы");
		ОбластьПодвал 				= Макет.ПолучитьОбласть("Подвал");
		
		// Вывод областей
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка1Часть.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьШапка1Часть);
		
		ОбластьКодТарифаСВЗ.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьКодТарифаСВЗ);
		
		ОбластьШапка2Часть.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьШапка2Часть);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьШапка3Часть.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьШапка3Часть);
		
		// Приложение
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаголовокПриложения.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокПриложения);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

		ОбластиПроверки = Новый Массив();
		ОбластиПроверки.Добавить(ОбластьНижняяГраницаТаблицы);
		
		НомерСтроки = 1;
		
		Пока Налоги.НайтиСледующий(Отбор) Цикл						
			ОбластьСтрокаТаблицы.Параметры.Заполнить(Налоги);
			ОбластиПроверки.Добавить(ОбластьСтрокаТаблицы);
			
			Если КоличествоСтрок = НомерСтроки Тогда
				ОбластиПроверки.Добавить(ОбластьПодвал);	
			КонецЕсли;	
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(ОбластиПроверки) Тогда
				ТабличныйДокумент.Вывести(ОбластьНижняяГраницаТаблицы);	
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);		
			КонецЕсли;	
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			ОбластиПроверки.Удалить(ОбластиПроверки.Количество() - 1);
			НомерСтроки = НомерСтроки + 1;	
		КонецЦикла;	
		
		Налоги.Сбросить();
		
		ТабличныйДокумент.Вывести(ОбластьНижняяГраницаТаблицы);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоНалогамЗП") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетПоНалогамЗП", 
		НСтр("ru = 'Отчет по налогам ЗП и труду'"), 
		ПечатьОтчета(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетыПоНалогамЗаработнойПлатыИТруду.ПФ_MXL_ОтчетПоНалогамЗП");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоНалогамЗП";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по налогам ЗП и труду'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;

КонецПроцедуры

#КонецОбласти

#КонецЕсли