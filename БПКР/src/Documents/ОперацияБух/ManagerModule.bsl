#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 20, 0);
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати     = "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацияБух_БухгалтерскаяСправка";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОперацияБух.ПФ_MXL_БухгалтерскаяСправка");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
		|	ХозрасчетныйДвиженияССубконто.Организация КАК Организация,
		|	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ХозрасчетныйДвиженияССубконто.КоличествоДт КАК КоличествоДт,
		|	ХозрасчетныйДвиженияССубконто.КоличествоКт КАК КоличествоКт,
		|	ХозрасчетныйДвиженияССубконто.Содержание КАК Содержание,
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТХозрасчетный
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор В (&МассивОбъектов), , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконто.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОперацияБух.Ссылка КАК Ссылка,
		|	ОперацияБух.Номер КАК Номер,
		|	ОперацияБух.Ответственный КАК Ответственный,
		|	ОперацияБух.Дата КАК Дата,
		|	ОперацияБух.Содержание КАК СодержаниеОперации,
		|	ЕСТЬNULL(ВТХозрасчетный.НомерСтроки, 0) КАК НомерСтроки,
		|	ЕСТЬNULL(ВТХозрасчетный.СчетДт, НЕОПРЕДЕЛЕНО) КАК СчетДт,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоДт1, НЕОПРЕДЕЛЕНО) КАК СубконтоДт1,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоДт2, НЕОПРЕДЕЛЕНО) КАК СубконтоДт2,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоДт3, НЕОПРЕДЕЛЕНО) КАК СубконтоДт3,
		|	ЕСТЬNULL(ВТХозрасчетный.СчетКт, НЕОПРЕДЕЛЕНО) КАК СчетКт,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоКт1, НЕОПРЕДЕЛЕНО) КАК СубконтоКт1,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоКт2, НЕОПРЕДЕЛЕНО) КАК СубконтоКт2,
		|	ЕСТЬNULL(ВТХозрасчетный.СубконтоКт3, НЕОПРЕДЕЛЕНО) КАК СубконтоКт3,
		|	ЕСТЬNULL(ВТХозрасчетный.Организация, """") КАК Организация,
		|	ЕСТЬNULL(ВТХозрасчетный.Организация.НаименованиеПолное, """") КАК ОрганизацияНаименованиеПолное,
		|	ЕСТЬNULL(ВТХозрасчетный.ВалютаДт, НЕОПРЕДЕЛЕНО) КАК ВалютаДт,
		|	ЕСТЬNULL(ВТХозрасчетный.ВалютаКт, НЕОПРЕДЕЛЕНО) КАК ВалютаКт,
		|	ЕСТЬNULL(ВТХозрасчетный.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ВТХозрасчетный.ВалютнаяСуммаДт, 0) КАК ВалютнаяСуммаДт,
		|	ЕСТЬNULL(ВТХозрасчетный.ВалютнаяСуммаКт, 0) КАК ВалютнаяСуммаКт,
		|	ЕСТЬNULL(ВТХозрасчетный.КоличествоДт, 0) КАК КоличествоДт,
		|	ЕСТЬNULL(ВТХозрасчетный.КоличествоКт, 0) КАК КоличествоКт,
		|	ЕСТЬNULL(ВТХозрасчетный.Содержание, """") КАК Содержание
		|ИЗ
		|	Документ.ОперацияБух КАК ОперацияБух
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетный КАК ВТХозрасчетный
		|		ПО ОперацияБух.Ссылка = ВТХозрасчетный.Регистратор
		|ГДЕ
		|	ОперацияБух.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОперацияБух.Дата,
		|	ОперацияБух.Ссылка,
		|	НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
				
		// Выведем шапку документа.
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("Организация", Выборка.ОрганизацияНаименованиеПолное);
		СтруктураШапки.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Ложь));
		СтруктураШапки.Вставить("ДатаДокумента", Формат(Выборка.Дата, "ДЛФ=D"));
		СтруктураШапки.Вставить("Содержание", Выборка.СодержаниеОперации);
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабДокумент.Вывести(ШапкаДокумента);
		
		// Выведем заголовок таблицы.
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		// Выведем строки документа.
		Пока Выборка.Следующий() Цикл
			
			СтрокаТаблицы.Параметры.Заполнить(Выборка);
			
			АналитикаДт = ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Строка(Выборка.СубконтоДт1) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Строка(Выборка.СубконтоДт2) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(Выборка.СубконтоДт3), Строка(Выборка.СубконтоДт3), "");
			
			АналитикаКт = ?(ЗначениеЗаполнено(Выборка.СубконтоКт1), Строка(Выборка.СубконтоКт1) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт2), Строка(Выборка.СубконтоКт2) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(Выборка.СубконтоКт3), Строка(Выборка.СубконтоКт3), "");
				
			СтруктураАналитики = Новый Структура("АналитикаДт,АналитикаКт", АналитикаДт, АналитикаКт);
			СтрокаТаблицы.Параметры.Заполнить(СтруктураАналитики);
			
			// Проверим, помещается ли строка с подвалом.
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалДокумента);
			
			Если НЕ ОбщегоНазначенияБПВызовСервера.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
				
				// Выведем подвал таблицы.
				ТабДокумент.Вывести(ПодвалТаблицы);
					
				// Выведем разрыв страницы.
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				// Выведем заголовок таблицы.
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(СтрокаТаблицы);
			
		КонецЦикла;
		
		// Выведем подвал таблицы.
		ТабДокумент.Вывести(ПодвалТаблицы);
		
		// Выведем подвал документа.
		ТабДокумент.Вывести(ПодвалДокумента);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета ПлатежноеПоручение формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БухгалтерскаяСправка") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"БухгалтерскаяСправка", НСтр("ru = 'Бухгалтерская справка'"), ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати),, 
			"Документ.ОперацияБух.ПФ_MXL_БухгалтерскаяСправка");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Бухгалтерская справка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БухгалтерскаяСправка";
	КомандаПечати.Представление = НСтр("ru = 'Бухгалтерская справка'");
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрОперацияБух";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Операция""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#КонецЕсли