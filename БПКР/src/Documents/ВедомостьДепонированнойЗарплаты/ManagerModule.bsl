#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру бухгалтерии Хозрасчетный.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НачисленнаяЗаработнаяПлата) КАК СчетДт,
		|	ВременнаяТаблицаШапка.СчетУчета КАК СчетКт,
		|	ВременнаяТаблицаЗарплата.ФизЛицо КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	ВременнаяТаблицаЗарплата.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ВременнаяТаблицаЗарплата.Сумма КАК Сумма,
		|	&Содержание КАК Содержание
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗарплата КАК ВременнаяТаблицаЗарплата
		|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Депонированная зарплата'")); 
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаХозрасчетный", Запрос.Выполнить().Выгрузить());
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Дата КАК Дата,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СчетУчета КАК СчетУчета
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.ВедомостьДепонированнойЗарплаты КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		|	ТаблицаДокумента.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВременнаяТаблицаЗарплата
		|ИЗ
		|	Документ.ВедомостьДепонированнойЗарплаты.Зарплата КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";				
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Выполнить();
	
	СформироватьТаблицаХозрасчетный(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВедомостьДепонированнойЗарплаты.Ссылка КАК Ссылка,
		|	ВедомостьДепонированнойЗарплаты.Дата КАК ДатаДокумента,
		|	ВедомостьДепонированнойЗарплаты.Номер КАК Номер,
		|	ВедомостьДепонированнойЗарплаты.Организация КАК Организация,
		|	ВедомостьДепонированнойЗарплаты.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
		|	ВедомостьДепонированнойЗарплаты.Организация.КодПоОКПО КАК КодОКПО,
		|	ВедомостьДепонированнойЗарплаты.Номер КАК НомерВедомости,
		|	ВедомостьДепонированнойЗарплаты.Зарплата.(
		|		Подразделение КАК Подразделение,
		|		ФизЛицо.Наименование КАК ФизЛицо,
		|		ФизЛицо.Код КАК ТабельныйНомер,
		|		Сумма КАК Сумма
		|	) КАК Зарплата
		|ИЗ
		|	Документ.ВедомостьДепонированнойЗарплаты КАК ВедомостьДепонированнойЗарплаты
		|ГДЕ
		|	ВедомостьДепонированнойЗарплаты.Ссылка В(&СписокДокументов)";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ВедомостьДепонированнойЗарплаты_РеестрДепонированныхСумм";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьДепонированнойЗарплаты.ПФ_MXL_РеестрДепонированныхСумм");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подготовка данных.
		ДанныеПечати = Новый Структура;	
		ДанныеПечати.Вставить("ДатаДокумента", 	Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy"));
		ДанныеПечати.Вставить("НомерВедомости",	ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер));
		
		ОбластьМакетаЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогоПоЛисту 	= Макет.ПолучитьОбласть("ИтогоПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакетаЗаголовок.Параметры.Заполнить(Шапка);
		ОбластьМакетаЗаголовок.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
		
		ФИОКассира = "";
		ФИОГлавногоБухгалтера = "";
		ОтветственныеЛица = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Шапка.Организация, Шапка.ДатаДокумента);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(ФИОКассира, ОтветственныеЛица.Кассир);
		БухгалтерскийУчетСервер.ФамилияИнициалыПоНаименованию(ФИОГлавногоБухгалтера, ОтветственныеЛица.ГлавныйБухгалтер);
		
		ДанныеПечати.Вставить("ФИОКассира", ФИОКассира);
		ДанныеПечати.Вставить("ФИОГлавногоБухгалтера", ФИОГлавногоБухгалтера);
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеПечати);
		
		ДанныеПечати.Вставить("СуммаПоЛисту", 0);
		ДанныеПечати.Вставить("СуммаИтого", 0);
		
		ОбластиПроверки = Новый Массив();
		ОбластиПроверки.Добавить(ОбластьМакетаИтогоПоЛисту);
		
		НомерСтроки = 1;
		ВыборкаЗарплата = Шапка.Зарплата.Выбрать();
		КоличествоСтрок = ВыборкаЗарплата.Количество();
		Пока ВыборкаЗарплата.Следующий() Цикл
					
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаЗарплата);				
			
			ОбластиПроверки.Добавить(ОбластьМакетаСтрока);
			
			Если НомерСтроки = КоличествоСтрок Тогда
				ОбластиПроверки.Добавить(ОбластьМакетаПодвал);				
			КонецЕсли;	
			
			Если ТабличныйДокумент.ПроверитьВывод(ОбластиПроверки) Тогда
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			Иначе
				ОбластьМакетаИтогоПоЛисту.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоЛисту);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);				
				
				ДанныеПечати.СуммаПоЛисту = 0;
			КонецЕсли;

			ДанныеПечати.СуммаПоЛисту 	= ДанныеПечати.СуммаПоЛисту + ВыборкаЗарплата.Сумма;
			ДанныеПечати.СуммаИтого 	= ДанныеПечати.СуммаИтого + ВыборкаЗарплата.Сумма;
			
			Если НомерСтроки = КоличествоСтрок Тогда
				ОбластьМакетаИтогоПоЛисту.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоЛисту);
				
				ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			КонецЕсли;
			
			ОбластиПроверки.Удалить(ОбластиПроверки.Количество() - 1);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()
	
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрДепонированныхСумм") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"РеестрДепонированныхСумм", 
			НСтр("ru = 'Реестр депонированных сумм'"), 
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрДепонированныхСумм";
	КомандаПечати.Представление = НСтр("ru = 'Реестр депонированных сумм'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "РеестрВедомостьДепонированнойЗарплаты";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Ведомость депонированной зарплаты""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
