#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = КонецМесяца(ТекущаяДатаСеанса());
		Если ЕстьДокументВУказанныйПериод(Дата) Тогда
			Дата = Дата('00010101');
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Предварительный контроль
	ВыполнитьПредварительныйКонтроль(Отказ);	
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
КонецПроцедуры

Функция ЕстьДокументВУказанныйПериод(Дата)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПоНДС.Ссылка
		|ИЗ
		|	Документ.ОтчетПоНДС КАК ОтчетПоНДС
		|ГДЕ
		|	НЕ ОтчетПоНДС.ПометкаУдаления
		|	И КОНЕЦПЕРИОДА(ОтчетПоНДС.Дата, МЕСЯЦ) = &Дата";
	
	Запрос.УстановитьПараметр("Дата", Дата);		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 0 	

КонецФункции 

// Процедура заполняет табличную часть
//
Процедура ЗаполнитьТабличнуюЧасть() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БланкиСчетовФактурОстаткиИОбороты.СерияБланкаСФ КАК СерияБланкаСФ,
		|	БланкиСчетовФактурОстаткиИОбороты.НомерБланкаСФ КАК НомерБланкаСФ,
		|	БланкиСчетовФактурОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	БланкиСчетовФактурОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	БланкиСчетовФактурОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
		|ИЗ
		|	РегистрНакопления.БланкиСчетовФактур.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Организация = &Организация) КАК БланкиСчетовФактурОстаткиИОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	СерияБланкаСФ,
		|	НомерБланкаСФ";		
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		Если Выборка.КоличествоРасход > 0 Тогда			
			СтрокаТабличнойЧасти = БланкиСФОбороты.Добавить();			
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
			СтрокаТабличнойЧасти.Количество = Выборка.КоличествоРасход;
		КонецЕсли;	
		
		Если Выборка.КоличествоНачальныйОстаток > 0 Тогда			
			СтрокаТабличнойЧасти = БланкиСФОстаткиНаНачало.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
			СтрокаТабличнойЧасти.Количество = Выборка.КоличествоНачальныйОстаток;
		КонецЕсли;
		
		Если Выборка.КоличествоКонечныйОстаток > 0 Тогда			
			СтрокаТабличнойЧасти = БланкиСФОстаткиНаКонец.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
			СтрокаТабличнойЧасти.Количество = Выборка.КоличествоКонечныйОстаток;
		КонецЕсли;
	КонецЦикла;	
	
	Если БланкиСФОбороты.Количество() = 0 И БланкиСФОстаткиНаНачало.Количество() = 0 И БланкиСФОстаткиНаКонец.Количество() = 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В период ""%1"" нет данных для заполнения'"), 
										ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата)));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабличнуюЧасть()

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли