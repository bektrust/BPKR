#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки)
	Пакет 	= ПараметрыВыборки.Пакет;
	
	ОбщееКоличество = 0;
	
	ПредыдущийНомер = -100; // Здесь надо ставить любой заведомо не реальный номер;
	
	ВыборкаСерии = Пакет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСерии.Следующий() Цикл
		ПредыдущийНомер 		= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаСерии.БланкНомер) - 1;
		ОбщееКоличество			= ОбщееКоличество + ВыборкаСерии.КоличествоВсего;		
		ВыборкаНомера 			= ВыборкаСерии.Выбрать();
		Пока ВыборкаНомера.Следующий() Цикл
			ПроверяемыйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
			Если ПроверяемыйНомер = (ПредыдущийНомер + 1) Тогда
				ПредыдущийНомер = ПроверяемыйНомер;
			Иначе 
				ПредыдущийНомер			= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаНомера.БланкНомер);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
	ПараметрыВыборки.Область.Параметры.Всего = ОбщееКоличество;
	ТабличныйДокумент.Вывести(ПараметрыВыборки.Область);
КонецПроцедуры

Процедура ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки)
	Пакет 			= ПараметрыВыборки.Пакет;
	ОбластьГруппы 	= Макет.ПолучитьОбласть("Группа");
	ОбластьГруппы.Параметры.Заполнить(ПараметрыВыборки);
	
	ВыборкаГруппы 	= Пакет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	Если ВыборкаГруппы.Количество() = 0 Тогда
		ТабличныйДокумент.Вывести(ОбластьГруппы);
	    Возврат;
	КонецЕсли;
	
	Пока ВыборкаГруппы.Следующий() Цикл	
		ОбластьГруппы.Параметры.Заполнить(ВыборкаГруппы);
		ТабличныйДокумент.Вывести(ОбластьГруппы);

		ВыборкаНомера 			= ВыборкаГруппы.Выбрать();		
		Пока ВыборкаНомера.Следующий() Цикл
			ОбластьДетали 	= Макет.ПолучитьОбласть("Детали");
			ОбластьДетали.Параметры.Заполнить(ВыборкаНомера);
			ОбластьДетали.Параметры.СтрокаНомеров = ВыборкаНомера.СерияБланкаСФ + " " + ВыборкаНомера.БланкНомер;
			ТабличныйДокумент.Вывести(ОбластьДетали);			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция -ПолучитьКонтактнуюИнформацию
//
// Параметры:
//  Организация  - Спр.Ссылка - Спр.Организации 
// Возвращаемое значение:
//  Структура   - структура данных контактной информации
//
Функция ПолучитьКонтактнуюИнформацию(Организация)
	
	СведенияОбОрганизации = БухгалтерскийУчетСервер.ПолучитьСведенияОбОрганизации(Организация);

	Индекс = СведенияОбОрганизации.Индекс; 
	
	ГородНасПункт   = ?(СведенияОбОрганизации.Город  = "",СведенияОбОрганизации.НаселенныйПункт,СведенияОбОрганизации.Город);
	АдрОбластьГород = ?(СведенияОбОрганизации.Регион = "","",СведенияОбОрганизации.Регион + ",")
		+ ?(СведенияОбОрганизации.Район  = "","", " " + СведенияОбОрганизации.Район + ",") 
		+ ?(ГородНасПункт = "",""," " + ГородНасПункт); 
	АдресОрганизации = ?(СведенияОбОрганизации.Улица    = "","",СведенияОбОрганизации.Улица + ",")
		+ ?(СведенияОбОрганизации.Дом      = "",""," " + СведенияОбОрганизации.Дом + ",")
		+ ?(СведенияОбОрганизации.Корпус   = "",""," " + СведенияОбОрганизации.Корпус + ",")
		+ ?(СведенияОбОрганизации.Квартира = "",""," " + СведенияОбОрганизации.Квартира);
		
	Телефон = СведенияОбОрганизации.Тел;
	
	ДанныеОрганизации = Новый Структура();
	ДанныеОрганизации.Вставить("Индекс", 			Индекс);
	ДанныеОрганизации.Вставить("АдрОбластьГород", 	АдрОбластьГород);
	ДанныеОрганизации.Вставить("АдресОрганизации", 	АдресОрганизации);
	ДанныеОрганизации.Вставить("Телефон", 			Телефон);
	
	Возврат ДанныеОрганизации;
	
КонецФункции // ПолучитьАдресОрганизации()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланков
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланков(МассивОбъектов, ОбъектыПечати)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланков";
	
	Запрос = Новый Запрос;
	Запрос.Текст =		
		"ВЫБРАТЬ
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата,
		|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоОстаток
		|ПОМЕСТИТЬ Остатки_КонецПериода
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаКонец КАК БланкиСФОстатки
		|ГДЕ
		|	БланкиСФОстатки.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата,
		|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоОстаток
		|ПОМЕСТИТЬ Остатки_НачалоПериода
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаНачало КАК БланкиСФОстатки
		|ГДЕ
		|	БланкиСФОстатки.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	БланкиСФОстатки.Ссылка,
		|	БланкиСФОстатки.Ссылка.Организация,
		|	БланкиСФОстатки.Ссылка.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БланкиСФОбороты.Ссылка,
		|	БланкиСФОбороты.Ссылка.Организация,
		|	БланкиСФОбороты.Ссылка.Дата,
		|	ВЫБОР
		|		КОГДА БланкиСФОбороты.Количество > 0
		|			ТОГДА БланкиСФОбороты.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПриход,
		|	ВЫБОР
		|		КОГДА БланкиСФОбороты.Количество >= 0
		|			ТОГДА 0
		|		ИНАЧЕ -БланкиСФОбороты.Количество
		|	КОНЕЦ КАК КоличествоРасход
		|ПОМЕСТИТЬ Обороты
		|ИЗ
		|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК БланкиСФОбороты
		|ГДЕ
		|	БланкиСФОбороты.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Обороты.Ссылка, ЕСТЬNULL(Остатки_КонецПериода.Ссылка, Остатки_НачалоПериода.Ссылка)) КАК Ссылка,
		|	ЕСТЬNULL(Обороты.Организация, ЕСТЬNULL(Остатки_КонецПериода.Организация, Остатки_НачалоПериода.Организация)) КАК Организация,
		|	ЕСТЬNULL(Обороты.Дата, ЕСТЬNULL(Остатки_КонецПериода.Дата, Остатки_НачалоПериода.Дата)) КАК Дата,
		|	СУММА(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНРА4,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНПА4,
		|	СУММА(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНРА5,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНПА5,
		|	МАКСИМУМ(Остатки_НачалоПериода.КоличествоОстаток) КАК ОстатокНВсего,
		|	СУММА(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКРА4,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКПА4,
		|	СУММА(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКРА5,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКПА5,
		|	МАКСИМУМ(Остатки_КонецПериода.КоличествоОстаток) КАК ОстатокКВсего,
		|	СУММА(Обороты.КоличествоПриход) КАК ПолученоРА5,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоПА5,
		|	СУММА(Обороты.КоличествоПриход) КАК ПолученоРА4,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоПА4,
		|	МАКСИМУМ(Обороты.КоличествоПриход) КАК ПолученоВсего,
		|	СУММА(Обороты.КоличествоРасход) КАК ИспользованоВсего,
		|	СУММА(Обороты.КоличествоРасход) КАК ИспользованоРА4,
		|	СУММА(Обороты.КоличествоРасход) КАК ИспользованоПА4,
		|	СУММА(0) КАК ИспорченоВсего,
		|	СУММА(0) КАК ИспорченоПА5,
		|	СУММА(0) КАК ИспорченоРА4,
		|	СУММА(0) КАК ИспорченоПА4,
		|	СУММА(0) КАК УтеряноВсего,
		|	СУММА(0) КАК УтеряноРА5,
		|	СУММА(0) КАК УтеряноПА5,
		|	СУММА(0) КАК УтеряноРА4,
		|	СУММА(0) КАК УтеряноПА4,
		|	СУММА(0) КАК БракРА5,
		|	СУММА(0) КАК БракПА5,
		|	СУММА(0) КАК БракРА4,
		|	СУММА(0) КАК БракПА4,
		|	СУММА(0) КАК БракВсего
		|ИЗ
		|	Обороты КАК Обороты
		|		ПОЛНОЕ СОЕДИНЕНИЕ Остатки_КонецПериода КАК Остатки_КонецПериода
		|		ПО Обороты.Ссылка = Остатки_КонецПериода.Ссылка
		|		ПОЛНОЕ СОЕДИНЕНИЕ Остатки_НачалоПериода КАК Остатки_НачалоПериода
		|		ПО Обороты.Ссылка = Остатки_НачалоПериода.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(Обороты.Ссылка, ЕСТЬNULL(Остатки_КонецПериода.Ссылка, Остатки_НачалоПериода.Ссылка)),
		|	ЕСТЬNULL(Обороты.Организация, ЕСТЬNULL(Остатки_КонецПериода.Организация, Остатки_НачалоПериода.Организация)),
		|	ЕСТЬNULL(Обороты.Дата, ЕСТЬNULL(Остатки_КонецПериода.Дата, Остатки_НачалоПериода.Дата))
		|ИТОГИ
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Дата)
		|ПО
		|	Ссылка";
		
	Запрос.УстановитьПараметр("МассивОбъектов",	МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланков");
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	
	Шапка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
		Организация = Шапка.Организация;
		НачалоПериода = НачалоМесяца(Шапка.Дата);
		КонецПериода = КонецМесяца(Шапка.Дата);
		
		ОКПО              				= Организация.КодПоОКПО;
		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;
		
		КонтактныеДанные = ПолучитьКонтактнуюИнформацию(Организация);
	
		Индекс           = КонтактныеДанные.Индекс;
		АдрОбластьГород  = КонтактныеДанные.АдрОбластьГород;
		ЮрАдрес	         = КонтактныеДанные.АдресОрганизации; 
		Телефон		     = КонтактныеДанные.Телефон;

		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = ОрганизацияНаменованиеПолное;
		Если ЗначениеЗаполнено(АдрОбластьГород) Тогда 
			ОбластьШапка.Параметры.Область = АдрОбластьГород;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЮрАдрес) Тогда 
			ОбластьШапка.Параметры.Адрес = ЮрАдрес;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если ЗначениеЗаполнено(Индекс) Тогда
			ОбластьШапка.Параметры.ИНД1 = Сред(Индекс,1,1);
			ОбластьШапка.Параметры.ИНД2 = Сред(Индекс,2,1);
			ОбластьШапка.Параметры.ИНД3 = Сред(Индекс,3,1);
			ОбластьШапка.Параметры.ИНД4 = Сред(Индекс,4,1);
			ОбластьШапка.Параметры.ИНД5 = Сред(Индекс,5,1);
			ОбластьШапка.Параметры.ИНД6 = Сред(Индекс,6,1);
		КонецЕсли;

		Если ЗначениеЗаполнено(ОКПО) Тогда 
			ОбластьШапка.Параметры.ОКПО1 = Сред(ОКПО,1,1);
			ОбластьШапка.Параметры.ОКПО2 = Сред(ОКПО,2,1);
			ОбластьШапка.Параметры.ОКПО3 = Сред(ОКПО,3,1);
			ОбластьШапка.Параметры.ОКПО4 = Сред(ОКПО,4,1);
			ОбластьШапка.Параметры.ОКПО5 = Сред(ОКПО,5,1);
			ОбластьШапка.Параметры.ОКПО6 = Сред(ОКПО,6,1);
			ОбластьШапка.Параметры.ОКПО7 = Сред(ОКПО,7,1);
			ОбластьШапка.Параметры.ОКПО8 = Сред(ОКПО,8,1);
		КонецЕсли;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ОбластьТаблица	= Макет.ПолучитьОбласть("Таблица");						
		
		// 1. Остатки на начало
		Выборка = Шапка.Выбрать();
		Если Выборка.Следующий() Тогда
			ОбластьТаблица.Параметры.Заполнить(Выборка);
		КонецЕсли;
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьТаблица);
		ТабличныйДокумент.Вывести(ОбластьПодвал);		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланковЛандшафт
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланковЛандшафт(МассивОбъектов, ОбъектыПечати)
	Для каждого ДокументСсылка Из МассивОбъектов Цикл	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ЧерноБелаяПечать = Истина;
		ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланковЛандшафт";
		
		Организация = ДокументСсылка.Организация;
		НачалоПериода = НачалоМесяца(ДокументСсылка.Дата);
		КонецПериода = КонецМесяца(ДокументСсылка.Дата);
		
		Макет = ПолучитьМакет("ПФ_MXL_ОтчетОбИспользованииБланковЛандшафт");

		ИНН 							= Организация.ИНН;
		КодГНС 							= Организация.ГНС.Код;
		ОрганизацияНаменованиеПолное    = Организация.НаименованиеПолное;

		ОбластьШапка					= Макет.ПолучитьОбласть("Шапка");	
		ОбластьОстатокНачало			= Макет.ПолучитьОбласть("ОстатокНачало");
		ОбластьПолучено					= Макет.ПолучитьОбласть("Получено");
		ОбластьИспользовано				= Макет.ПолучитьОбласть("Использовано");
		ОбластьУтеряно					= Макет.ПолучитьОбласть("Утеряно");
		ОбластьИспорчено				= Макет.ПолучитьОбласть("Испорчено");
		ОбластьПроизводственныйБрак		= Макет.ПолучитьОбласть("ПроизводственныйБрак");
		ОбластьОстатокКонец				= Макет.ПолучитьОбласть("ОстатокКонец");
		ОбластьПодвал					= Макет.ПолучитьОбласть("Подвал");
		
		ОбластьШапка.Параметры.НаменованиеОрганизации = ОрганизацияНаменованиеПолное;
		
		ОбластьШапка.Параметры.ИНН1 = Сред(ИНН, 1, 1);
		ОбластьШапка.Параметры.ИНН2 = Сред(ИНН, 2, 1);
		ОбластьШапка.Параметры.ИНН3 = Сред(ИНН, 3, 1);                           
		ОбластьШапка.Параметры.ИНН4 = Сред(ИНН, 4, 1);
		ОбластьШапка.Параметры.ИНН5 = Сред(ИНН, 5, 1);
		ОбластьШапка.Параметры.ИНН6 = Сред(ИНН, 6, 1);
		ОбластьШапка.Параметры.ИНН7 = Сред(ИНН, 7, 1);
		ОбластьШапка.Параметры.ИНН8 = Сред(ИНН, 8, 1);
		ОбластьШапка.Параметры.ИНН9 = Сред(ИНН, 9, 1);
		ОбластьШапка.Параметры.ИНН10 = Сред(ИНН, 10, 1);
		ОбластьШапка.Параметры.ИНН11 = Сред(ИНН, 11, 1);
		ОбластьШапка.Параметры.ИНН12 = Сред(ИНН, 12, 1);
		ОбластьШапка.Параметры.ИНН13 = Сред(ИНН, 13, 1);
		ОбластьШапка.Параметры.ИНН14 = Сред(ИНН, 14, 1);
		
		ОбластьШапка.Параметры.НаименованиеНалоговой = Организация.ГНС;
		
		ОбластьШапка.Параметры.Код1 = Сред(КодГНС, 1, 1);
		ОбластьШапка.Параметры.Код2 = Сред(КодГНС, 2, 1);
		ОбластьШапка.Параметры.Код3 = Сред(КодГНС, 3, 1);
		
		ОбластьШапка.Параметры.ДН1 = Сред(НачалоПериода, 1, 1);	
		ОбластьШапка.Параметры.ДН2 = Сред(НачалоПериода, 2, 1);	
		ОбластьШапка.Параметры.ДН3 = Сред(НачалоПериода, 4, 1);	
		ОбластьШапка.Параметры.ДН4 = Сред(НачалоПериода, 5, 1);	
		ОбластьШапка.Параметры.ДН5 = Сред(НачалоПериода, 7, 1);	
		ОбластьШапка.Параметры.ДН6 = Сред(НачалоПериода, 8, 1);	
		ОбластьШапка.Параметры.ДН7 = Сред(НачалоПериода, 9, 1);	
		ОбластьШапка.Параметры.ДН8 = Сред(НачалоПериода, 10, 1);	
		
		ОбластьШапка.Параметры.ДК1 = Сред(КонецПериода, 1, 1);	
		ОбластьШапка.Параметры.ДК2 = Сред(КонецПериода, 2, 1);	
		ОбластьШапка.Параметры.ДК3 = Сред(КонецПериода, 4, 1);	
		ОбластьШапка.Параметры.ДК4 = Сред(КонецПериода, 5, 1);	
		ОбластьШапка.Параметры.ДК5 = Сред(КонецПериода, 7, 1);	
		ОбластьШапка.Параметры.ДК6 = Сред(КонецПериода, 8, 1);	
		ОбластьШапка.Параметры.ДК7 = Сред(КонецПериода, 9, 1);	
		ОбластьШапка.Параметры.ДК8 = Сред(КонецПериода, 10, 1);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Запрос = Новый Запрос;
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.СерияБланкаСФ,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.НомерБланкаСФ,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество > 0
			|			ТОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриход,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество < 0
			|			ТОГДА -ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоРасход
			|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК ОтчетПоБланкамСчетовФактурБланкиСФОбороты
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоВсего,
			|	БланкиСФОстатки.СерияБланкаСФ КАК СерияБланкаСФ,
			|	БланкиСФОстатки.НомерБланкаСФ КАК БланкНомер
			|ПОМЕСТИТЬ ОстаткиНачало
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаНачало КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.НомерБланкаСФ,
			|	БланкиСФОстатки.СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоВсего,
			|	БланкиСФОстатки.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОстатки.СерияБланкаСФ КАК СерияБланкаСФ
			|ПОМЕСТИТЬ ОстаткиКонец
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаКонец КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.СерияБланкаСФ,
			|	БланкиСФОстатки.НомерБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНачало.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиНачало.СерияБланкаСФ КАК СерияБланкаСФ,
			|	ОстаткиНачало.БланкНомер КАК БланкНомер
			|ИЗ
			|	ОстаткиНачало КАК ОстаткиНачало
			|ГДЕ
			|	ОстаткиНачало.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиКонец.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиКонец.БланкНомер КАК БланкНомер,
			|	ОстаткиКонец.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ОстаткиКонец КАК ОстаткиКонец
			|ГДЕ
			|	ОстаткиКонец.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	0 КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	0 КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	0 КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоВсего),
			|	МИНИМУМ(БланкНомер)
			|ПО
			|	СерияБланкаСФ";
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);	
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ПараметрыВыборки = Новый Структура;
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[3]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьОстатокНачало);	
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[5]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьПолучено);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[6]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьИспользовано);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[7]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьУтеряно);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[8]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьИспорчено);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[9]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьПроизводственныйБрак);
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 		РезультатЗапроса[4]);
		ПараметрыВыборки.Вставить("Область", 	ОбластьОстатокКонец);	
		ОбработкаРезультатаЗапросаЛандшафт(ТабличныйДокумент, ПараметрыВыборки);	
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Функция формирует табличный документ с печатной формой ОтчетОбИспользованииБланковПодробный
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьОтчетаОбИспользованииБланковПодробный(МассивОбъектов, ОбъектыПечати)
	Для каждого ДокументСсылка Из МассивОбъектов Цикл	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ЧерноБелаяПечать = Истина;
		ТабличныйДокумент.ПолеСлева = 0;
		ТабличныйДокумент.КлючПараметровПечати = "ОтчетПоБланкамСчетовФактур_ОтчетОбИспользованииБланковПодробный";
		
		Организация = ДокументСсылка.Организация;
		КонецПериода = КонецМесяца(ДокументСсылка.Дата);
		
		Макет = ПолучитьМакет("ПФ_MXL_ОтчетОбИспользованииБланковПодробный");

		ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");	
		ОбластьШапкаТаблицы	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодписи		= Макет.ПолучитьОбласть("Подписи");	
		
		ОбластьШапка.Параметры.НаименованиеОрганизации = Организация.НаименованиеПолное;
		
		ОбластьШапка.Параметры.ИНН 						= Организация.ИНН;
		ОбластьШапка.Параметры.НаименованиеОрганизации 	= Организация.НаименованиеПолное;
		ОбластьШапка.Параметры.Адрес 					= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, КонецПериода);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Запрос = Новый Запрос;
		Запрос.Текст =		
			"ВЫБРАТЬ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.СерияБланкаСФ,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.НомерБланкаСФ,
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество > 0
			|			ТОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПриход,
			|	ВЫБОР
			|		КОГДА ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество < 0
			|			ТОГДА -ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоРасход
			|ПОМЕСТИТЬ ВременнаяТаблицаОбороты
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОбороты КАК ОтчетПоБланкамСчетовФактурБланкиСФОбороты
			|ГДЕ
			|	ОтчетПоБланкамСчетовФактурБланкиСФОбороты.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА4П,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА5П,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоВсего,
			|	БланкиСФОстатки.СерияБланкаСФ КАК СерияБланкаСФ,
			|	БланкиСФОстатки.НомерБланкаСФ КАК БланкНомер
			|ПОМЕСТИТЬ ОстаткиНачало
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаНачало КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.НомерБланкаСФ,
			|	БланкиСФОстатки.СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА4П,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоА5П,
			|	СУММА(БланкиСФОстатки.Количество) КАК КоличествоВсего,
			|	БланкиСФОстатки.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОстатки.СерияБланкаСФ КАК СерияБланкаСФ
			|ПОМЕСТИТЬ ОстаткиКонец
			|ИЗ
			|	Документ.ОтчетПоБланкамСчетовФактур.БланкиСФОстаткиНаКонец КАК БланкиСФОстатки
			|ГДЕ
			|	БланкиСФОстатки.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОстатки.СерияБланкаСФ,
			|	БланкиСФОстатки.НомерБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНачало.КоличествоА4Р КАК КоличествоА4Р,
			|	ОстаткиНачало.КоличествоА4П КАК КоличествоА4П,
			|	ОстаткиНачало.КоличествоА5Р КАК КоличествоА5Р,
			|	ОстаткиНачало.КоличествоА5П КАК КоличествоА5П,
			|	ОстаткиНачало.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиНачало.СерияБланкаСФ КАК СерияБланкаСФ,
			|	ОстаткиНачало.БланкНомер КАК БланкНомер
			|ИЗ
			|	ОстаткиНачало КАК ОстаткиНачало
			|ГДЕ
			|	ОстаткиНачало.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиКонец.КоличествоА4Р КАК КоличествоА4Р,
			|	ОстаткиКонец.КоличествоА4П КАК КоличествоА4П,
			|	ОстаткиКонец.КоличествоА5Р КАК КоличествоА5Р,
			|	ОстаткиКонец.КоличествоА5П КАК КоличествоА5П,
			|	ОстаткиКонец.КоличествоВсего КАК КоличествоВсего,
			|	ОстаткиКонец.БланкНомер КАК БланкНомер,
			|	ОстаткиКонец.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ОстаткиКонец КАК ОстаткиКонец
			|ГДЕ
			|	ОстаткиКонец.КоличествоВсего > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоПриход) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА5П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4Р,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоА4П,
			|	СУММА(БланкиСФОбороты.КоличествоРасход) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(0) КАК КоличествоА5Р,
			|	СУММА(0) КАК КоличествоА5П,
			|	СУММА(0) КАК КоличествоА4Р,
			|	СУММА(0) КАК КоличествоА4П,
			|	СУММА(0) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(0) КАК КоличествоА5Р,
			|	СУММА(0) КАК КоличествоА5П,
			|	СУММА(0) КАК КоличествоА4Р,
			|	СУММА(0) КАК КоличествоА4П,
			|	СУММА(0) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(0) КАК КоличествоА5Р,
			|	СУММА(0) КАК КоличествоА5П,
			|	СУММА(0) КАК КоличествоА4Р,
			|	СУММА(0) КАК КоличествоА4П,
			|	СУММА(0) КАК КоличествоВсего,
			|	БланкиСФОбороты.НомерБланкаСФ КАК БланкНомер,
			|	БланкиСФОбороты.СерияБланкаСФ КАК СерияБланкаСФ
			|ИЗ
			|	ВременнаяТаблицаОбороты КАК БланкиСФОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	БланкиСФОбороты.НомерБланкаСФ,
			|	БланкиСФОбороты.СерияБланкаСФ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерияБланкаСФ,
			|	БланкНомер
			|ИТОГИ
			|	СУММА(КоличествоА5Р),
			|	СУММА(КоличествоА5П),
			|	СУММА(КоличествоА4Р),
			|	СУММА(КоличествоА4П),
			|	СУММА(КоличествоВсего)
			|ПО
			|	СерияБланкаСФ";

		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);	
		
		Если ЗначениеЗаполнено(Организация) Тогда
			Запрос.УстановитьПараметр("Организация", Организация);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Истина");
		КонецЕсли;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		                                               
		ПараметрыВыборки = Новый Структура;
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[3]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	1);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Остаток на начало'"));
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[5]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	2);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Получено'"));	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[6]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	3);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Использовано'"));	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[7]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	4);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Испорчено'"));	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[8]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	5);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Утеряно'"));	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[9]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	6);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Производственный брак'"));	
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		ПараметрыВыборки.Вставить("Пакет", 			РезультатЗапроса[4]);
		ПараметрыВыборки.Вставить("НомерСтроки", 	7);
		ПараметрыВыборки.Вставить("Наименование", 	НСтр("ru = 'Остаток на конец'"));		
		ОбработкаРезультатаЗапросаПодробный(ТабличныйДокумент, Макет, ПараметрыВыборки);
		
		СтруктураРуководство = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Организация, КонецПериода);
		Если НЕ СтруктураРуководство.Свойство("Руководитель") = Неопределено Тогда
			ОбластьПодписи.Параметры.Руководитель 	= СтруктураРуководство.Руководитель;
		КонецЕсли;
		Если НЕ СтруктураРуководство.Свойство("ГлавныйБухгалтер") = Неопределено Тогда
			ОбластьПодписи.Параметры.Главбух 		= СтруктураРуководство.ГлавныйБухгалтер;
		КонецЕсли;
			
		ОбластьПодписи.Параметры.ТелефонОрганизации	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, КонецПериода);
		ОбластьПодписи.Параметры.Год				= СтрЗаменить(Строка(Год(КонецПериода)), Символы.НПП, "") + " г.";
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланков") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланков", 
		НСтр("ru = 'Отчет об использовании бланков счетов-фактур'"), 
		ПечатьОтчетаОбИспользованииБланков(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланков");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланковЛандшафт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланковЛандшафт", 
		НСтр("ru = 'Отчет об использовании бланков счетов-фактур (ландшафт)'"), 
		ПечатьОтчетаОбИспользованииБланковЛандшафт(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланковЛандшафт");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОбИспользованииБланковПодробный") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ОтчетОбИспользованииБланковПодробный", 
		НСтр("ru = 'Отчет об использовании бланков счетов-фактур (подробный)'"), 
		ПечатьОтчетаОбИспользованииБланковПодробный(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.ОтчетПоБланкамСчетовФактур.ПФ_MXL_ОтчетОбИспользованииБланковПодробный");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланков";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
		
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланковЛандшафт";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур (ландшафт)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОбИспользованииБланковПодробный";
	КомандаПечати.Представление = НСтр("ru = 'Отчет об использовании бланков счетов-фактур (подробный)'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 3;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли