#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыПроведенияДокумента

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСотрудники(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.ФизЛицо,
		|	ВременнаяТаблицаШапка.Подразделение,
		|	ВременнаяТаблицаШапка.Должность,
		|	ВременнаяТаблицаШапка.ЗанимаемыхСтавок,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение) КАК ВидСобытия,
		|	ВременнаяТаблицаШапка.ГрафикРаботы,
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), СЕКУНДА, -1) КАК ДатаОкончания
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудникиСрезПоследних КАК СотрудникиСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ(ВременнаяТаблицаШапка.Подразделение = СотрудникиСрезПоследних.Подразделение
		|				И ВременнаяТаблицаШапка.Должность = СотрудникиСрезПоследних.Должность
		|				И ВременнаяТаблицаШапка.ГрафикРаботы = СотрудникиСрезПоследних.ГрафикРаботы
		|				И ВременнаяТаблицаШапка.ЗанимаемыхСтавок = СотрудникиСрезПоследних.ЗанимаемыхСтавок)";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);	
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Период);	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСотрудники", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаСотрудники()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлановыеНачисленияНачало(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// 1. Таблица по основному виду начисления, если есть изменения
	// 2. Таблица по дополнительным видам начисления, только начать
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ВременнаяТаблицаШапка.Период КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаШапка.ВидРасчета КАК ВидРасчета,
		|	ВременнаяТаблицаШапка.Валюта КАК Валюта,
		|	ВременнаяТаблицаШапка.Размер КАК Размер,
		|	ИСТИНА КАК Основной,
		|	ВременнаяТаблицаШапка.Подразделение КАК Подразделение,
		|	ВременнаяТаблицаШапка.Должность КАК Должность,
		|	ВременнаяТаблицаШапка.ГрафикРаботы КАК ГрафикРаботы
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально КАК ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудникиСрезПоследних КАК СотрудникиСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Основной
		|	И НЕ(ВременнаяТаблицаШапка.ВидРасчета = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.ВидРасчета
		|				И ВременнаяТаблицаШапка.Валюта = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Валюта
		|				И ВременнаяТаблицаШапка.Размер = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Размер
		|				И ВременнаяТаблицаШапка.Подразделение = СотрудникиСрезПоследних.Подразделение
		|				И ВременнаяТаблицаШапка.Должность = СотрудникиСрезПоследних.Должность
		|				И ВременнаяТаблицаШапка.ГрафикРаботы = СотрудникиСрезПоследних.ГрафикРаботы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ВременнаяТаблицаШапка.Период,
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.ФизЛицо,
		|	ВременнаяТаблицаНачисления.ВидРасчета,
		|	ВременнаяТаблицаНачисления.Валюта,
		|	ВременнаяТаблицаНачисления.Размер,
		|	ЛОЖЬ,
		|	ВременнаяТаблицаШапка.Подразделение,
		|	ВременнаяТаблицаШапка.Должность,
		|	ВременнаяТаблицаШапка.ГрафикРаботы
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНачисления КАК ВременнаяТаблицаНачисления
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаНачисления.ВидДействия = ЗНАЧЕНИЕ(Перечисление.ВидыДействияНачисленийУдержаний.Начать)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлановыеНачисленияНачало", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаПлановыеНачисленияНачало()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлановыеНачисленияОкончание(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	// 1. Таблица по основному виду начисления, если есть изменения
	// 2. Таблица по дополнительным видам начисления, только прекратить
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Порядок,
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВременнаяТаблицаШапка.Период, ДЕНЬ), СЕКУНДА, -1) КАК Период,
		|	ВременнаяТаблицаШапка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.ВидРасчета КАК ВидРасчета,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Размер КАК Размер,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Регистратор КАК ДокументСсылка,
		|	ИСТИНА КАК Основной
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально КАК ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудникиСрезПоследних КАК СотрудникиСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Основной
		|	И НЕ(ВременнаяТаблицаШапка.ВидРасчета = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.ВидРасчета
		|				И ВременнаяТаблицаШапка.Размер = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Размер
		|				И ВременнаяТаблицаШапка.Подразделение = СотрудникиСрезПоследних.Подразделение
		|				И ВременнаяТаблицаШапка.Должность = СотрудникиСрезПоследних.Должность
		|				И ВременнаяТаблицаШапка.ГрафикРаботы = СотрудникиСрезПоследних.ГрафикРаботы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВременнаяТаблицаШапка.Период, ДЕНЬ), СЕКУНДА, -1),
		|	ВременнаяТаблицаШапка.Организация,
		|	ВременнаяТаблицаШапка.ФизЛицо,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.ВидРасчета,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Размер,
		|	ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Регистратор,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаНачисления КАК ВременнаяТаблицаНачисления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально КАК ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально
		|			ПО ВременнаяТаблицаНачисления.ВидРасчета = ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.ВидРасчета
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально.Основной
		|	И ВременнаяТаблицаНачисления.ВидДействия = ЗНАЧЕНИЕ(Перечисление.ВидыДействияНачисленийУдержаний.Прекратить)";
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлановыеНачисленияОкончание", РезультатЗапроса.Выгрузить());
КонецПроцедуры // СформироватьТаблицаПлановыеНачисленияОкончание()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.Период КАК Период,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ФизЛицо КАК ФизЛицо,
		|	ТаблицаДокумента.Подразделение КАК Подразделение,
		|	ТаблицаДокумента.Должность КАК Должность,
		|	ТаблицаДокумента.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
		|	ТаблицаДокумента.ГрафикРаботы КАК ГрафикРаботы,
		|	ТаблицаДокумента.ВидРасчета КАК ВидРасчета,
		|	ТаблицаДокумента.Валюта КАК Валюта,
		|	ТаблицаДокумента.Размер КАК Размер
		|ПОМЕСТИТЬ ВременнаяТаблицаШапка
		|ИЗ
		|	Документ.КадровоеПеремещение КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ВидРасчета КАК ВидРасчета,
		|	ТаблицаДокумента.Валюта КАК Валюта,
		|	ТаблицаДокумента.ВидДействия КАК ВидДействия,
		|	ТаблицаДокумента.Размер КАК Размер
		|ПОМЕСТИТЬ ВременнаяТаблицаНачисления
		|ИЗ
		|	Документ.КадровоеПеремещение.Начисления КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	СотрудникиСрезПоследних.Подразделение КАК Подразделение,
		|	СотрудникиСрезПоследних.Должность КАК Должность,
		|	СотрудникиСрезПоследних.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
		|	СотрудникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
		|	СотрудникиСрезПоследних.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВременнаяТаблицаСотрудникиСрезПоследних
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&Период,
		|			(Организация, ФизЛицо) В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.Организация,
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК СотрудникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияНачалоСрезПоследних.Регистратор КАК Регистратор,
		|	ПлановыеНачисленияНачалоСрезПоследних.ВидРасчета КАК ВидРасчета,
		|	ПлановыеНачисленияНачалоСрезПоследних.Валюта КАК Валюта,
		|	ПлановыеНачисленияНачалоСрезПоследних.Размер КАК Размер,
		|	ПлановыеНачисленияНачалоСрезПоследних.Основной КАК Основной
		|ПОМЕСТИТЬ ВременнаяТаблицаСрезПлановыеНачисленияНачалоАктуально
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияНачало.СрезПоследних(
		|			&Период,
		|			(Организация, ФизЛицо) В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаШапка.Организация,
		|						ВременнаяТаблицаШапка.ФизЛицо
		|					ИЗ
		|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|				И НЕ Регистратор = &Ссылка) КАК ПлановыеНачисленияНачалоСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияОкончание.СрезПоследних(
		|				&Период,
		|				(Организация, ФизЛицо) В
		|						(ВЫБРАТЬ
		|							ВременнаяТаблицаШапка.Организация,
		|							ВременнаяТаблицаШапка.ФизЛицо
		|						ИЗ
		|							ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)
		|					И НЕ Регистратор = &Ссылка) КАК ПлановыеНачисленияОкончаниеСрезПоследних
		|		ПО ПлановыеНачисленияНачалоСрезПоследних.Организация = ПлановыеНачисленияОкончаниеСрезПоследних.Организация
		|			И ПлановыеНачисленияНачалоСрезПоследних.ФизЛицо = ПлановыеНачисленияОкончаниеСрезПоследних.ФизЛицо
		|			И ПлановыеНачисленияНачалоСрезПоследних.ВидРасчета = ПлановыеНачисленияОкончаниеСрезПоследних.ВидРасчета
		|			И ПлановыеНачисленияНачалоСрезПоследних.Регистратор = ПлановыеНачисленияОкончаниеСрезПоследних.ДокументСсылка
		|ГДЕ
		|	ПлановыеНачисленияОкончаниеСрезПоследних.Организация ЕСТЬ NULL";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Период);  
	Запрос.УстановитьПараметр("ФизЛицо", СтруктураДополнительныеСвойства.ДляПроведения.ФизЛицо);

	Запрос.Выполнить();
	
	СформироватьТаблицаСотрудники(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПлановыеНачисленияНачало(ДокументСсылка, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПлановыеНачисленияОкончание(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//@skip-warning
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Функция формирует табличный документ с печатной формой ФормаИнвентаризационнаяОписьИНВ19
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказа(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Организация КАК Организация,
		|	Сотрудники.ФизЛицо КАК ФизЛицо,
		|	Сотрудники.Период КАК Период,
		|	Сотрудники.Подразделение.Наименование КАК ПрежнееПодразделение,
		|	Сотрудники.Должность.Наименование КАК ПрежняяДолжность,
		|	Сотрудники.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВременнаяТаблицаСотрудники
		|ИЗ
		|	РегистрСведений.Сотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровоеПеремещение.Ссылка КАК Ссылка,
		|	КадровоеПеремещение.Дата КАК Дата,
		|	КадровоеПеремещение.Номер КАК Номер,
		|	КадровоеПеремещение.Организация КАК Организация,
		|	КадровоеПеремещение.Организация.КодПоОКПО КАК КодПоОКПО,
		|	КадровоеПеремещение.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	КадровоеПеремещение.Период КАК ДатаНачала,
		|	КадровоеПеремещение.ФизЛицо КАК ФизЛицо,
		|	КадровоеПеремещение.ФизЛицо.Код КАК ТабельныйНомер,
		|	КадровоеПеремещение.Подразделение.Наименование КАК НовоеПодразделение,
		|	КадровоеПеремещение.Должность.Наименование КАК НоваяДолжность,
		|	КадровоеПеремещение.Размер КАК Размер,
		|	ВЫРАЗИТЬ(КадровоеПеремещение.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		|	МАКСИМУМ(ВременнаяТаблицаСотрудники.Период) КАК Период,
		|	МАКСИМУМ(ВременнаяТаблицаСотрудникиПрием.Период) КАК ПериодПрием
		|ПОМЕСТИТЬ ВременнаяТаблицаМаксПериод
		|ИЗ
		|	Документ.КадровоеПеремещение КАК КадровоеПеремещение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники
		|		ПО КадровоеПеремещение.Организация = ВременнаяТаблицаСотрудники.Организация
		|			И КадровоеПеремещение.ФизЛицо = ВременнаяТаблицаСотрудники.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(КадровоеПеремещение.Период, ДЕНЬ) > ВременнаяТаблицаСотрудники.Период)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудникиПрием
		|		ПО КадровоеПеремещение.Организация = ВременнаяТаблицаСотрудникиПрием.Организация
		|			И КадровоеПеремещение.ФизЛицо = ВременнаяТаблицаСотрудникиПрием.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(КадровоеПеремещение.Период, ДЕНЬ) > ВременнаяТаблицаСотрудникиПрием.Период)
		|			И (ВременнаяТаблицаСотрудникиПрием.Регистратор ССЫЛКА Документ.ПриемНаРаботу)
		|ГДЕ
		|	КадровоеПеремещение.Ссылка В(&СписокДокументов)
		|
		|СГРУППИРОВАТЬ ПО
		|	КадровоеПеремещение.Ссылка,
		|	КадровоеПеремещение.Дата,
		|	КадровоеПеремещение.Номер,
		|	КадровоеПеремещение.Организация,
		|	КадровоеПеремещение.Организация.КодПоОКПО,
		|	КадровоеПеремещение.Организация.НаименованиеПолное,
		|	КадровоеПеремещение.Период,
		|	КадровоеПеремещение.ФизЛицо,
		|	КадровоеПеремещение.ФизЛицо.Код,
		|	КадровоеПеремещение.Размер,
		|	ВЫРАЗИТЬ(КадровоеПеремещение.Комментарий КАК СТРОКА(1000)),
		|	КадровоеПеремещение.Подразделение.Наименование,
		|	КадровоеПеремещение.Должность.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаМаксПериод.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаМаксПериод.Дата КАК Дата,
		|	ВременнаяТаблицаМаксПериод.Номер КАК Номер,
		|	ВременнаяТаблицаМаксПериод.Организация КАК Организация,
		|	ВременнаяТаблицаМаксПериод.КодПоОКПО КАК КодПоОКПО,
		|	ВременнаяТаблицаМаксПериод.ОрганизацияНаименованиеПолное КАК ПредставлениеОрганизации,
		|	ВременнаяТаблицаМаксПериод.ДатаНачала КАК ДатаНачала,
		|	ВременнаяТаблицаМаксПериод.ФизЛицо КАК ФизЛицо,
		|	ВременнаяТаблицаМаксПериод.ТабельныйНомер КАК ТабельныйНомер,
		|	ВременнаяТаблицаМаксПериод.НовоеПодразделение КАК НовоеПодразделение,
		|	ВременнаяТаблицаМаксПериод.НоваяДолжность КАК НоваяДолжность,
		|	ВременнаяТаблицаМаксПериод.Размер КАК Размер,
		|	ВременнаяТаблицаМаксПериод.Комментарий КАК ПричинаПеревода,
		|	ВременнаяТаблицаСотрудники.ПрежнееПодразделение КАК ПрежнееПодразделение,
		|	ВременнаяТаблицаСотрудники.ПрежняяДолжность КАК ПрежняяДолжность,
		|	ВременнаяТаблицаСотрудники.Период КАК Период,
		|	ВременнаяТаблицаСотрудникиПрием.Регистратор.Номер КАК НомерТрудовогоДоговора
		|ИЗ
		|	ВременнаяТаблицаМаксПериод КАК ВременнаяТаблицаМаксПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудники
		|		ПО ВременнаяТаблицаМаксПериод.Организация = ВременнаяТаблицаСотрудники.Организация
		|			И ВременнаяТаблицаМаксПериод.ФизЛицо = ВременнаяТаблицаСотрудники.ФизЛицо
		|			И ВременнаяТаблицаМаксПериод.Период = ВременнаяТаблицаСотрудники.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСотрудники КАК ВременнаяТаблицаСотрудникиПрием
		|		ПО ВременнаяТаблицаМаксПериод.Организация = ВременнаяТаблицаСотрудникиПрием.Организация
		|			И ВременнаяТаблицаМаксПериод.ФизЛицо = ВременнаяТаблицаСотрудникиПрием.ФизЛицо
		|			И ВременнаяТаблицаМаксПериод.ПериодПрием = ВременнаяТаблицаСотрудникиПрием.Период";	
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "КадровоеПеремещение_ПриказНаСотрудника";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КадровоеПеремещение.ПФ_MXL_ПриказОПереводеРаботникаНаДругуюРаботу");		
	
	Пока Выборка.Следующий()  Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли; 
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Выборка.Организация);
		Отбор.Вставить("ФизЛицо", Выборка.ФизЛицо);
		
		НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер);
		
		// Подготовка данных
		ДанныеПечати = Новый Структура;

		ДанныеПечати.Вставить("НомерДокумента", НомерНаПечать);
		ДанныеПечати.Вставить("ПрежнееПодразделение", Выборка.ПрежнееПодразделение);
		ДанныеПечати.Вставить("ПрежняяДолжность", Выборка.ПрежняяДолжность);
		ДанныеПечати.Вставить("ДатаДокумента", Выборка.Дата);
		ДанныеПечати.Вставить("ДатаТрудовогоДоговора", Формат(Выборка.Период, "ДЛФ=D") + НСтр("ru = ' года'"));
		ДанныеПечати.Вставить("НомерТрудовогоДоговора", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерТрудовогоДоговора));
		ДанныеПечати.Вставить("ДатаНачала", Выборка.ДатаНачала);
		ДанныеПечати.Вставить("ОкладЦелаяЧасть", Цел(Выборка.Размер));
		ДанныеПечати.Вставить("ОкладДробнаяЧасть", Выборка.Размер - Цел(Выборка.Размер));
		
		Руководители = БухгалтерскийУчетСервер.ОтветственныеЛицаОрганизацийРуководители(Выборка.Организация, Выборка.Дата);
		
		ДанныеПечати.Вставить("ФИОРуководителя", Руководители.Руководитель);
		ДанныеПечати.Вставить("ДолжностьРуководителя", Руководители.РуководительДолжность);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказОПереводеРаботникаНаДругуюРаботу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПриказОПереводеРаботникаНаДругуюРаботу", 
		НСтр("ru = 'Приказ о переводе работника на другую работу'"), 
		ПечатьПриказа(МассивОбъектов, ОбъектыПечати),
		,
		"Документ.КадровоеПеремещение.ПФ_MXL_ПриказОПереводеРаботникаНаДругуюРаботу");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриказОПереводеРаботникаНаДругуюРаботу";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о переводе работника на другую работу'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли