#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ЗаполненияДокумента

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - ДокументСсылка.ПоступлениеТоваровУслуг - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюАрендованныхОС(ДанныеЗаполнения) Экспорт
	
	ДокументОснование = ДанныеЗаполнения;

	Организация = ДанныеЗаполнения.Организация;
	СчетУчета = ДанныеЗаполнения.СчетУчета;
	ОС.Загрузить(ДокументОснование.ОС.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
			
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеАрендованныхОС")] = "ЗаполнитьПоПоступлениюАрендованныхОС";
	
	ЗаполнениеОбъектовБП.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("ОС");
	
	// Выполнение предварительного контроля.
	ВыполнитьПредварительныйКонтроль(Отказ);
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьДанные(Отказ, РежимПроведения);
	
	ОтразитьДвижения(Отказ, РежимПроведения);

	// Запись наборов записей.
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	БухгалтерскийУчетСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
КонецПроцедуры // ОбработкаУдаленияПроведения()
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбработкаПроведения

// Процедура инициализирует данные документа
// и подготавливает таблицы для движения в регистры
//
Процедура ИнициализироватьДанные(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	БухгалтерскийУчетСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.ВозвратАрендованныхОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Подготовка наборов записей.
	БухгалтерскийУчетСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
КонецПроцедуры
	
// Процедура заполняет регистры данными
//
Процедура ОтразитьДвижения(Отказ, РежимПроведения)
	
	// Отражение в разделах учета.
	БухгалтерскийУчетСервер.ОтразитьСостоянияОСВАренде(ДополнительныеСвойства, Движения, Отказ);
	БухгалтерскийУчетСервер.ОтразитьХозрасчетный(ДополнительныеСвойства, Движения, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВременнаяТаблицаОС
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВременнаяТаблицаОС1.НомерСтроки) КАК НомерСтроки,
		|	ВременнаяТаблицаОС1.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ПО ВременнаяТаблицаОС1.НомерСтроки <> ВременнаяТаблицаОС.НомерСтроки
		|			И ВременнаяТаблицаОС1.ОсновноеСредство = ВременнаяТаблицаОС.ОсновноеСредство
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаОС1.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ЕСТЬNULL(СостоянияОСВАрендеСрезПоследних.Состояние, &ПустоеСостояние) КАК Состояние
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСВАренде.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВременнаяТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ВременнаяТаблицаОС КАК ВременнаяТаблицаОС)
		|					И НЕ Регистратор = &Ссылка) КАК СостоянияОСВАрендеСрезПоследних
		|		ПО ВременнаяТаблицаОС.ОсновноеСредство = СостоянияОСВАрендеСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СостоянияОСВАрендеСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОСВАренде.Выбыло)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", ОС);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустоеСостояние", НСтр("ru = 'Без поступления'"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Дубли строк ОС.
	ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство указывается повторно в строке %1 списка ""ОС"".'"), 
						ВыборкаИзРезультатаЗапроса.НомерСтроки);
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			"ОС",
			ВыборкаИзРезультатаЗапроса.НомерСтроки,
			"ОсновноеСредство",
			Отказ);
	КонецЦикла;
	
	// Проверка состояния ОС.
	ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Для основного средства ""%1"", указанного в строке %2 списка ""ОС"", текущее состояние ""%3"".'"), 
			ВыборкаИзРезультатаЗапроса.ОсновноеСредство,
			ВыборкаИзРезультатаЗапроса.НомерСтроки,
			ВыборкаИзРезультатаЗапроса.Состояние);
			
		БухгалтерскийУчетСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			"ОС",
			ВыборкаИзРезультатаЗапроса.НомерСтроки,
			"ОсновноеСредство",
			Отказ);
	КонецЦикла;
		
КонецПроцедуры // ВыполнитьПредварительныйКонтроль()

#КонецОбласти
	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
